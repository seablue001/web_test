{"version":3,"sources":["webpack:///./src/views/Home.vue?b281","webpack:///./src/components/home/RankList.vue?f5fa","webpack:///./src/components/home/Banner.vue?b39d","webpack:///./src/views/Home.vue?3f27","webpack:///./src/components/home/Banner.vue?e181","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/home/Banner.vue","webpack:///./src/components/home/Banner.vue?fdbe","webpack:///./src/components/home/Banner.vue","webpack:///./src/components/home/RankList.vue?e5be","webpack:///src/components/home/RankList.vue","webpack:///./src/components/home/RankList.vue?a60d","webpack:///./src/components/home/RankList.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?14ce","webpack:///./src/views/Home.vue"],"names":["_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_a9bef3e8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_a9bef3e8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_RankList_vue_vue_type_style_index_0_id_3b1ab376_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_RankList_vue_vue_type_style_index_0_id_3b1ab376_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_Banner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_0_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_0_vue_loader_lib_index_js_vue_loader_options_Banner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","Homevue_type_template_id_a9bef3e8_scoped_true_render","_vm","this","_h","$createElement","_c","_self","staticClass","style","attrs","id","ref","bannerList","banner","songsList","rank","songlist","domProps","textContent","_s","loadTips","curLoadTips","staticRenderFns","Bannervue_type_template_id_7abbd2cf_render","_l","index","key","src","picUrl","Bannervue_type_template_id_7abbd2cf_staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","swiper_esm_bundle","Bannervue_type_script_lang_js_","default","require","mounted","methods","_initBanner","$nextTick","home_Bannervue_type_script_lang_js_","component","componentNormalizer","Banner","RankListvue_type_template_id_3b1ab376_scoped_true_render","_m","song","$event","addPlayList","songmid","directives","rawName","albummid","expression","singer","songname","RankListvue_type_template_id_3b1ab376_scoped_true_staticRenderFns","_v","RankListvue_type_script_lang_js_","required","objectSpread","vuex_esm","_ref","_ref$data","ADD_TO_SONG_LIST","home_RankListvue_type_script_lang_js_","RankList_component","RankList","Homevue_type_script_lang_js_","iscroll","code","total_song_num","isFirstFetch","stp1","stp2","stp3","stp4","isEndScroll","computed","curSong","hasMore","created","getBannerList","updateRankList","_this","iscroll_probe_default","mouseWheel","useTransform","useTransition","disableMouse","disablePointer","disableTouch","tap","probeType","maxScrollY","scrollTo","_this2","http","get","api","home","then","slider","$refs","_this3","beginNum","refresh","concat","_ref2","calcDateStr","timeStamp","year","getFullYear","month","getMonth","day","getDate","views_Homevue_type_script_lang_js_","Home_component","__webpack_exports__"],"mappings":"kHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAorBE,EAAG,uCCAvrB,IAAAE,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GAA6sBC,EAAG,yFCAhtB,IAAAC,EAAAL,EAAA,QAAAM,EAAAN,EAAAE,EAAAG,GAAmrBC,EAAG,qECAtrB,IAAIC,EAAM,WAAgB,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,QAAmB,CAAAF,EAAA,OAAYG,MAAAP,EAAA,WAAAQ,MAAA,CAA8BC,GAAA,kBAAsB,CAAAL,EAAA,OAAYE,YAAA,cAAyB,CAAAF,EAAA,UAAeM,IAAA,SAAAF,MAAA,CAAoBG,WAAAX,EAAAY,UAAyBR,EAAA,YAAiBI,MAAA,CAAOK,UAAAb,EAAAc,KAAAC,YAA+BX,EAAA,KAAUE,YAAA,UAAAU,SAAA,CAAgCC,YAAAjB,EAAAkB,GAAAlB,EAAAmB,SAAAnB,EAAAoB,kBAAqD,QACpbC,EAAA,4DCDIC,EAAM,WAAgB,IAAAtB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,UAAqB,CAAAF,EAAA,OAAYE,YAAA,oBAA+B,CAAAF,EAAA,OAAYE,YAAA,kBAA6BN,EAAAuB,GAAAvB,EAAA,oBAAAY,EAAAY,GAAgD,OAAApB,EAAA,OAAiBqB,IAAAb,EAAAH,GAAAH,YAAA,gBAAyC,CAAAF,EAAA,OAAYI,MAAA,CAAOkB,IAAAd,EAAAe,cAAyB,GAAAvB,EAAA,OAAeE,YAAA,2BACpXsB,EAAe,GCUnBC,EAAA,qBAAAC,SAAA,CACAC,KAAA,GACAC,iBAAA,aACAC,oBAAA,aACAC,cAAA,CACAC,KAAA,aACAC,SAAA,IAEAC,cAAA,WACA,aAEAC,iBAAA,WACA,UAEAC,eAAA,WACA,aAEAC,YAAA,WACA,OACAC,UAAA,eAGAC,cAAA,WACA,OACAC,SAAA,GACAC,WAAA,GACArC,MAAA,GACAsC,aAAA,aACAC,qBAAA,WACA,YAIAC,SAAA,CAAaC,KAAA,KACZlB,SAEDmB,EAAA,qBAAAC,OAAA,CACApB,SAAAD,EACAsB,UAAA,CACAC,UAAA,IAEAL,SAAA,GACAM,QAAA,GACAC,YAAA,WACA,OAAArD,MAEA+B,iBAAA,aACAC,oBAAA,aACAsB,iBAAA,WACA,OACAC,iBAAA,WACA,YAIAC,MAAA,aACAC,KAAA,aACAC,OAAA,GACAC,WAAA,aACAC,aAAA,cACCX,OCxDD,MAAAY,EACAC,YAAAC,GACA,MAAAC,EAAAhE,KAEA,QAAAiE,EAAA,EAAmBA,EAAAF,EAAAG,OAAgBD,GAAA,EACnCD,EAAAC,GAAAF,EAAAE,GAIA,OAFAD,EAAAE,OAAAH,EAAAG,OAEAlE,MAIA,SAAAmE,EAAAC,EAAAC,GACA,MAAAN,EAAA,GACA,IAAAE,EAAA,EACA,GAAAG,IAAAC,GACAD,aAAAP,EACA,OAAAO,EAGA,GAAAA,EAEA,qBAAAA,EAAA,CACA,IAAAE,EACAC,EACA,MAAAC,EAAAJ,EAAAK,OACA,GAAAD,EAAAE,QAAA,SAAAF,EAAAE,QAAA,SACA,IAAAC,EAAA,MAQA,IAPA,IAAAH,EAAAE,QAAA,SAAAC,EAAA,MACA,IAAAH,EAAAE,QAAA,SAAAC,EAAA,SACA,IAAAH,EAAAE,QAAA,YAAAF,EAAAE,QAAA,SAAAC,EAAA,MACA,IAAAH,EAAAE,QAAA,YAAAC,EAAA,SACA,IAAAH,EAAAE,QAAA,aAAAC,EAAA,UACAJ,EAAqB3C,EAAQa,cAAAkC,GAC7BJ,EAAAK,UAAAJ,EACAP,EAAA,EAAmBA,EAAAM,EAAA5B,WAAAuB,OAAkCD,GAAA,EACrDF,EAAAc,KAAAN,EAAA5B,WAAAsB,SAUA,IAFAK,EALAD,GAAA,MAAAD,EAAA,IAAAA,EAAAU,MAAA,aAKAT,GAA4BzC,GAAQS,iBAAA+B,EAAAK,QAHpC,CAAiB7C,EAAQU,eAAA8B,EAAAK,OAAAM,MAAA,UAKzBd,EAAA,EAAmBA,EAAAK,EAAAJ,OAAgBD,GAAA,EACnCK,EAAAL,IAAAF,EAAAc,KAAAP,EAAAL,SAGK,GAAAG,EAAAY,UAAAZ,IAA4CpB,GAAMoB,IAAiBxC,EAExEmC,EAAAc,KAAAT,QACK,GAAAA,EAAAF,OAAA,GAAAE,EAAA,GAAAY,SAEL,IAAAf,EAAA,EAAiBA,EAAAG,EAAAF,OAAqBD,GAAA,EACtCF,EAAAc,KAAAT,EAAAH,IAIA,WAAAJ,EAAAE,GAOA,SAAAkB,EAAAlB,GACA,MAAAmB,EAAA,GACA,QAAAjB,EAAA,EAAiBA,EAAAF,EAAAG,OAAgBD,GAAA,GACjC,IAAAiB,EAAAR,QAAAX,EAAAE,KAAAiB,EAAAL,KAAAd,EAAAE,IAEA,OAAAiB,EAkBA,SAAAC,EAAAC,GACA,wBAAAA,EACA,OAAApF,KAEA,MAAAqF,EAAAD,EAAAL,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAoB,EAAAnB,OAAoBD,GAAA,EACrC,QAAAqB,EAAA,EAAmBA,EAAAtF,KAAAkE,OAAiBoB,GAAA,EACpC,qBAAAtF,KAAAsF,IAAA,qBAAAtF,KAAAsF,GAAAC,WAAAvF,KAAAsF,GAAAC,UAAAC,IAAAH,EAAApB,IAGA,OAAAjE,KAEA,SAAAyF,EAAAL,GACA,MAAAC,EAAAD,EAAAL,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAoB,EAAAnB,OAAoBD,GAAA,EACrC,QAAAqB,EAAA,EAAmBA,EAAAtF,KAAAkE,OAAiBoB,GAAA,EACpC,qBAAAtF,KAAAsF,IAAA,qBAAAtF,KAAAsF,GAAAC,WAAAvF,KAAAsF,GAAAC,UAAAG,OAAAL,EAAApB,IAGA,OAAAjE,KAEA,SAAA2F,EAAAP,GACA,QAAApF,KAAA,IACAA,KAAA,GAAAuF,UAAAK,SAAAR,GAEA,SAAAS,EAAAT,GACA,MAAAC,EAAAD,EAAAL,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAoB,EAAAnB,OAAoBD,GAAA,EACrC,QAAAqB,EAAA,EAAmBA,EAAAtF,KAAAkE,OAAiBoB,GAAA,EACpC,qBAAAtF,KAAAsF,IAAA,qBAAAtF,KAAAsF,GAAAC,WAAAvF,KAAAsF,GAAAC,UAAAO,OAAAT,EAAApB,IAGA,OAAAjE,KAEA,SAAA+F,EAAAxF,EAAAyF,GACA,OAAAC,UAAA/B,QAAA,kBAAA3D,EAEA,OAAAP,KAAA,GAAAA,KAAA,GAAAkG,aAAA3F,QACA,EAIA,QAAA0D,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClC,OAAAgC,UAAA/B,OAEAlE,KAAAiE,GAAArB,aAAArC,EAAAyF,QAIA,UAAAG,KAAA5F,EACAP,KAAAiE,GAAAkC,GAAA5F,EAAA4F,GACAnG,KAAAiE,GAAArB,aAAAuD,EAAA5F,EAAA4F,IAIA,OAAAnG,KAGA,SAAAoG,EAAAL,GACA,QAAA9B,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClCjE,KAAAiE,GAAAoC,gBAAAN,GAEA,OAAA/F,KAwBA,SAASsG,EAAI9E,EAAAwE,GACb,IAAAO,EACA,wBAAAP,EAAA,CAkBA,QAAA/B,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClCsC,EAAAvG,KAAAiE,GACAsC,EAAAC,yBAAAD,EAAAC,uBAAA,IACAD,EAAAC,uBAAAhF,GAAAwE,EAEA,OAAAhG,KApBA,GAFAuG,EAAAvG,KAAA,GAEAuG,EAAA,CACA,GAAAA,EAAAC,wBAAAhF,KAAA+E,EAAAC,uBACA,OAAAD,EAAAC,uBAAAhF,GAGA,MAAAiF,EAAAF,EAAAL,qBAA8C1E,KAC9C,OAAAiF,QAGA,GA8EA,SAASC,EAASC,GAClB,QAAA1C,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,GAClC,MAAA2C,EAAA5G,KAAAiE,GAAA3D,MACAsG,EAAAC,gBAAAF,EACAC,EAAAD,YAEA,OAAA3G,KAEA,SAAA8G,EAAAC,GACA,kBAAAA,IACAA,KAAkBA,OAElB,QAAA9C,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,GAClC,MAAA2C,EAAA5G,KAAAiE,GAAA3D,MACAsG,EAAAI,yBAAAD,EACAH,EAAAK,mBAAAF,EAEA,OAAA/G,KAGA,SAAAkH,KAAAC,GACA,IAAAC,EAAAC,EAAAC,EAAAC,GAAAJ,EAOA,SAAAK,EAAAC,GACA,MAAAC,EAAAD,EAAAC,OACA,IAAAA,EAAA,OACA,MAAAC,EAAAF,EAAAC,OAAAE,eAAA,GAIA,GAHAD,EAAAjD,QAAA+C,GAAA,GACAE,EAAAE,QAAAJ,GAEAtD,EAAAuD,GAAAI,GAAAT,GAAAC,EAAAS,MAAAL,EAAAC,OACA,CACA,MAAAK,EAAA7D,EAAAuD,GAAAM,UACA,QAAAC,EAAA,EAAqBA,EAAAD,EAAA9D,OAAoB+D,GAAA,EACzC9D,EAAA6D,EAAAC,IAAAH,GAAAT,IAAAC,EAAAS,MAAAC,EAAAC,GAAAN,IAIA,SAAAO,EAAAT,GACA,MAAAE,EAAAF,KAAAC,QAAAD,EAAAC,OAAAE,eAAA,GACAD,EAAAjD,QAAA+C,GAAA,GACAE,EAAAE,QAAAJ,GAEAH,EAAAS,MAAA/H,KAAA2H,GA1BA,oBAAAR,EAAA,MACAC,EAAAE,EAAAC,GAAAJ,EACAE,OAAAc,GAEAZ,OAAA,GAwBA,MAAAa,EAAAhB,EAAArC,MAAA,KACA,IAAAO,EACA,QAAArB,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,GAClC,MAAAsC,EAAAvG,KAAAiE,GACA,GAAAoD,EAaA,IAAA/B,EAAA,EAAiBA,EAAA8C,EAAAlE,OAAmBoB,GAAA,GACpC,MAAA+C,EAAAD,EAAA9C,GACAiB,EAAA+B,oBAAA/B,EAAA+B,kBAAA,IACA/B,EAAA+B,kBAAAD,KAAA9B,EAAA+B,kBAAAD,GAAA,IACA9B,EAAA+B,kBAAAD,GAAAxD,KAAA,CACAyC,WACAiB,cAAAf,IAEAjB,EAAAxE,iBAAAsG,EAAAb,EAAAD,QApBA,IAAAjC,EAAA,EAAiBA,EAAA8C,EAAAlE,OAAmBoB,GAAA,GACpC,MAAA+C,EAAAD,EAAA9C,GACAiB,EAAAiC,gBAAAjC,EAAAiC,cAAA,IACAjC,EAAAiC,cAAAH,KAAA9B,EAAAiC,cAAAH,GAAA,IACA9B,EAAAiC,cAAAH,GAAAxD,KAAA,CACAyC,WACAiB,cAAAL,IAEA3B,EAAAxE,iBAAAsG,EAAAH,EAAAX,IAgBA,OAAAvH,KAEA,SAAAyI,KAAAtB,GACA,IAAAC,EAAAC,EAAAC,EAAAC,GAAAJ,EACA,oBAAAA,EAAA,MACAC,EAAAE,EAAAC,GAAAJ,EACAE,OAAAc,GAEAZ,OAAA,GAEA,MAAAa,EAAAhB,EAAArC,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAmE,EAAAlE,OAAmBD,GAAA,GACpC,MAAAoE,EAAAD,EAAAnE,GACA,QAAAqB,EAAA,EAAmBA,EAAAtF,KAAAkE,OAAiBoB,GAAA,GACpC,MAAAiB,EAAAvG,KAAAsF,GACA,IAAAoD,EAMA,IALArB,GAAAd,EAAAiC,cACAE,EAAAnC,EAAAiC,cAAAH,GACOhB,GAAAd,EAAA+B,oBACPI,EAAAnC,EAAA+B,kBAAAD,IAEAK,KAAAxE,OACA,QAAA+D,EAAAS,EAAAxE,OAAA,EAAyC+D,GAAA,EAAQA,GAAA,GACjD,MAAAU,EAAAD,EAAAT,GACAX,GAAAqB,EAAArB,cACAf,EAAAvE,oBAAAqG,EAAAM,EAAAJ,cAAAhB,GACAmB,EAAAE,OAAAX,EAAA,IACWX,GAAAqB,EAAArB,UAAAqB,EAAArB,SAAAuB,WAAAF,EAAArB,SAAAuB,YAAAvB,GACXf,EAAAvE,oBAAAqG,EAAAM,EAAAJ,cAAAhB,GACAmB,EAAAE,OAAAX,EAAA,IACWX,IACXf,EAAAvE,oBAAAqG,EAAAM,EAAAJ,cAAAhB,GACAmB,EAAAE,OAAAX,EAAA,MAMA,OAAAjI,KAmBA,SAAA8I,KAAA3B,GACA,MAAAiB,EAAAjB,EAAA,GAAApC,MAAA,KACA4C,EAAAR,EAAA,GACA,QAAAlD,EAAA,EAAiBA,EAAAmE,EAAAlE,OAAmBD,GAAA,GACpC,MAAAoE,EAAAD,EAAAnE,GACA,QAAAqB,EAAA,EAAmBA,EAAAtF,KAAAkE,OAAiBoB,GAAA,GACpC,MAAAiB,EAAAvG,KAAAsF,GACA,IAAAyD,EACA,IACAA,EAAA,IAAkB/F,EAAMK,YAAAgF,EAAA,CACxBW,OAAArB,EACAsB,SAAA,EACAC,YAAA,IAEO,MAAAzB,GACPsB,EAAcnH,EAAQW,YAAA,SACtBwG,EAAAvG,UAAA6F,GAAA,MACAU,EAAAC,OAAArB,EAGApB,EAAAqB,cAAAT,EAAAgC,OAAA,CAAAC,EAAAC,MAAA,GACA9C,EAAA+C,cAAAP,GACAxC,EAAAqB,cAAA,UACArB,EAAAqB,eAGA,OAAA5H,KAEA,SAAAuJ,EAAAC,GACA,MAAApB,EAAA,wCACAqB,EAAAzJ,KACA,IAAAiE,EACA,SAAAyF,EAAAjC,GAEA,GAAAA,EAAAC,SAAA1H,KAEA,IADAwJ,EAAAG,KAAA3J,KAAAyH,GACAxD,EAAA,EAAeA,EAAAmE,EAAAlE,OAAmBD,GAAA,EAClCwF,EAAAhB,IAAAL,EAAAnE,GAAAyF,GAGA,GAAAF,EACA,IAAAvF,EAAA,EAAeA,EAAAmE,EAAAlE,OAAmBD,GAAA,EAClCwF,EAAAvC,GAAAkB,EAAAnE,GAAAyF,GAGA,OAAA1J,KAgCA,SAAS4J,EAAUC,GACnB,GAAA7J,KAAAkE,OAAA,GACA,GAAA2F,EAAA,CAEA,MAAAC,EAAA9J,KAAA8J,SACA,OAAA9J,KAAA,GAAA+J,YAAAC,WAAAF,EAAAvG,iBAAA,iBAAAyG,WAAAF,EAAAvG,iBAAA,gBAEA,OAAAvD,KAAA,GAAA+J,YAEA,YAaA,SAASE,EAAWJ,GACpB,GAAA7J,KAAAkE,OAAA,GACA,GAAA2F,EAAA,CAEA,MAAAC,EAAA9J,KAAA8J,SACA,OAAA9J,KAAA,GAAAkK,aAAAF,WAAAF,EAAAvG,iBAAA,eAAAyG,WAAAF,EAAAvG,iBAAA,kBAEA,OAAAvD,KAAA,GAAAkK,aAEA,YAEA,SAASC,IACT,GAAAnK,KAAAkE,OAAA,GACA,MAAAqC,EAAAvG,KAAA,GACAoK,EAAA7D,EAAA8D,wBACAvI,EAAiBF,EAAQE,KACzBwI,EAAA/D,EAAA+D,WAAAxI,EAAAwI,WAAA,EACAC,EAAAhE,EAAAgE,YAAAzI,EAAAyI,YAAA,EACAC,EAAAjE,IAA6BvD,EAASA,EAAMyH,QAAAlE,EAAAiE,UAC5CE,EAAAnE,IAA8BvD,EAASA,EAAM2H,QAAApE,EAAAmE,WAC7C,OACAE,IAAAR,EAAAQ,IAAAJ,EAAAF,EACAO,KAAAT,EAAAS,KAAAH,EAAAH,GAIA,YAqBA,SAAAT,IACA,OAAA9J,KAAA,GAAsBgD,EAAMM,iBAAAtD,KAAA,SAC5B,GAEA,SAAA8K,EAAAC,EAAA/E,GACA,IAAA/B,EACA,OAAAgC,UAAA/B,OAAA,CACA,qBAAA6G,EAEK,CACL,IAAA9G,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAElC,QAAA+G,KAAAD,EACA/K,KAAAiE,GAAA3D,MAAA0K,GAAAD,EAAAC,GAGA,OAAAhL,KARA,GAAAA,KAAA,UAA0BgD,EAAMM,iBAAAtD,KAAA,SAAAuD,iBAAAwH,GAWhC,OAAA9E,UAAA/B,QAAA,kBAAA6G,EAAA,CACA,IAAA9G,EAAA,EAAeA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAChCjE,KAAAiE,GAAA3D,MAAAyK,GAAA/E,EAEA,OAAAhG,KAEA,OAAAA,KAYA,SAAAiL,EAAAzB,GAEA,IAAAA,EAAA,OAAAxJ,KAEA,QAAAiE,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAElC,QAAAuF,EAAAG,KAAA3J,KAAAiE,KAAAjE,KAAAiE,IAEA,OAAAjE,KAIA,OAAAA,KAiCA,SAASkL,EAAI1G,GACb,wBAAAA,EACA,OAAAxE,KAAA,GAAAA,KAAA,GAAA4E,eAAAuD,EAGA,QAAAlE,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClCjE,KAAAiE,GAAAW,UAAAJ,EAEA,OAAAxE,KAGA,SAASmL,EAAIC,GACb,wBAAAA,EACA,OAAApL,KAAA,GACAA,KAAA,GAAAgB,YAAAyD,OAEA,KAGA,QAAAR,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClCjE,KAAAiE,GAAAjD,YAAAoK,EAEA,OAAApL,KAEA,SAAA8H,EAAA1D,GACA,MAAAmC,EAAAvG,KAAA,GACA,IAAAqL,EACApH,EACA,IAAAsC,GAAA,qBAAAnC,EAAA,SACA,qBAAAA,EAAA,CACA,GAAAmC,EAAA+E,QAAA,OAAA/E,EAAA+E,QAAAlH,GACA,GAAAmC,EAAAgF,sBAAA,OAAAhF,EAAAgF,sBAAAnH,GACA,GAAAmC,EAAAiF,kBAAA,OAAAjF,EAAAiF,kBAAApH,GAGA,IADAiH,EAAAlH,EAAAC,GACAH,EAAA,EAAeA,EAAAoH,EAAAnH,OAAwBD,GAAA,EACvC,GAAAoH,EAAApH,KAAAsC,EAAA,SAEA,SACG,GAAAnC,IAAuBxC,EAAQ,OAAA2E,IAAgB3E,EAClD,GAAAwC,IAAwBpB,EAAM,OAAAuD,IAAgBvD,EAE9C,GAAAoB,EAAAY,UAAAZ,aAAAP,EAAA,CAEA,IADAwH,EAAAjH,EAAAY,SAAA,CAAAZ,KACAH,EAAA,EAAeA,EAAAoH,EAAAnH,OAAwBD,GAAA,EACvC,GAAAoH,EAAApH,KAAAsC,EAAA,SAEA,SAEA,SAQA,SAASkF,IACT,IACAxH,EADAyH,EAAA1L,KAAA,GAEA,GAAA0L,EAAA,CACAzH,EAAA,EAEA,cAAAyH,IAAAC,iBACA,IAAAD,EAAA1G,WAAAf,GAAA,GAEA,OAAAA,GAKA,SAAA2H,EAAArK,GACA,wBAAAA,EAAA,OAAAvB,KACA,MAAAkE,EAAAlE,KAAAkE,OACA,IAAA2H,EACA,OAAAtK,EAAA2C,EAAA,EACA,IAAAL,EAAA,IAEAtC,EAAA,GACAsK,EAAA3H,EAAA3C,EACA,IAAAsC,EAAAgI,EAAA,KACA,CAAA7L,KAAA6L,MAEA,IAAAhI,EAAA,CAAA7D,KAAAuB,KAEA,SAAAuK,KAAA3E,GACA,IAAA4E,EAEA,QAAA9D,EAAA,EAAiBA,EAAAd,EAAAjD,OAAiB+D,GAAA,GAClC8D,EAAA5E,EAAAc,GACA,QAAAhE,EAAA,EAAmBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EACpC,qBAAA8H,EAAA,CACA,MAAAC,EAAwBpK,EAAQa,cAAA,OAChCuJ,EAAApH,UAAAmH,EACA,MAAAC,EAAAC,WACAjM,KAAAiE,GAAAiI,YAAAF,EAAAC,iBAEO,GAAAF,aAAAlI,EACP,QAAAyB,EAAA,EAAuBA,EAAAyG,EAAA7H,OAAqBoB,GAAA,EAC5CtF,KAAAiE,GAAAiI,YAAAH,EAAAzG,SAGAtF,KAAAiE,GAAAiI,YAAAH,GAKA,OAAA/L,KAOA,SAAAmM,EAAAJ,GACA,IAAA9H,EACAqB,EACA,IAAArB,EAAA,EAAaA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAC9B,qBAAA8H,EAAA,CACA,MAAAC,EAAsBpK,EAAQa,cAAA,OAE9B,IADAuJ,EAAApH,UAAAmH,EACAzG,EAAA0G,EAAArJ,WAAAuB,OAAA,EAA6CoB,GAAA,EAAQA,GAAA,EACrDtF,KAAAiE,GAAAmI,aAAAJ,EAAArJ,WAAA2C,GAAAtF,KAAAiE,GAAAtB,WAAA,SAEK,GAAAoJ,aAAAlI,EACL,IAAAyB,EAAA,EAAiBA,EAAAyG,EAAA7H,OAAqBoB,GAAA,EACtCtF,KAAAiE,GAAAmI,aAAAL,EAAAzG,GAAAtF,KAAAiE,GAAAtB,WAAA,SAGA3C,KAAAiE,GAAAmI,aAAAL,EAAA/L,KAAAiE,GAAAtB,WAAA,IAGA,OAAA3C,KA+BA,SAAAqM,EAAAjI,GACA,OAAApE,KAAAkE,OAAA,EACAE,EACApE,KAAA,GAAAsM,oBAAAnI,EAAAnE,KAAA,GAAAsM,oBAAAxE,GAAA1D,GACA,IAAAP,EAAA,CAAA7D,KAAA,GAAAsM,qBAEA,IAAAzI,EAAA,IAGA7D,KAAA,GAAAsM,mBAAA,IAAAzI,EAAA,CAAA7D,KAAA,GAAAsM,qBACA,IAAAzI,EAAA,IAEA,IAAAA,EAAA,IAEA,SAAA0I,EAAAnI,GACA,MAAAoI,EAAA,GACA,IAAAjG,EAAAvG,KAAA,GACA,IAAAuG,EAAA,WAAA1C,EAAA,IACA,MAAA0C,EAAA+F,mBAAA,CACA,MAAAD,EAAA9F,EAAA+F,mBACAlI,EACAD,EAAAkI,GAAAvE,GAAA1D,IAAAoI,EAAA3H,KAAAwH,GACKG,EAAA3H,KAAAwH,GACL9F,EAAA8F,EAEA,WAAAxI,EAAA2I,GAEA,SAAAC,EAAArI,GACA,GAAApE,KAAAkE,OAAA,GACA,MAAAqC,EAAAvG,KAAA,GACA,OAAAoE,EACAmC,EAAAmG,wBAAAvI,EAAAoC,EAAAmG,wBAAA5E,GAAA1D,GACA,IAAAP,EAAA,CAAA0C,EAAAmG,yBAEA,IAAA7I,EAAA,IAGA0C,EAAAmG,uBAAA,IAAA7I,EAAA,CAAA0C,EAAAmG,yBACA,IAAA7I,EAAA,IAEA,WAAAA,EAAA,IAEA,SAAA8I,EAAAvI,GACA,MAAAwI,EAAA,GACA,IAAArG,EAAAvG,KAAA,GACA,IAAAuG,EAAA,WAAA1C,EAAA,IACA,MAAA0C,EAAAmG,uBAAA,CACA,MAAAD,EAAAlG,EAAAmG,uBACAtI,EACAD,EAAAsI,GAAA3E,GAAA1D,IAAAwI,EAAA/H,KAAA4H,GACKG,EAAA/H,KAAA4H,GACLlG,EAAAkG,EAEA,WAAA5I,EAAA+I,GAKA,SAASC,EAAMzI,GACf,MAAA4D,EAAA,GACA,QAAA/D,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClC,OAAAjE,KAAAiE,GAAA6I,aACA1I,EACAD,EAAAnE,KAAAiE,GAAA6I,YAAAhF,GAAA1D,IAAA4D,EAAAnD,KAAA7E,KAAAiE,GAAA6I,YAEA9E,EAAAnD,KAAA7E,KAAAiE,GAAA6I,aAIA,OAAA3I,EAAAc,EAAA+C,IAEA,SAAAA,EAAA5D,GACA,MAAA4D,EAAA,GACA,QAAA/D,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,GAClC,IAAA8I,EAAA/M,KAAAiE,GAAA6I,WACA,MAAAC,EACA3I,EACAD,EAAA4I,GAAAjF,GAAA1D,IAAA4D,EAAAnD,KAAAkI,GAEA/E,EAAAnD,KAAAkI,GAEAA,IAAAD,WAGA,OAAA3I,EAAAc,EAAA+C,IAEA,SAAAgF,EAAA5I,GACA,IAAA4I,EAAAhN,KACA,2BAAAoE,EACA,IAAAP,EAAA,KAEAmJ,EAAAlF,GAAA1D,KACA4I,IAAAhF,QAAA5D,GAAAwH,GAAA,IAEAoB,GAEA,SAAAC,EAAA7I,GACA,MAAA8I,EAAA,GACA,QAAAjJ,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,GAClC,MAAAkJ,EAAAnN,KAAAiE,GAAA5B,iBAAA+B,GACA,QAAAkB,EAAA,EAAmBA,EAAA6H,EAAAjJ,OAAkBoB,GAAA,EACrC4H,EAAArI,KAAAsI,EAAA7H,IAGA,WAAAzB,EAAAqJ,GAEA,SAAAxK,EAAA0B,GACA,MAAA1B,EAAA,GACA,QAAAuB,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,GAClC,MAAAtB,EAAA3C,KAAAiE,GAAAtB,WAEA,QAAA2C,EAAA,EAAmBA,EAAA3C,EAAAuB,OAAuBoB,GAAA,EAC1ClB,EAEO,IAAAzB,EAAA2C,GAAAN,UAAAb,EAAAxB,EAAA2C,IAAAwC,GAAA1D,IACP1B,EAAAmC,KAAAlC,EAAA2C,IAFA,IAAA3C,EAAA2C,GAAAN,UAAAtC,EAAAmC,KAAAlC,EAAA2C,IAMA,WAAAzB,EAAAoB,EAAAvC,IAEA,SAAAgD,IACA,QAAAzB,EAAA,EAAiBA,EAAAjE,KAAAkE,OAAiBD,GAAA,EAClCjE,KAAAiE,GAAA6I,YAAA9M,KAAAiE,GAAA6I,WAAAM,YAAApN,KAAAiE,IAEA,OAAAjE,KAKA,SAAAwF,KAAA2B,GACA,MAAAsC,EAAAzJ,KACA,IAAAiE,EACAqB,EACA,IAAArB,EAAA,EAAaA,EAAAkD,EAAAjD,OAAiBD,GAAA,GAC9B,MAAAoJ,EAAAlJ,EAAAgD,EAAAlD,IACA,IAAAqB,EAAA,EAAeA,EAAA+H,EAAAnJ,OAAkBoB,GAAA,EACjCmE,IAAAvF,QAAAmJ,EAAA/H,GACAmE,EAAAvF,QAAA,EAGA,OAAAuF,EAz2BAtF,EAAAmJ,GAAAzJ,EAAA0J,UACApJ,EAAAqJ,MAAA3J,EACAM,EAAAN,OA+pCA,gBAAAkB,MAAA,KCjuCA,MAAA0I,GAAA,CACEtI,WACAM,cACAE,WACAE,cACAE,OACAK,aACAgD,KAAA9C,EACAK,UAAAD,EACFI,WAAcA,EACZI,KACAuB,MACAK,UACFS,cAAiBA,EACfmE,WAAA9D,EACA+D,YAAA1D,EACA2D,OAAAzD,EACAW,MACAG,OACAzG,KAAA0G,EACAE,KAAAD,EACArD,KACAvG,MAAAkK,EACAG,KACAE,SACAK,UACAE,OACAE,UACAE,OACAE,UACAI,OAAAF,EACA7E,UACAgF,UACAC,OACAvK,WACAgD,SACAF,MACAsE,UAGF+D,OAAAC,KAAAL,IAAAM,QAAAC,IACE7J,EAACmJ,GAAAU,GAAAP,GAAAO,KAGH,MAAAC,GAAA,CACAnK,YAAAoK,GACA,MAAAC,EAAAD,EACAL,OAAAC,KAAAK,GAAAJ,QAAAvM,IACA,IACA2M,EAAA3M,GAAA,KACO,MAAAiG,IAGP,WACA0G,EAAA3M,GACO,MAAAiG,QAKP3D,SAAA0F,EAAA4E,EAAA,GACA,OAAAzK,WAAA6F,EAAA4E,IAEAtK,MACA,OAAAL,KAAA4K,OAEAvK,aAAAyC,EAAA+H,EAAA,KACA,IAAAC,EACAC,EACAC,EAEA,MAAAC,EAAqB1L,EAAMM,iBAAAiD,EAAA,MA+B3B,OA7BQvD,EAAM2L,iBACdH,EAAAE,EAAA/H,WAAA+H,EAAA7H,gBACA2H,EAAAzJ,MAAA,KAAAb,OAAA,IACAsK,IAAAzJ,MAAA,MAAA6J,IAAAC,KAAAC,QAAA,UAAAC,KAAA,OAIAN,EAAA,IAA4BzL,EAAM2L,gBAAA,SAAAH,EAAA,GAAAA,KAElCC,EAAAC,EAAAM,cAAAN,EAAAO,YAAAP,EAAAQ,aAAAR,EAAAS,aAAAT,EAAA/H,WAAA+H,EAAAnL,iBAAA,aAAAuL,QAAA,mCACAP,EAAAE,EAAAW,WAAArK,MAAA,MAGA,MAAAuJ,IAEgBE,EAANxL,EAAM2L,gBAAAF,EAAAY,IAEhB,KAAAd,EAAArK,OAAA8F,WAAAuE,EAAA,KAEAvE,WAAAuE,EAAA,KAEA,MAAAD,IAEgBE,EAANxL,EAAM2L,gBAAAF,EAAAa,IAEhB,KAAAf,EAAArK,OAAA8F,WAAAuE,EAAA,KAEAvE,WAAAuE,EAAA,KAEAC,GAAA,GAEA1K,cAAAyL,GACA,MAAAC,EAAA,GACA,IACAvL,EACAwL,EACAC,EACAxL,EAJAyL,EAAAJ,GAA4BvM,EAAMF,SAAA8M,KAKlC,qBAAAD,KAAAzL,OAKA,IAJAyL,IAAAjL,QAAA,QAAAiL,EAAAb,QAAA,eACAW,EAAAE,EAAA5K,MAAA,KAAAoE,OAAA0G,GAAA,KAAAA,GACA3L,EAAAuL,EAAAvL,OAEAD,EAAA,EAAiBA,EAAAC,EAAYD,GAAA,EAC7ByL,EAAAD,EAAAxL,GAAA6K,QAAA,YAAA/J,MAAA,KACAyK,EAAAM,mBAAAJ,EAAA,0BAAAA,EAAA,QAAAvH,EAAA2H,mBAAAJ,EAAA,QAGA,OAAAF,GAEA1L,SAAAiM,GACA,wBAAAA,GAAA,OAAAA,KAAAC,aAAAD,EAAAC,cAAAnC,QAEA/J,UAAAqD,GACA,MAAA8I,EAAApC,OAAA1G,EAAA,IACA,QAAAlD,EAAA,EAAmBA,EAAAkD,EAAAjD,OAAiBD,GAAA,GACpC,MAAAiM,EAAA/I,EAAAlD,GACA,QAAAkE,IAAA+H,GAAA,OAAAA,EAAA,CACA,MAAAC,EAAAtC,OAAAC,KAAAD,OAAAqC,IACA,QAAAE,EAAA,EAAAC,EAAAF,EAAAjM,OAAuDkM,EAAAC,EAAiBD,GAAA,GACxE,MAAAE,EAAAH,EAAAC,GACAG,EAAA1C,OAAA2C,yBAAAN,EAAAI,QACAnI,IAAAoI,KAAAE,aACAxC,GAAAyC,SAAAT,EAAAK,KAAArC,GAAAyC,SAAAR,EAAAI,IACArC,GAAA0C,OAAAV,EAAAK,GAAAJ,EAAAI,KACarC,GAAAyC,SAAAT,EAAAK,KAAArC,GAAAyC,SAAAR,EAAAI,KACbL,EAAAK,GAAA,GACArC,GAAA0C,OAAAV,EAAAK,GAAAJ,EAAAI,KAEAL,EAAAK,GAAAJ,EAAAI,MAMA,OAAAL,IAIMW,GAAO,WACb,MAAAC,EAAkBjP,EAAQa,cAAA,OAC1B,OACAqO,MAAY9N,EAAM+N,YAAoB,IAAN/N,EAAM+N,UAAAD,OAAA,WACtC,SAAiB9N,EAAME,UAAA8N,eAAA,oBAAqDhO,GAAYA,EAAMiO,eAAkBrP,aAAoBoB,EAAMiO,eADpG,GAItCC,iBAAsBlO,EAAME,UAAAiO,gBAA6BnO,EAAMoO,cAAA,mBAAsCpO,EAAME,WAAcF,EAAME,UAAA8N,eAAA,GAC/HK,wBAA6BrO,EAAME,UAAAoO,iBAEnCxK,WAAA,WACA,MAAAxG,EAAAuQ,EAAAvQ,MACA,qBAAAA,GAAA,qBAAAA,GAAA,kBAAAA,EAFA,GAIAiR,aAAmBvO,EAAM+N,YAAoB,IAAN/N,EAAM+N,UAAAS,iBAAA,WAC7C,MAAAlR,EAAAuQ,EAAAvQ,MACA,4BAAAA,GAAA,mBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,gBAAAA,EAF6C,GAK7CmR,QAAA,WACA,MAAAnR,EAAAuQ,EAAAvQ,MACAwJ,EAAA,yKAAA/E,MAAA,KACA,QAAAd,EAAA,EAAqBA,EAAA6F,EAAA5F,OAAmBD,GAAA,EACxC,GAAA6F,EAAA7F,KAAA3D,EAAA,SAEA,SANA,GASAoR,SAAA,WACA,2BAAoC1O,GAAM,2BAAgCA,EAD1E,GAIA2O,gBAAA,WACA,IAAAC,GAAA,EACA,IACA,MAAAC,EAAAhE,OAAAiE,eAAA,GAA6C,WAE7ChO,MACA8N,GAAA,KAGQ5O,EAAMjB,iBAAA,2BAAA8P,GACP,MAAApK,IAGP,OAAAmK,EAbA,GAgBAG,SAAA,WACA,yBAAiC/O,EADjC,IAhDa,GAsDPgP,GAAO,WACb,SAAAC,IACA,MAAAC,EAAelP,EAAME,UAAAC,UAAAgP,cACrB,OAAAD,EAAAxN,QAAA,cAAAwN,EAAAxN,QAAA,aAAAwN,EAAAxN,QAAA,aAEA,OACA0N,OAAYpP,EAAME,UAAAC,UAAA2B,MAAA,eAA4C9B,EAAME,UAAAC,UAAA2B,MAAA,SACpEuN,SAAcrP,EAAME,UAAAC,UAAA2B,MAAA,SACpBmN,aACAK,YAAA,+CAAAC,KAAqEvP,EAAME,UAAAC,YAT9D,GAab,MAAAqP,GACA1O,YAAA2L,EAAA,IACA,MAAAzL,EAAAhE,KACAgE,EAAAyL,SAGAzL,EAAAyO,gBAAA,GAEAzO,EAAAyL,QAAAzL,EAAAyL,OAAAvI,IACA2G,OAAAC,KAAA9J,EAAAyL,OAAAvI,IAAA6G,QAAA2E,IACA1O,EAAAkD,GAAAwL,EAAA1O,EAAAyL,OAAAvI,GAAAwL,MAKA5O,GAAAsE,EAAAO,EAAAgK,GACA,MAAA3O,EAAAhE,KACA,uBAAA2I,EAAA,OAAA3E,EACA,MAAA4O,EAAAD,EAAA,iBAKA,OAJAvK,EAAArD,MAAA,KAAAgJ,QAAA1F,IACArE,EAAAyO,gBAAApK,KAAArE,EAAAyO,gBAAApK,GAAA,IACArE,EAAAyO,gBAAApK,GAAAuK,GAAAjK,KAEA3E,EAGAF,KAAAsE,EAAAO,EAAAgK,GACA,MAAA3O,EAAAhE,KACA,uBAAA2I,EAAA,OAAA3E,EACA,SAAA6O,KAAA1L,GACAwB,EAAAZ,MAAA/D,EAAAmD,GACAnD,EAAAyE,IAAAL,EAAAyK,GACAA,EAAAC,gBACAD,EAAAC,QAIA,OADAD,EAAAC,QAAAnK,EACA3E,EAAAkD,GAAAkB,EAAAyK,EAAAF,GAGA7O,IAAAsE,EAAAO,GACA,MAAA3E,EAAAhE,KACA,OAAAgE,EAAAyO,iBACArK,EAAArD,MAAA,KAAAgJ,QAAA1F,IACA,qBAAAM,EACA3E,EAAAyO,gBAAApK,GAAA,GACOrE,EAAAyO,gBAAApK,IAAArE,EAAAyO,gBAAApK,GAAAnE,QACPF,EAAAyO,gBAAApK,GAAA0F,QAAA,CAAAgF,EAAAxR,MACAwR,IAAApK,GAAAoK,EAAAD,SAAAC,EAAAD,UAAAnK,IACA3E,EAAAyO,gBAAApK,GAAAO,OAAArH,EAAA,OAKAyC,GAZAA,EAeAF,QAAAqD,GACA,MAAAnD,EAAAhE,KACA,IAAAgE,EAAAyO,gBAAA,OAAAzO,EACA,IAAAoE,EACAgB,EACA/E,EACA,kBAAA8C,EAAA,IAAA6L,MAAAC,QAAA9L,EAAA,KACAiB,EAAAjB,EAAA,GACAiC,EAAAjC,EAAA+L,MAAA,EAAA/L,EAAAjD,QACAG,EAAAL,IAEAoE,EAAAjB,EAAA,GAAAiB,OACAgB,EAAAjC,EAAA,GAAAiC,KACA/E,EAAA8C,EAAA,GAAA9C,SAAAL,GAEA,MAAAmP,EAAAH,MAAAC,QAAA7K,OAAArD,MAAA,KAYA,OAXAoO,EAAApF,QAAA1F,IACA,GAAArE,EAAAyO,iBAAAzO,EAAAyO,gBAAApK,GAAA,CACA,MAAAK,EAAA,GACA1E,EAAAyO,gBAAApK,GAAA0F,QAAAgF,IACArK,EAAA7D,KAAAkO,KAEArK,EAAAqF,QAAAgF,IACAA,EAAAhL,MAAA1D,EAAA+E,QAIApF,EAGAF,iBAAAsP,GACA,MAAAC,EAAArT,KACAqT,EAAAC,SACAzF,OAAAC,KAAAuF,EAAAC,SAAAvF,QAAAwF,IACA,MAAAC,EAAAH,EAAAC,QAAAC,GAEAC,EAAA/D,QACAxB,GAAA0C,OAAAyC,EAAAI,EAAA/D,UAKA3L,WAAA2P,EAAA,IACA,MAAAJ,EAAArT,KACAqT,EAAAC,SACAzF,OAAAC,KAAAuF,EAAAC,SAAAvF,QAAAwF,IACA,MAAAC,EAAAH,EAAAC,QAAAC,GACAG,EAAAD,EAAAF,IAAA,GAEAC,EAAAH,UACAxF,OAAAC,KAAA0F,EAAAH,UAAAtF,QAAA4F,IACA,MAAAC,EAAAJ,EAAAH,SAAAM,GAEAN,EAAAM,GADA,oBAAAC,EACAA,EAAAC,KAAAR,GAEAO,IAKAJ,EAAAtM,IAAAmM,EAAAnM,IACA2G,OAAAC,KAAA0F,EAAAtM,IAAA6G,QAAA+F,IACAT,EAAAnM,GAAA4M,EAAAN,EAAAtM,GAAA4M,MAKAN,EAAAO,QACAP,EAAAO,OAAAF,KAAAR,EAAAG,CAAAE,KAKAM,yBACA,MAAAxG,EAAAxN,KACAwN,EAAAyG,KACAzG,EAAAyG,IAAAD,GAGAlQ,qBAAA0P,KAAA/D,GACA,MAAAjC,EAAAxN,KACAwN,EAAAD,UAAA+F,UAAA9F,EAAAD,UAAA+F,QAAA,IACA,MAAAY,EAAAV,EAAAU,SAAoCrG,OAAAC,KAAAN,EAAAD,UAAA+F,SAAApP,UAA+C+J,GAAAI,QAkBnF,OAjBAb,EAAAD,UAAA+F,QAAAY,GAAAV,EAEAA,EAAAW,OACAtG,OAAAC,KAAA0F,EAAAW,OAAApG,QAAAvM,IACAgM,EAAAD,UAAA/L,GAAAgS,EAAAW,MAAA3S,KAIAgS,EAAAY,QACAvG,OAAAC,KAAA0F,EAAAY,QAAArG,QAAAvM,IACAgM,EAAAhM,GAAAgS,EAAAY,OAAA5S,KAIAgS,EAAAa,SACAb,EAAAa,QAAAtM,MAAAyF,EAAAiC,GAEAjC,EAGA1J,WAAA0P,KAAA/D,GACA,MAAAjC,EAAAxN,KACA,OAAAgT,MAAAC,QAAAO,IACAA,EAAAzF,QAAAuG,GAAA9G,EAAA+G,cAAAD,IACA9G,GAEAA,EAAA+G,cAAAf,KAAA/D,IAIA,SAAA+E,KACA,MAAAC,EAAAzU,KACA,IAAA0U,EACAC,EACA,MAAAC,EAAAH,EAAAG,IAEAF,EADA,qBAAAD,EAAAhF,OAAAiF,MACAD,EAAAhF,OAAAiF,MAEAE,EAAA,GAAAC,YAGAF,EADA,qBAAAF,EAAAhF,OAAAkF,OACAF,EAAAhF,OAAAkF,OAEAC,EAAA,GAAAE,aAEA,IAAAJ,GAAAD,EAAAM,gBAAA,IAAAJ,GAAAF,EAAAO,eAKAN,IAAAO,SAAAL,EAAA9J,IAAA,oBAAAmK,SAAAL,EAAA9J,IAAA,qBACA6J,IAAAM,SAAAL,EAAA9J,IAAA,mBAAAmK,SAAAL,EAAA9J,IAAA,sBAEAmD,GAAA0C,OAAA8D,EAAA,CACAC,QACAC,SACAO,KAAAT,EAAAM,eAAAL,EAAAC,KAIA,SAAAQ,KACA,MAAAV,EAAAzU,KACAyP,EAAAgF,EAAAhF,QAEA2F,WACAA,EAAAF,KAAAG,EAAAC,aAAAC,EAAAC,YACGf,EACHgB,EAAAhB,EAAAiB,SAAAjG,EAAAiG,QAAAC,QACAC,EAAAH,EAAAhB,EAAAiB,QAAAG,OAAA3R,OAAAuQ,EAAAoB,OAAA3R,OACA2R,EAAAT,EAAA1S,aAAyC+R,EAAAhF,OAAAqG,cACzCC,EAAAN,EAAAhB,EAAAiB,QAAAG,OAAA3R,OAAA2R,EAAA3R,OACA,IAAA8R,EAAA,GACA,MAAAC,EAAA,GACAC,EAAA,GAEA,IAAAC,EAAA1G,EAAA2G,mBACA,oBAAAD,IACAA,EAAA1G,EAAA2G,mBAAAzM,KAAA8K,IAGA,IAAA4B,EAAA5G,EAAA6G,kBACA,oBAAAD,IACAA,EAAA5G,EAAA6G,kBAAA3M,KAAA8K,IAGA,MAAA8B,EAAA9B,EAAAuB,SAAA9R,OACAsS,EAAA/B,EAAAuB,SAAA9R,OAEA,IAiBAuS,EAaAC,EA9BAC,EAAAlH,EAAAkH,aACAC,GAAAT,EACAU,EAAA,EACAtV,EAAA,EACA,wBAAA8T,EACA,OAEA,kBAAAsB,KAAAjS,QAAA,UACAiS,EAAA3M,WAAA2M,EAAA7H,QAAA,aAAAuG,GAGAZ,EAAAqC,aAAAH,EAGApB,EAAAM,EAAA/K,IAAA,CAAuBiM,WAAA,GAAAC,UAAA,KACvBnB,EAAA/K,IAAA,CAAmBmM,YAAA,GAAAC,aAAA,KAGnBzH,EAAA0H,gBAAA,IAEAV,EADAW,KAAAC,MAAAtB,EAAAtG,EAAA0H,mBAAApB,EAAAtB,EAAAhF,OAAA0H,gBACApB,EAEAqB,KAAAE,KAAAvB,EAAAtG,EAAA0H,iBAAA1H,EAAA0H,gBAEA,SAAA1H,EAAA8H,eAAA,QAAA9H,EAAA+H,sBACAf,EAAAW,KAAAK,IAAAhB,EAAAhH,EAAA8H,cAAA9H,EAAA0H,mBAMA,MAAAA,EAAA1H,EAAA0H,gBACAO,EAAAjB,EAAAU,EACAQ,EAAAP,KAAAC,MAAAtB,EAAAtG,EAAA0H,iBACA,QAAAlT,EAAA,EAAiBA,EAAA8R,EAAkB9R,GAAA,GACnCyS,EAAA,EACA,MAAAkB,EAAA/B,EAAAjK,GAAA3H,GACA,GAAAwL,EAAA0H,gBAAA,GAEA,IAAAU,EACAC,EACAC,EACA,WAAAtI,EAAA+H,qBACAM,EAAAV,KAAAC,MAAApT,EAAAkT,GACAY,EAAA9T,EAAA6T,EAAAX,GACAW,EAAAH,GAAAG,IAAAH,GAAAI,IAAAZ,EAAA,KACAY,GAAA,EACAA,GAAAZ,IACAY,EAAA,EACAD,GAAA,IAGAD,EAAAC,EAAAC,EAAAtB,EAAAU,EACAS,EACA9M,IAAA,CACAkN,4BAAAH,EACAI,yBAAAJ,EACAK,iBAAAL,EACAM,gBAAAN,EACAO,MAAAP,MAGAE,EAAAX,KAAAC,MAAApT,EAAAyT,GACAI,EAAA7T,EAAA8T,EAAAL,GAEAE,EACA9M,cACoB2J,EAAAM,eAAA,eACpB,IAAAgD,GAAAtI,EAAAkH,iBAAoDlH,EAAAkH,kBAEpD5Q,KAAA,qBAAA+R,GACA/R,KAAA,kBAAAgS,GAEA,YAAAH,EAAA9M,IAAA,YAEA,YAAA2E,EAAA8H,cAAA,CACA,MAAAc,EAA0BrV,EAAMM,iBAAAsU,EAAA,SAChCU,EAAAV,EAAA,GAAAtX,MAAAqG,UACA4R,EAAAX,EAAA,GAAAtX,MAAAuG,gBAOA,GANAyR,IACAV,EAAA,GAAAtX,MAAAqG,UAAA,QAEA4R,IACAX,EAAA,GAAAtX,MAAAuG,gBAAA,QAEA4I,EAAA+I,aACA9B,EAAAjC,EAAAM,eACA6C,EAAAlK,YAAA,GACAkK,EAAAjK,aAAA,QAGA,GAAA8G,EAAAM,eAAA,CACA,MAAAL,EAAA1K,WAAAqO,EAAA9U,iBAAA,UACAkV,EAAAzO,WAAAqO,EAAA9U,iBAAA,iBACAmV,EAAA1O,WAAAqO,EAAA9U,iBAAA,kBACAwT,EAAA/M,WAAAqO,EAAA9U,iBAAA,gBACA0T,EAAAjN,WAAAqO,EAAA9U,iBAAA,iBACAoV,EAAAN,EAAA9U,iBAAA,cAEAmT,EADAiC,GAAA,eAAAA,EACAjE,EAAAqC,EAAAE,EAEAvC,EAAA+D,EAAAC,EAAA3B,EAAAE,MAES,CACT,MAAAtC,EAAA3K,WAAAqO,EAAA9U,iBAAA,WACAqV,EAAA5O,WAAAqO,EAAA9U,iBAAA,gBACAsV,EAAA7O,WAAAqO,EAAA9U,iBAAA,mBACAyT,EAAAhN,WAAAqO,EAAA9U,iBAAA,eACA2T,EAAAlN,WAAAqO,EAAA9U,iBAAA,kBACAoV,EAAAN,EAAA9U,iBAAA,cAEAmT,EADAiC,GAAA,eAAAA,EACAhE,EAAAqC,EAAAE,EAEAvC,EAAAiE,EAAAC,EAAA7B,EAAAE,EAIAoB,IACAV,EAAA,GAAAtX,MAAAqG,UAAA2R,GAEAC,IACAX,EAAA,GAAAtX,MAAAuG,gBAAA0R,GAEA9I,EAAA+I,eAAA9B,EAAAU,KAAAC,MAAAX,SAEAA,GAAArB,GAAA5F,EAAA8H,cAAA,GAAAZ,GAAAlH,EAAA8H,cACA9H,EAAA+I,eAAA9B,EAAAU,KAAAC,MAAAX,IAEAb,EAAA5R,KACAwQ,EAAAM,eACAc,EAAA5R,GAAA3D,MAAAoU,SAAqCgC,MAErCb,EAAA5R,GAAA3D,MAAAqU,UAAsC+B,OAItCb,EAAA5R,KACA4R,EAAA5R,GAAA6U,gBAAApC,GAEAR,EAAArR,KAAA6R,GAGAjH,EAAAsJ,gBACAnC,IAAAF,EAAA,EAAAG,EAAA,EAAAF,EACA,IAAAE,GAAA,IAAA5S,IAAA2S,IAAAvB,EAAA,EAAAsB,GACA,IAAA1S,IAAA2S,IAAAvB,EAAA,EAAAsB,GACAS,KAAA4B,IAAApC,GAAA,OAAAA,EAAA,GACAnH,EAAA+I,eAAA5B,EAAAQ,KAAAC,MAAAT,IACA,EAAAnH,EAAAwJ,iBAAA,GAAAjD,EAAAnR,KAAA+R,GACAX,EAAApR,KAAA+R,KAEAnH,EAAA+I,eAAA5B,EAAAQ,KAAAC,MAAAT,IACA,EAAAnH,EAAAwJ,iBAAA,GAAAjD,EAAAnR,KAAA+R,GACAX,EAAApR,KAAA+R,GACAA,IAAAF,EAAAC,GAGAlC,EAAAqC,aAAAJ,EAAAC,EAEAE,EAAAH,EAEAnV,GAAA,GAGA,IAAA2X,EAWA,GAZAzE,EAAAqC,YAAAM,KAAAK,IAAAhD,EAAAqC,YAAAzB,GAAAgB,EAIAd,GAAAC,IAAA,UAAA/F,EAAA0J,QAAA,cAAA1J,EAAA0J,SACA/D,EAAAtK,IAAA,CAAoB4J,SAAWD,EAAAqC,YAAArH,EAAAkH,mBAExB/F,GAAOa,UAAAhC,EAAA2J,iBACd3E,EAAAM,eAAAK,EAAAtK,IAAA,CAA+C4J,SAAWD,EAAAqC,YAAArH,EAAAkH,mBAC1DvB,EAAAtK,IAAA,CAAyB6J,UAAYF,EAAAqC,YAAArH,EAAAkH,oBAGrClH,EAAA0H,gBAAA,IACA1C,EAAAqC,aAAAJ,EAAAjH,EAAAkH,cAAAF,EACAhC,EAAAqC,YAAAM,KAAAE,KAAA7C,EAAAqC,YAAArH,EAAA0H,iBAAA1H,EAAAkH,aACAlC,EAAAM,eAAAK,EAAAtK,IAAA,CAA+C4J,SAAWD,EAAAqC,YAAArH,EAAAkH,mBAC1DvB,EAAAtK,IAAA,CAAyB6J,UAAYF,EAAAqC,YAAArH,EAAAkH,mBACrClH,EAAAsJ,gBAAA,CACAG,EAAA,GACA,QAAAjV,EAAA,EAAqBA,EAAA+R,EAAA9R,OAAqBD,GAAA,GAC1C,IAAAoV,EAAArD,EAAA/R,GACAwL,EAAA+I,eAAAa,EAAAjC,KAAAC,MAAAgC,IACArD,EAAA/R,GAAAwQ,EAAAqC,YAAAd,EAAA,IAAAkD,EAAArU,KAAAwU,GAEArD,EAAAkD,EAKA,IAAAzJ,EAAAsJ,eAAA,CACAG,EAAA,GACA,QAAAjV,EAAA,EAAmBA,EAAA+R,EAAA9R,OAAqBD,GAAA,GACxC,IAAAoV,EAAArD,EAAA/R,GACAwL,EAAA+I,eAAAa,EAAAjC,KAAAC,MAAAgC,IACArD,EAAA/R,IAAAwQ,EAAAqC,YAAAzB,GACA6D,EAAArU,KAAAwU,GAGArD,EAAAkD,EACA9B,KAAAC,MAAA5C,EAAAqC,YAAAzB,GAAA+B,KAAAC,MAAArB,IAAA9R,OAAA,OACA8R,EAAAnR,KAAA4P,EAAAqC,YAAAzB,GAYA,GATA,IAAAW,EAAA9R,SAAA8R,EAAA,KAEA,IAAAvG,EAAAkH,eACAlC,EAAAM,eACAQ,EAAAM,EAAA/K,IAAA,CAA2BiM,cAAgBJ,QAC3Cd,EAAA/K,IAAA,CAAuBmM,eAAiBN,QACnCd,EAAA/K,IAAA,CAAkBoM,gBAAkBP,SAGzClH,EAAA6J,yBAAA,CACA,IAAAC,EAAA,EAKA,GAJArD,EAAAnI,QAAAyL,IACAD,GAAAC,GAAA/J,EAAAkH,aAAAlH,EAAAkH,aAAA,KAEA4C,GAAA9J,EAAAkH,aACA4C,EAAAlE,EAAA,CACA,MAAAoE,GAAApE,EAAAkE,GAAA,EACAvD,EAAAjI,QAAA,CAAA2L,EAAAC,KACA3D,EAAA2D,GAAAD,EAAAD,IAEAxD,EAAAlI,QAAA,CAAA2L,EAAAC,KACA1D,EAAA0D,GAAAD,EAAAD,KAKAxL,GAAA0C,OAAA8D,EAAA,CACAoB,SACAG,WACAC,aACAC,oBAGAH,IAAAH,GACAnB,EAAAmF,KAAA,sBAEA5D,EAAA9R,SAAAqS,IACA9B,EAAAhF,OAAAoK,eAAApF,EAAAqF,gBACArF,EAAAmF,KAAA,yBAEA3D,EAAA/R,SAAAsS,GACA/B,EAAAmF,KAAA,2BAGAnK,EAAAsK,qBAAAtK,EAAAuK,wBACAvF,EAAAwF,qBAIA,SAAAC,GAAAC,GACA,MAAA1F,EAAAzU,KACAoa,EAAA,GACA,IACAnW,EADAoW,EAAA,EAQA,GANA,kBAAAF,EACA1F,EAAA6F,cAAAH,IACG,IAAAA,GACH1F,EAAA6F,cAAA7F,EAAAhF,OAAA0K,OAGA,SAAA1F,EAAAhF,OAAA8H,eAAA9C,EAAAhF,OAAA8H,cAAA,EACA,IAAAtT,EAAA,EAAeA,EAAAmT,KAAAE,KAAA7C,EAAAhF,OAAA8H,eAA4CtT,GAAA,GAC3D,MAAA1C,EAAAkT,EAAA8F,YAAAtW,EACA,GAAA1C,EAAAkT,EAAAoB,OAAA3R,OAAA,MACAkW,EAAAvV,KAAA4P,EAAAoB,OAAAjK,GAAArK,GAAA,SAGA6Y,EAAAvV,KAAA4P,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aAAA,IAIA,IAAAtW,EAAA,EAAaA,EAAAmW,EAAAlW,OAAyBD,GAAA,EACtC,wBAAAmW,EAAAnW,GAAA,CACA,MAAA0Q,EAAAyF,EAAAnW,GAAAiG,aACAmQ,EAAA1F,EAAA0F,EAAA1F,EAAA0F,EAKAA,GAAA5F,EAAAW,WAAAtK,IAAA,YAAoDuP,OAGpD,SAAAJ,KACA,MAAAxF,EAAAzU,KACA6V,EAAApB,EAAAoB,OACA,QAAA5R,EAAA,EAAiBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACpC4R,EAAA5R,GAAAuW,kBAAA/F,EAAAM,eAAAc,EAAA5R,GAAAwW,WAAA5E,EAAA5R,GAAAyW,UAIA,SAAAC,GAAAC,EAAA5a,WAAA4a,WAAA,GACA,MAAAnG,EAAAzU,KACAyP,EAAAgF,EAAAhF,QAEAoG,OAASA,EAAAP,aAAAC,GAA4Bd,EAErC,OAAAoB,EAAA3R,OAAA,OACA,qBAAA2R,EAAA,GAAA2E,mBAAA/F,EAAAwF,qBAEA,IAAAY,GAAAD,EACArF,IAAAsF,EAAAD,GAGA/E,EAAApQ,YAAAgK,EAAAqL,mBAEArG,EAAAsG,qBAAA,GACAtG,EAAAuG,cAAA,GAEA,QAAA/W,EAAA,EAAiBA,EAAA4R,EAAA3R,OAAmBD,GAAA,GACpC,MAAA2T,EAAA/B,EAAA5R,GACAgX,GACAJ,GAAApL,EAAAsJ,eAAAtE,EAAAyG,eAAA,GAAAtD,EAAA4C,oBACA5C,EAAAkB,gBAAArJ,EAAAkH,cACA,GAAAlH,EAAAuK,sBAAA,CACA,MAAAmB,IAAAN,EAAAjD,EAAA4C,mBACAY,EAAAD,EAAA1G,EAAAyB,gBAAAjS,GACAoX,EAAAF,GAAA,GAAAA,EAAA1G,EAAAS,MACAkG,EAAA,GAAAA,GAAA3G,EAAAS,MACAiG,GAAA,GAAAC,GAAA3G,EAAAS,KACAmG,IACA5G,EAAAuG,cAAAnW,KAAA+S,GACAnD,EAAAsG,qBAAAlW,KAAAZ,GACA4R,EAAAjK,GAAA3H,GAAAkB,SAAAsK,EAAAqL,oBAGAlD,EAAA0D,SAAA/F,GAAA0F,IAEAxG,EAAAuG,cAAyB7W,EAACsQ,EAAAuG,eAG1B,SAAAO,GAAAX,EAAA5a,WAAA4a,WAAA,GACA,MAAAnG,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAEA+L,EAAA/G,EAAAgH,eAAAhH,EAAAyG,eACA,IAAAI,SAAOA,EAAAI,cAAAC,SAA+BlH,EACtC,MAAAmH,EAAAF,EACAG,EAAAF,EACA,IAAAH,GACAF,EAAA,EACAI,GAAA,EACAC,GAAA,IAEAL,GAAAV,EAAAnG,EAAAyG,gBAAA,EACAQ,EAAAJ,GAAA,EACAK,EAAAL,GAAA,GAEArN,GAAA0C,OAAA8D,EAAA,CACA6G,WACAI,cACAC,WAGAlM,EAAAsK,qBAAAtK,EAAAuK,wBAAAvF,EAAAkG,qBAAAC,GAEAc,IAAAE,GACAnH,EAAAmF,KAAA,yBAEA+B,IAAAE,GACApH,EAAAmF,KAAA,oBAEAgC,IAAAF,GAAAG,IAAAF,IACAlH,EAAAmF,KAAA,YAGAnF,EAAAmF,KAAA,WAAA0B,GAGA,SAAAQ,KACA,MAAArH,EAAAzU,MAEA6V,OACAA,EAAApG,SAAA2F,aAAAmF,cAAAwB,aACGtH,EACHgB,EAAAhB,EAAAiB,SAAAjG,EAAAiG,QAAAC,QAIA,IAAAqG,EAFAnG,EAAApQ,eAAwBgK,EAAAwM,oBAA2BxM,EAAAyM,kBAAyBzM,EAAA0M,kBAAyB1M,EAAA2M,6BAAoC3M,EAAA4M,2BAAkC5M,EAAA6M,2BAI3KN,EADAvG,EACAhB,EAAAW,WAAAnI,SAA6CwC,EAAAqG,uCAA8CyE,OAE3F1E,EAAAjK,GAAA2O,GAIAyB,EAAA7W,SAAAsK,EAAAwM,kBAEAxM,EAAA8M,OAEAP,EAAArW,SAAA8J,EAAA+M,qBACApH,EACA1S,aAAsB+M,EAAAqG,mBAA0BrG,EAAA+M,iDAAwDT,OACxG5W,SAAAsK,EAAA2M,2BAEAhH,EACA1S,aAAsB+M,EAAAqG,cAAqBrG,EAAA+M,gDAAuDT,OAClG5W,SAAAsK,EAAA2M,4BAIA,IAAAK,EAAAT,EAAAzP,YAA0CkD,EAAAqG,cAAkBlK,GAAA,GAAAzG,SAAAsK,EAAAyM,gBAC5DzM,EAAA8M,MAAA,IAAAE,EAAAvY,SACAuY,EAAA5G,EAAAjK,GAAA,GACA6Q,EAAAtX,SAAAsK,EAAAyM,iBAGA,IAAAQ,EAAAV,EAAArP,YAA0C8C,EAAAqG,cAAkBlK,GAAA,GAAAzG,SAAAsK,EAAA0M,gBAC5D1M,EAAA8M,MAAA,IAAAG,EAAAxY,SACAwY,EAAA7G,EAAAjK,IAAA,GACA8Q,EAAAvX,SAAAsK,EAAA0M,iBAEA1M,EAAA8M,OAEAE,EAAA9W,SAAA8J,EAAA+M,qBACApH,EACA1S,aAAsB+M,EAAAqG,mBAA0BrG,EAAA+M,iDAAwDC,EAAA1W,KAAA,gCACxGZ,SAAAsK,EAAA4M,yBAEAjH,EACA1S,aAAsB+M,EAAAqG,cAAqBrG,EAAA+M,gDAAuDC,EAAA1W,KAAA,gCAClGZ,SAAAsK,EAAA4M,yBAEAK,EAAA/W,SAAA8J,EAAA+M,qBACApH,EACA1S,aAAsB+M,EAAAqG,mBAA0BrG,EAAA+M,iDAAwDE,EAAA3W,KAAA,gCACxGZ,SAAAsK,EAAA6M,yBAEAlH,EACA1S,aAAsB+M,EAAAqG,cAAqBrG,EAAA+M,gDAAuDE,EAAA3W,KAAA,gCAClGZ,SAAAsK,EAAA6M,0BAKA,SAAAK,GAAAC,GACA,MAAAnI,EAAAzU,KACA4a,EAAAnG,EAAAa,aAAAb,EAAAmG,WAAAnG,EAAAmG,WACA3E,WACAA,EAAAD,WAAAvG,SAAA8K,YAAAsC,EAAAd,UAAAe,EAAAnD,UAAAoD,GACGtI,EACH,IACAkF,EADAY,EAAAqC,EAEA,wBAAArC,EAAA,CACA,QAAAtW,EAAA,EAAmBA,EAAAgS,EAAA/R,OAAuBD,GAAA,EAC1C,qBAAAgS,EAAAhS,EAAA,GACA2W,GAAA3E,EAAAhS,IAAA2W,EAAA3E,EAAAhS,EAAA,IAAAgS,EAAAhS,EAAA,GAAAgS,EAAAhS,IAAA,EACAsW,EAAAtW,EACS2W,GAAA3E,EAAAhS,IAAA2W,EAAA3E,EAAAhS,EAAA,KACTsW,EAAAtW,EAAA,GAEO2W,GAAA3E,EAAAhS,KACPsW,EAAAtW,GAIAwL,EAAAuN,sBACAzC,EAAA,wBAAAA,OAAA,GASA,GALAZ,EADA3D,EAAAtR,QAAAkW,IAAA,EACA5E,EAAAtR,QAAAkW,GAEAxD,KAAAC,MAAAkD,EAAA9K,EAAAwJ,gBAEAU,GAAA3D,EAAA9R,SAAAyV,EAAA3D,EAAA9R,OAAA,GACAqW,IAAAsC,EAKA,YAJAlD,IAAAoD,IACAtI,EAAAkF,YACAlF,EAAAmF,KAAA,qBAMA,MAAAmC,EAAA9G,SAAAR,EAAAoB,OAAAjK,GAAA2O,GAAAxU,KAAA,4BAAAwU,EAAA,IAEAtM,GAAA0C,OAAA8D,EAAA,CACAkF,YACAoC,YACAc,gBACAtC,gBAEA9F,EAAAmF,KAAA,qBACAnF,EAAAmF,KAAA,mBACAkD,IAAAf,GACAtH,EAAAmF,KAAA,mBAEAnF,EAAAmF,KAAA,eAGA,SAAAqD,GAAAxV,GACA,MAAAgN,EAAAzU,KACAyP,EAAAgF,EAAAhF,OACAmI,EAAgBzT,EAACsD,EAAAC,QAAAsF,YAAuByC,EAAAqG,cAAkB,GAC1D,IAAAoH,GAAA,EACA,GAAAtF,EACA,QAAA3T,EAAA,EAAmBA,EAAAwQ,EAAAoB,OAAA3R,OAA0BD,GAAA,EAC7CwQ,EAAAoB,OAAA5R,KAAA2T,IAAAsF,GAAA,GAIA,IAAAtF,IAAAsF,EAUA,OAFAzI,EAAA0I,kBAAAhV,OACAsM,EAAA2I,kBAAAjV,GARAsM,EAAA0I,aAAAvF,EACAnD,EAAAiB,SAAAjB,EAAAhF,OAAAiG,QAAAC,QACAlB,EAAA2I,aAAAnI,SAAqC9Q,EAACyT,GAAA7R,KAAA,+BAEtC0O,EAAA2I,aAA4BjZ,EAACyT,GAAArW,QAO7BkO,EAAA4N,0BAAAlV,IAAAsM,EAAA2I,cAAA3I,EAAA2I,eAAA3I,EAAA8F,aACA9F,EAAA4I,sBAIA,IAAAC,GAAA,CACA9I,cACAW,gBACA+E,oBACAD,sBACAU,wBACAY,kBACAO,uBACAa,qBACAM,uBAGA,SAAAM,GAAAjP,GAAAtO,KAAA+U,eAAA,UACA,MAAAN,EAAAzU,MAEAyP,OACAA,EAAA6F,aAAAC,EAAAqF,YAAAxF,cACGX,EAEH,GAAAhF,EAAA+N,iBACA,OAAAjI,GAAAqF,IAGA,IAAA6C,EAAAxP,GAAAsP,aAAAnI,EAAA,GAAA9G,GAGA,OAFAiH,IAAAkI,MAEAA,GAAA,EAGA,SAAAC,GAAA9C,EAAA+C,GACA,MAAAlJ,EAAAzU,MAEAsV,aAAAC,EAAA9F,SAAA2F,aAAAkG,YACG7G,EACH,IAAAmJ,EAAA,EACAC,EAAA,EACA,MAAAC,EAAA,EAqBA,IAAAC,EAnBAtJ,EAAAM,eACA6I,EAAArI,GAAAqF,IAEAiD,EAAAjD,EAGAnL,EAAA+I,eACAoF,EAAAxG,KAAAC,MAAAuG,GACAC,EAAAzG,KAAAC,MAAAwG,IAGApO,EAAA+N,mBACQ5M,GAAOW,aAAA6D,EAAAzO,yBAAmDiX,QAAQC,QAAQC,QAClF1I,EAAAzO,uBAA2CiX,QAAQC,SAEnDpJ,EAAAuJ,kBAAAvJ,EAAAmG,UACAnG,EAAAmG,UAAAnG,EAAAM,eAAA6I,EAAAC,EAIA,MAAArC,EAAA/G,EAAAgH,eAAAhH,EAAAyG,eAEA6C,EADA,IAAAvC,EACA,GAEAZ,EAAAnG,EAAAyG,gBAAA,EAEA6C,IAAAzC,GACA7G,EAAA8G,eAAAX,GAGAnG,EAAAmF,KAAA,eAAAnF,EAAAmG,UAAA+C,GAGA,SAAAzC,KACA,OAAAlb,KAAAgW,SAAA,GAGA,SAAAyF,KACA,OAAAzb,KAAAgW,SAAAhW,KAAAgW,SAAA9R,OAAA,GAGA,IAAI+Z,GAAS,CACbV,gBACAG,gBACAxC,gBACAO,iBAGA,SAAAnB,GAAAvT,EAAA4W,GACA,MAAAlJ,EAAAzU,KAEAyU,EAAAW,WAAAtO,WAAAC,GAEA0N,EAAAmF,KAAA,gBAAA7S,EAAA4W,GAGA,SAAAO,GAAAC,GAAA,EAAAC,GACA,MAAA3J,EAAAzU,MACAua,YAASA,EAAA9K,SAAAoN,iBAAqCpI,EAC9ChF,EAAA4O,YACA5J,EAAAyF,mBAGA,IAAAoE,EAAAF,EASA,GARAE,IACAA,EAAA/D,EAAAsC,EAAA,OACAtC,EAAAsC,EAAA,OACA,SAGApI,EAAAmF,KAAA,mBAEAuE,GAAA5D,IAAAsC,EAAA,CACA,aAAAyB,EAEA,YADA7J,EAAAmF,KAAA,6BAGAnF,EAAAmF,KAAA,8BACA,SAAA0E,EACA7J,EAAAmF,KAAA,4BAEAnF,EAAAmF,KAAA,6BAKA,SAAS2E,GAAaJ,GAAA,EAAAC,GACtB,MAAA3J,EAAAzU,MACAua,YAASA,EAAAsC,iBAA6BpI,EACtCA,EAAA+J,WAAA,EACA/J,EAAA6F,cAAA,GAEA,IAAAgE,EAAAF,EASA,GARAE,IACAA,EAAA/D,EAAAsC,EAAA,OACAtC,EAAAsC,EAAA,OACA,SAGApI,EAAAmF,KAAA,iBAEAuE,GAAA5D,IAAAsC,EAAA,CACA,aAAAyB,EAEA,YADA7J,EAAAmF,KAAA,2BAGAnF,EAAAmF,KAAA,4BACA,SAAA0E,EACA7J,EAAAmF,KAAA,0BAEAnF,EAAAmF,KAAA,2BAKA,IAAI6E,GAAU,CACdnE,iBACA4D,mBACA3U,cAAegV,IAGf,SAAAG,GAAAnd,EAAA,EAAA4Y,EAAAna,KAAAyP,OAAA0K,MAAAgE,GAAA,EAAAQ,GACA,MAAAlK,EAAAzU,KACA,IAAA4e,EAAArd,EACAqd,EAAA,IAAAA,EAAA,GAEA,MAAAnP,OACAA,EAAAuG,WAAAC,aAAA4G,gBAAAtC,cAAAjF,aAAAC,GACGd,EACH,GAAAA,EAAA+J,WAAA/O,EAAAoP,+BACA,SAGA,IAAAlF,EAAAvC,KAAAC,MAAAuH,EAAAnP,EAAAwJ,gBACAU,GAAA3D,EAAA9R,SAAAyV,EAAA3D,EAAA9R,OAAA,IAEAqW,GAAA9K,EAAAqP,cAAA,MAAAjC,GAAA,IAAAsB,GACA1J,EAAAmF,KAAA,0BAGA,MAAAgB,GAAA5E,EAAA2D,GAMA,GAHAlF,EAAA8G,eAAAX,GAGAnL,EAAAuN,oBACA,QAAA/Y,EAAA,EAAmBA,EAAAgS,EAAA/R,OAAuBD,GAAA,GAC1CmT,KAAAC,MAAA,IAAAuD,IAAAxD,KAAAC,MAAA,IAAApB,EAAAhS,MACA2a,EAAA3a,GAKA,GAAAwQ,EAAAsK,aAAAH,IAAArE,EAAA,CACA,IAAA9F,EAAAuK,gBAAApE,EAAAnG,EAAAmG,aAAAnG,EAAAyG,eACA,SAEA,IAAAzG,EAAAwK,gBAAArE,EAAAnG,EAAAmG,aAAAnG,EAAAgH,iBACAlB,GAAA,KAAAqE,EAAA,SAIA,IAAAR,EAOA,OANAA,EAAAQ,EAAArE,EAAA,OACAqE,EAAArE,EAAA,OACA,QAIAhF,IAAAqF,IAAAnG,EAAAmG,YAAArF,GAAAqF,IAAAnG,EAAAmG,WACAnG,EAAAkI,kBAAAiC,GAEAnP,EAAA4O,YACA5J,EAAAyF,mBAEAzF,EAAAqH,sBACA,UAAArM,EAAA0J,QACA1E,EAAAiJ,aAAA9C,GAEA,UAAAwD,IACA3J,EAAAyJ,gBAAAC,EAAAC,GACA3J,EAAAlL,cAAA4U,EAAAC,KAEA,IAGA,IAAAjE,GAAsBvJ,GAAO9J,YAS7B2N,EAAA6F,cAAAH,GACA1F,EAAAiJ,aAAA9C,GACAnG,EAAAkI,kBAAAiC,GACAnK,EAAAqH,sBACArH,EAAAmF,KAAA,wBAAAO,EAAAwE,GACAlK,EAAAyJ,gBAAAC,EAAAC,GACA3J,EAAA+J,YACA/J,EAAA+J,WAAA,EACA/J,EAAAyK,gCACAzK,EAAAyK,8BAAA,SAAAzX,GACAgN,MAAA0K,WACA1X,EAAAC,SAAA1H,OACAyU,EAAAW,WAAA,GAAApT,oBAAA,gBAAAyS,EAAAyK,+BACAzK,EAAAW,WAAA,GAAApT,oBAAA,sBAAAyS,EAAAyK,+BACAzK,EAAAyK,8BAAA,YACAzK,EAAAyK,8BACAzK,EAAAlL,cAAA4U,EAAAC,MAGA3J,EAAAW,WAAA,GAAArT,iBAAA,gBAAA0S,EAAAyK,+BACAzK,EAAAW,WAAA,GAAArT,iBAAA,sBAAA0S,EAAAyK,kCA5BAzK,EAAA6F,cAAA,GACA7F,EAAAiJ,aAAA9C,GACAnG,EAAAkI,kBAAAiC,GACAnK,EAAAqH,sBACArH,EAAAmF,KAAA,wBAAAO,EAAAwE,GACAlK,EAAAyJ,gBAAAC,EAAAC,GACA3J,EAAAlL,cAAA4U,EAAAC,KA0BA,GAGA,SAAAgB,GAAA7d,EAAA,EAAA4Y,EAAAna,KAAAyP,OAAA0K,MAAAgE,GAAA,EAAAQ,GACA,MAAAlK,EAAAzU,KACA,IAAAqf,EAAA9d,EAKA,OAJAkT,EAAAhF,OAAA8M,OACA8C,GAAA5K,EAAA6K,cAGA7K,EAAAiK,QAAAW,EAAAlF,EAAAgE,EAAAQ,GAIA,SAAAY,GAAApF,EAAAna,KAAAyP,OAAA0K,MAAAgE,GAAA,EAAAQ,GACA,MAAAlK,EAAAzU,MACAyP,OAASA,EAAA+O,aAAoB/J,EAC7B,OAAAhF,EAAA8M,MACAiC,IACA/J,EAAA+K,UAEA/K,EAAAgL,YAAAhL,EAAAW,WAAA,GAAA7K,WACAkK,EAAAiK,QAAAjK,EAAA8F,YAAA9K,EAAAwJ,eAAAkB,EAAAgE,EAAAQ,IAEAlK,EAAAiK,QAAAjK,EAAA8F,YAAA9K,EAAAwJ,eAAAkB,EAAAgE,EAAAQ,GAIA,SAAAe,GAAAvF,EAAAna,KAAAyP,OAAA0K,MAAAgE,GAAA,EAAAQ,GACA,MAAAlK,EAAAzU,MACAyP,OACAA,EAAA+O,YAAAxI,WAAAC,aAAAX,gBACGb,EAEH,GAAAhF,EAAA8M,KAAA,CACA,GAAAiC,EAAA,SACA/J,EAAA+K,UAEA/K,EAAAgL,YAAAhL,EAAAW,WAAA,GAAA7K,WAEA,MAAAqQ,EAAAtF,EAAAb,EAAAmG,WAAAnG,EAAAmG,UACA,SAAA+E,EAAAC,GACA,OAAAA,EAAA,GAAAxI,KAAAC,MAAAD,KAAA4B,IAAA4G,IACAxI,KAAAC,MAAAuI,GAEA,MAAAC,EAAAF,EAAA/E,GACAkF,EAAA9J,EAAApH,IAAAgR,GAAAD,EAAAC,IAIAG,GAHA9J,EAAArH,IAAAgR,GAAAD,EAAAC,IAEA5J,EAAA8J,EAAApb,QAAAmb,IACA7J,EAAA8J,EAAApb,QAAAmb,GAAA,IACA,IAAAG,EAKA,MAJA,qBAAAD,IACAC,EAAA/J,EAAAvR,QAAAqb,GACAC,EAAA,IAAAA,EAAAvL,EAAA8F,YAAA,IAEA9F,EAAAiK,QAAAsB,EAAA7F,EAAAgE,EAAAQ,GAIA,SAAAsB,GAAA9F,EAAAna,KAAAyP,OAAA0K,MAAAgE,GAAA,EAAAQ,GACA,MAAAlK,EAAAzU,KACA,OAAAyU,EAAAiK,QAAAjK,EAAA8F,YAAAJ,EAAAgE,EAAAQ,GAIA,SAAAuB,GAAA/F,EAAAna,KAAAyP,OAAA0K,MAAAgE,GAAA,EAAAQ,GACA,MAAAlK,EAAAzU,KACA,IAAAuB,EAAAkT,EAAA8F,YACA,MAAAZ,EAAAvC,KAAAC,MAAA9V,EAAAkT,EAAAhF,OAAAwJ,gBAEA,GAAAU,EAAAlF,EAAAuB,SAAA9R,OAAA,GACA,MAAA0W,EAAAnG,EAAAa,aAAAb,EAAAmG,WAAAnG,EAAAmG,UAEAuF,EAAA1L,EAAAuB,SAAA2D,GACAyG,EAAA3L,EAAAuB,SAAA2D,EAAA,GAEAiB,EAAAuF,GAAAC,EAAAD,GAAA,IACA5e,EAAAkT,EAAAhF,OAAAwJ,gBAIA,OAAAxE,EAAAiK,QAAAnd,EAAA4Y,EAAAgE,EAAAQ,GAGA,SAAAtB,KACA,MAAA5I,EAAAzU,MACAyP,OAASA,EAAA2F,cAAqBX,EAE9B8C,EAAA,SAAA9H,EAAA8H,cAAA9C,EAAA4L,uBAAA5Q,EAAA8H,cACA,IACAwE,EADAuE,EAAA7L,EAAA2I,aAEA,GAAA3N,EAAA8M,KAAA,CACA,GAAA9H,EAAA+J,UAAA,OACAzC,EAAA9G,SAAyB9Q,EAACsQ,EAAA0I,cAAApX,KAAA,+BAC1B0J,EAAAsJ,eAEAuH,EAAA7L,EAAA6K,aAAA/H,EAAA,GACA+I,EAAA7L,EAAAoB,OAAA3R,OAAAuQ,EAAA6K,aAAA/H,EAAA,GAEA9C,EAAA+K,UACAc,EAAAlL,EACA1S,aAAwB+M,EAAAqG,uCAA8CiG,YAAoBtM,EAAA+M,wBAC1F5Q,GAAA,GACArK,QAEA0M,GAAAsS,SAAA,KACA9L,EAAAiK,QAAA4B,MAGA7L,EAAAiK,QAAA4B,GAEKA,EAAA7L,EAAAoB,OAAA3R,OAAAqT,GACL9C,EAAA+K,UACAc,EAAAlL,EACA1S,aAAsB+M,EAAAqG,uCAA8CiG,YAAoBtM,EAAA+M,wBACxF5Q,GAAA,GACArK,QAEA0M,GAAAsS,SAAA,KACA9L,EAAAiK,QAAA4B,MAGA7L,EAAAiK,QAAA4B,QAGA7L,EAAAiK,QAAA4B,GAIA,IAAIE,GAAK,CACT9B,WACAU,eACAG,aACAG,aACAO,cACAC,kBACA7C,wBAGA,SAAAoD,KACA,MAAAhM,EAAAzU,MACAyP,OAASA,EAAA2F,cAAqBX,EAE9BW,EAAA1S,aAA0B+M,EAAAqG,cAAqBrG,EAAA+M,uBAA2B9W,SAE1E,IAAAmQ,EAAAT,EAAA1S,aAAuC+M,EAAAqG,cAEvC,GAAArG,EAAAiR,uBAAA,CACA,MAAAC,EAAAlR,EAAAwJ,eAAApD,EAAA3R,OAAAuL,EAAAwJ,eACA,GAAA0H,IAAAlR,EAAAwJ,eAAA,CACA,QAAAhV,EAAA,EAAqBA,EAAA0c,EAAoB1c,GAAA,GACzC,MAAA2c,EAA0Bzc,EAAEvC,EAAQa,cAAA,QAAA0C,YAAmCsK,EAAAqG,cAAqBrG,EAAAoR,mBAC5FzL,EAAAtJ,OAAA8U,GAEA/K,EAAAT,EAAA1S,aAAuC+M,EAAAqG,eAIvC,SAAArG,EAAA8H,eAAA9H,EAAA6P,eAAA7P,EAAA6P,aAAAzJ,EAAA3R,QAEAuQ,EAAA6K,aAAArK,SAAAxF,EAAA6P,cAAA7P,EAAA8H,cAAA,IACA9C,EAAA6K,cAAA7P,EAAAqR,qBACArM,EAAA6K,aAAAzJ,EAAA3R,SACAuQ,EAAA6K,aAAAzJ,EAAA3R,QAGA,MAAA6c,EAAA,GACAC,EAAA,GACAnL,EAAA5K,KAAA,CAAA1J,EAAAgF,KACA,MAAAqR,EAAkBzT,EAACoC,GACnBhF,EAAAkT,EAAA6K,cAAA0B,EAAAnc,KAAA0B,GACAhF,EAAAsU,EAAA3R,QAAA3C,GAAAsU,EAAA3R,OAAAuQ,EAAA6K,cAAAyB,EAAAlc,KAAA0B,GACAqR,EAAA7R,KAAA,0BAAAxE,KAEA,QAAA0C,EAAA,EAAiBA,EAAA+c,EAAA9c,OAAyBD,GAAA,EAC1CmR,EAAAtJ,OAAsB3H,EAAC6c,EAAA/c,GAAAgd,WAAA,IAAA9b,SAAAsK,EAAA+M,sBAEvB,QAAAvY,EAAA8c,EAAA7c,OAAA,EAAwCD,GAAA,EAAQA,GAAA,EAChDmR,EAAAjJ,QAAuBhI,EAAC4c,EAAA9c,GAAAgd,WAAA,IAAA9b,SAAAsK,EAAA+M,sBAIxB,SAAAgD,KACA,MAAA/K,EAAAzU,MACAyP,OACAA,EAAA8K,cAAA1E,SAAAyJ,eAAAL,iBAAAD,iBAAAhJ,WAAAV,aAAAC,GACGd,EACH,IAAA4K,EACA5K,EAAAwK,gBAAA,EACAxK,EAAAuK,gBAAA,EAEA,MAAAkC,GAAAlL,EAAAuE,GACA4G,EAAAD,EAAAzM,EAAA8I,eAIA,GAAAhD,EAAA+E,EAAA,CACAD,EAAAxJ,EAAA3R,OAAA,EAAAob,EAAA/E,EACA8E,GAAAC,EACA,MAAA8B,EAAA3M,EAAAiK,QAAAW,EAAA,SACA+B,GAAA,IAAAD,GACA1M,EAAAiJ,cAAAnI,GAAAd,EAAAmG,UAAAnG,EAAAmG,WAAAuG,QAEG,YAAA1R,EAAA8H,eAAAgD,GAAA,EAAA+E,GAAA/E,GAAA1E,EAAA3R,OAAAob,EAAA,CAEHD,GAAAxJ,EAAA3R,OAAAqW,EAAA+E,EACAD,GAAAC,EACA,MAAA8B,EAAA3M,EAAAiK,QAAAW,EAAA,SACA+B,GAAA,IAAAD,GACA1M,EAAAiJ,cAAAnI,GAAAd,EAAAmG,UAAAnG,EAAAmG,WAAAuG,GAGA1M,EAAAwK,iBACAxK,EAAAuK,iBAGA,SAAAqC,KACA,MAAA5M,EAAAzU,MACAoV,WAASA,EAAA3F,SAAAoG,UAA6BpB,EACtCW,EAAA1S,aAA0B+M,EAAAqG,cAAqBrG,EAAA+M,wBAA+B/M,EAAAqG,cAAqBrG,EAAAoR,mBAAuBnb,SAC1HmQ,EAAAzP,WAAA,2BAGA,IAAAmW,GAAA,CACAkE,cACAjB,WACA6B,gBAGA,SAAAC,GAAAC,GACA,MAAA9M,EAAAzU,KACA,GAAM4Q,GAAOE,QAAA2D,EAAAhF,OAAA+R,eAAA/M,EAAAhF,OAAAoK,eAAApF,EAAAgN,SAAA,OACb,MAAAlb,EAAAkO,EAAAlO,GACAA,EAAAjG,MAAAohB,OAAA,OACAnb,EAAAjG,MAAAohB,OAAAH,EAAA,kCACAhb,EAAAjG,MAAAohB,OAAAH,EAAA,2BACAhb,EAAAjG,MAAAohB,OAAAH,EAAA,kBAGA,SAAAI,KACA,MAAAlN,EAAAzU,KACM4Q,GAAOE,OAAA2D,EAAAhF,OAAAoK,eAAApF,EAAAgN,WACbhN,EAAAlO,GAAAjG,MAAAohB,OAAA,IAGA,IAAAE,GAAA,CACAN,iBACAK,oBAGA,SAAAE,GAAAhM,GACA,MAAApB,EAAAzU,MACAoV,WAASA,EAAA3F,UAAqBgF,EAI9B,GAHAhF,EAAA8M,MACA9H,EAAA4M,cAEA,kBAAAxL,GAAA,WAAAA,EACA,QAAA5R,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACtC4R,EAAA5R,IAAAmR,EAAAtJ,OAAA+J,EAAA5R,SAGAmR,EAAAtJ,OAAA+J,GAEApG,EAAA8M,MACA9H,EAAAgM,aAEAhR,EAAAiC,UAA2Bd,GAAOc,UAClC+C,EAAA6I,SAIA,SAAAwE,GAAAjM,GACA,MAAApB,EAAAzU,MACAyP,OAASA,EAAA2F,aAAAmF,eAAkC9F,EAE3ChF,EAAA8M,MACA9H,EAAA4M,cAEA,IAAAzE,EAAArC,EAAA,EACA,qBAAA1E,GAAA,WAAAA,EAAA,CACA,QAAA5R,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACtC4R,EAAA5R,IAAAmR,EAAAjJ,QAAA0J,EAAA5R,IAEA2Y,EAAArC,EAAA1E,EAAA3R,YAEAkR,EAAAjJ,QAAA0J,GAEApG,EAAA8M,MACA9H,EAAAgM,aAEAhR,EAAAiC,UAA2Bd,GAAOc,UAClC+C,EAAA6I,SAEA7I,EAAAiK,QAAA9B,EAAA,MAGA,SAAAmF,GAAAxgB,EAAAsU,GACA,MAAApB,EAAAzU,MACAoV,WAASA,EAAA3F,SAAA8K,eAAkC9F,EAC3C,IAAAuN,EAAAzH,EACA9K,EAAA8M,OACAyF,GAAAvN,EAAA6K,aACA7K,EAAA4M,cACA5M,EAAAoB,OAAAT,EAAA1S,aAA4C+M,EAAAqG,eAE5C,MAAAmM,EAAAxN,EAAAoB,OAAA3R,OACA,GAAA3C,GAAA,EAEA,YADAkT,EAAAqN,aAAAjM,GAGA,GAAAtU,GAAA0gB,EAEA,YADAxN,EAAAoN,YAAAhM,GAGA,IAAA+G,EAAAoF,EAAAzgB,EAAAygB,EAAA,EAAAA,EAEA,MAAAE,EAAA,GACA,QAAAje,EAAAge,EAAA,EAA8Bhe,GAAA1C,EAAY0C,GAAA,GAC1C,MAAAke,EAAA1N,EAAAoB,OAAAjK,GAAA3H,GACAke,EAAAzc,SACAwc,EAAAra,QAAAsa,GAGA,qBAAAtM,GAAA,WAAAA,EAAA,CACA,QAAA5R,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACtC4R,EAAA5R,IAAAmR,EAAAtJ,OAAA+J,EAAA5R,IAEA2Y,EAAAoF,EAAAzgB,EAAAygB,EAAAnM,EAAA3R,OAAA8d,OAEA5M,EAAAtJ,OAAA+J,GAGA,QAAA5R,EAAA,EAAiBA,EAAAie,EAAAhe,OAAyBD,GAAA,EAC1CmR,EAAAtJ,OAAAoW,EAAAje,IAGAwL,EAAA8M,MACA9H,EAAAgM,aAEAhR,EAAAiC,UAA2Bd,GAAOc,UAClC+C,EAAA6I,SAEA7N,EAAA8M,KACA9H,EAAAiK,QAAA9B,EAAAnI,EAAA6K,aAAA,MAEA7K,EAAAiK,QAAA9B,EAAA,MAIA,SAAAwF,GAAAC,GACA,MAAA5N,EAAAzU,MACAyP,OAASA,EAAA2F,aAAAmF,eAAkC9F,EAE3C,IAAAuN,EAAAzH,EACA9K,EAAA8M,OACAyF,GAAAvN,EAAA6K,aACA7K,EAAA4M,cACA5M,EAAAoB,OAAAT,EAAA1S,aAA4C+M,EAAAqG,eAE5C,IACAwM,EADA1F,EAAAoF,EAGA,qBAAAK,GAAA,WAAAA,EAAA,CACA,QAAApe,EAAA,EAAmBA,EAAAoe,EAAAne,OAA0BD,GAAA,EAC7Cqe,EAAAD,EAAApe,GACAwQ,EAAAoB,OAAAyM,IAAA7N,EAAAoB,OAAAjK,GAAA0W,GAAA5c,SACA4c,EAAA1F,OAAA,GAEAA,EAAAxF,KAAAK,IAAAmF,EAAA,QAEA0F,EAAAD,EACA5N,EAAAoB,OAAAyM,IAAA7N,EAAAoB,OAAAjK,GAAA0W,GAAA5c,SACA4c,EAAA1F,OAAA,GACAA,EAAAxF,KAAAK,IAAAmF,EAAA,GAGAnN,EAAA8M,MACA9H,EAAAgM,aAGAhR,EAAAiC,UAA2Bd,GAAOc,UAClC+C,EAAA6I,SAEA7N,EAAA8M,KACA9H,EAAAiK,QAAA9B,EAAAnI,EAAA6K,aAAA,MAEA7K,EAAAiK,QAAA9B,EAAA,MAIA,SAAA2F,KACA,MAAA9N,EAAAzU,KAEAqiB,EAAA,GACA,QAAApe,EAAA,EAAiBA,EAAAwQ,EAAAoB,OAAA3R,OAA0BD,GAAA,EAC3Coe,EAAAxd,KAAAZ,GAEAwQ,EAAA2N,YAAAC,GAGA,IAAAG,GAAA,CACAX,eACAC,gBACAC,YACAK,eACAG,oBAGA,MAAME,GAAM,WACZ,MAAAvQ,EAAalP,EAAME,UAAAC,UAEnBuf,EAAA,CACAC,KAAA,EACAC,SAAA,EACAC,eAAA,EACAC,SAAA,EACAC,SAAA,EACAC,QAAA,EACAC,MAAA,EACAC,MAAA,EACAC,QAAangB,EAAMmgB,SAAYngB,EAAMogB,SACrCA,SAAcpgB,EAAMmgB,SAAYngB,EAAMogB,UAGtCL,EAAA7Q,EAAApN,MAAA,qCACA8d,EAAA1Q,EAAApN,MAAA,+BACAoe,EAAAhR,EAAApN,MAAA,wBACAme,EAAA/Q,EAAApN,MAAA,2BACAke,GAAAE,GAAAhR,EAAApN,MAAA,8BA+CA,GA3CAie,IACAL,EAAAW,GAAA,UACAX,EAAAY,UAAAP,EAAA,GACAL,EAAAK,SAAA,GAGAH,IAAAG,IACAL,EAAAW,GAAA,UACAX,EAAAY,UAAAV,EAAA,GACAF,EAAAE,SAAA,EACAF,EAAAG,cAAA3Q,EAAAC,cAAAzN,QAAA,eAEAwe,GAAAF,GAAAC,KACAP,EAAAW,GAAA,MACAX,EAAAC,KAAA,GAGAK,IAAAC,IACAP,EAAAY,UAAAN,EAAA,GAAAlU,QAAA,UACA4T,EAAAM,QAAA,GAEAE,IACAR,EAAAY,UAAAJ,EAAA,GAAApU,QAAA,UACA4T,EAAAQ,MAAA,GAEAD,IACAP,EAAAY,UAAAL,EAAA,GAAAA,EAAA,GAAAnU,QAAA,eACA4T,EAAAM,QAAA,GAGAN,EAAAC,KAAAD,EAAAY,WAAApR,EAAAxN,QAAA,gBACA,OAAAge,EAAAY,UAAAve,MAAA,UACA2d,EAAAY,UAAApR,EAAAC,cAAApN,MAAA,eAAAA,MAAA,SAKA2d,EAAAI,UAAAJ,EAAAW,IAAAX,EAAAE,SAAAF,EAAAa,SAGAb,EAAAa,SAAAP,GAAAE,GAAAD,IAAA/Q,EAAApN,MAAA,8BAGA4d,EAAAW,IAAA,QAAAX,EAAAW,GAAA,CACA,MAAAG,EAAAd,EAAAY,UAAAve,MAAA,KACA0e,EAAyB7hB,EAAQQ,cAAA,yBACjCsgB,EAAAgB,WAAAhB,EAAAa,UACAN,GAAAD,KACA,EAAAQ,EAAA,SAAAA,EAAA,QAAAA,EAAA,OACAC,KAAAvd,aAAA,WAAAxB,QAAA,iBAOA,OAHAge,EAAAiB,WAAsB3gB,EAAM4gB,kBAAA,EAG5BlB,EAhFY,GAmFZ,SAAAmB,GAAAxb,GACA,MAAAoM,EAAAzU,KACAoJ,EAAAqL,EAAAqP,iBACArU,OAASA,EAAAsU,WAAkBtP,EAC3B,GAAAA,EAAA+J,WAAA/O,EAAAoP,+BACA,OAEA,IAAApX,EAAAY,EAGA,GAFAZ,EAAAuc,gBAAAvc,IAAAuc,eACA5a,EAAA6a,aAAA,eAAAxc,EAAAyc,MACA9a,EAAA6a,cAAA,UAAAxc,GAAA,IAAAA,EAAA0c,MAAA,OACA,IAAA/a,EAAA6a,cAAA,WAAAxc,KAAA2c,OAAA,SACA,GAAAhb,EAAAib,WAAAjb,EAAAkb,QAAA,OACA,GAAA7U,EAAA8U,WAA0BpgB,EAACsD,EAAAC,QAAAsF,QAAAyC,EAAA+U,kBAAA/U,EAAA+U,sBAA6E/U,EAAAgV,kBAAsB,GAE9H,YADAhQ,EAAAiQ,YAAA,GAGA,GAAAjV,EAAAkV,eACSxgB,EAACsD,GAAAuF,QAAAyC,EAAAkV,cAAA,UAGVZ,EAAAa,SAAA,eAAAnd,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAC,MAAArd,EAAAqd,MACAf,EAAAgB,SAAA,eAAAtd,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAG,MAAAvd,EAAAud,MACA,MAAAC,EAAAlB,EAAAa,SACAM,EAAAnB,EAAAgB,SAIAI,EAAA1V,EAAA0V,oBAAA1V,EAAA2V,sBACAC,EAAA5V,EAAA4V,oBAAA5V,EAAA6V,sBACA,IACAH,KACAF,GAAAI,GACAJ,GAAkBjiB,EAAMU,OAAAgR,MAAA2Q,GAHxB,CAuBA,GAfApX,GAAA0C,OAAAvH,EAAA,CACAib,WAAA,EACAC,SAAA,EACAiB,qBAAA,EACAC,iBAAArd,EACAsd,iBAAAtd,IAGA4b,EAAAkB,SACAlB,EAAAmB,SACA9b,EAAAsc,eAAAzX,GAAAI,MACAoG,EAAAiQ,YAAA,EACAjQ,EAAAD,aACAC,EAAAkR,oBAAAxd,EACAsH,EAAAmW,UAAA,IAAAxc,EAAAyc,oBAAA,GACA,eAAApe,EAAAyc,KAAA,CACA,IAAA4B,GAAA,EACQ3hB,EAACsD,EAAAC,QAAAI,GAAAsB,EAAA2c,gBAAAD,GAAA,GAEHlkB,EAAQK,eACLkC,EAAEvC,EAAQK,eAAA6F,GAAAsB,EAAA2c,eACVnkB,EAAQK,gBAAAwF,EAAAC,QAEX9F,EAAQK,cAAAC,OAGd,MAAA8jB,EAAAF,GAAArR,EAAAwR,gBAAAxW,EAAAyW,0BACAzW,EAAA0W,+BAAAH,IACAve,EAAAqe,iBAGArR,EAAAmF,KAAA,aAAAnS,IAGA,SAAA2e,GAAA/d,GACA,MAAAoM,EAAAzU,KACAoJ,EAAAqL,EAAAqP,iBACArU,OAASA,EAAAsU,UAAAzO,aAAAC,GAAqCd,EAC9C,IAAAhN,EAAAY,EAEA,GADAZ,EAAAuc,gBAAAvc,IAAAuc,gBACA5a,EAAAib,UAIA,YAHAjb,EAAAqc,aAAArc,EAAAoc,aACA/Q,EAAAmF,KAAA,oBAAAnS,IAIA,GAAA2B,EAAA6a,cAAA,cAAAxc,EAAAyc,KAAA,OACA,MAAAY,EAAA,cAAArd,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAC,MAAArd,EAAAqd,MACAE,EAAA,cAAAvd,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAG,MAAAvd,EAAAud,MACA,GAAAvd,EAAA4e,wBAGA,OAFAtC,EAAAkB,OAAAH,OACAf,EAAAmB,OAAAF,GAGA,IAAAvQ,EAAAwR,eAYA,OAVAxR,EAAAiQ,YAAA,OACAtb,EAAAib,YACApW,GAAA0C,OAAAoT,EAAA,CACAkB,OAAAH,EACAI,OAAAF,EACAJ,SAAAE,EACAC,SAAAC,IAEA5b,EAAAsc,eAAAzX,GAAAI,QAIA,GAAAjF,EAAA6a,cAAAxU,EAAA6W,sBAAA7W,EAAA8M,KACA,GAAA9H,EAAAO,cAEA,GACAgQ,EAAAjB,EAAAmB,QAAAzQ,EAAAmG,WAAAnG,EAAAgH,gBACAuJ,EAAAjB,EAAAmB,QAAAzQ,EAAAmG,WAAAnG,EAAAyG,eAIA,OAFA9R,EAAAib,WAAA,OACAjb,EAAAkb,SAAA,QAGK,GACLQ,EAAAf,EAAAkB,QAAAxQ,EAAAmG,WAAAnG,EAAAgH,gBACAqJ,EAAAf,EAAAkB,QAAAxQ,EAAAmG,WAAAnG,EAAAyG,eAEA,OAGA,GAAA9R,EAAA6a,cAA2BriB,EAAQK,eACnCwF,EAAAC,SAAqB9F,EAAQK,eAAkBkC,EAACsD,EAAAC,QAAAI,GAAAsB,EAAA2c,cAGhD,OAFA3c,EAAAkb,SAAA,OACA7P,EAAAiQ,YAAA,GAOA,GAHAtb,EAAAmc,qBACA9Q,EAAAmF,KAAA,YAAAnS,GAEAA,EAAAod,eAAApd,EAAAod,cAAA3gB,OAAA,SAEA6f,EAAAa,SAAAE,EACAf,EAAAgB,SAAAC,EAEA,MAAAuB,EAAAxC,EAAAa,SAAAb,EAAAkB,OACAuB,EAAAzC,EAAAgB,SAAAhB,EAAAmB,OACA,GAAAzQ,EAAAhF,OAAAmW,WAAAxO,KAAAqP,KAAAF,GAAA,EAAAC,GAAA,GAAA/R,EAAAhF,OAAAmW,UAAA,OAEA,wBAAAxc,EAAAoc,YAAA,CACA,IAAAkB,EACAjS,EAAAM,gBAAAgP,EAAAgB,WAAAhB,EAAAmB,QAAAzQ,EAAAO,cAAA+O,EAAAa,WAAAb,EAAAkB,OACA7b,EAAAoc,aAAA,EAGAe,IAAAC,KAAA,KACAE,EAAA,IAAAtP,KAAAuP,MAAAvP,KAAA4B,IAAAwN,GAAApP,KAAA4B,IAAAuN,IAAAnP,KAAAwP,GACAxd,EAAAoc,YAAA/Q,EAAAM,eAAA2R,EAAAjX,EAAAiX,WAAA,GAAAA,EAAAjX,EAAAiX,YAYA,GARAtd,EAAAoc,aACA/Q,EAAAmF,KAAA,oBAAAnS,GAEA,qBAAA2B,EAAAqc,cACA1B,EAAAa,WAAAb,EAAAkB,QAAAlB,EAAAgB,WAAAhB,EAAAmB,SACA9b,EAAAqc,aAAA,IAGArc,EAAAoc,YAEA,YADApc,EAAAib,WAAA,GAGA,IAAAjb,EAAAqc,YACA,OAEAhR,EAAAiQ,YAAA,EACAjd,EAAAqe,iBACArW,EAAAoX,2BAAApX,EAAAqX,QACArf,EAAAsf,kBAGA3d,EAAAkb,UACA7U,EAAA8M,MACA9H,EAAA+K,UAEApW,EAAA4d,eAAAvS,EAAA8I,eACA9I,EAAA6F,cAAA,GACA7F,EAAA+J,WACA/J,EAAAW,WAAAtM,QAAA,qCAEAM,EAAA6d,qBAAA,GAEAxX,EAAAmS,aAAA,IAAAnN,EAAAuK,iBAAA,IAAAvK,EAAAwK,gBACAxK,EAAA6M,eAAA,GAEA7M,EAAAmF,KAAA,kBAAAnS,IAEAgN,EAAAmF,KAAA,aAAAnS,GACA2B,EAAAkb,SAAA,EAEA,IAAAnD,EAAA1M,EAAAM,eAAAwR,EAAAC,EACAzC,EAAA5C,OAEAA,GAAA1R,EAAAyX,WACA3R,IAAA4L,MAEA1M,EAAAkR,eAAAxE,EAAA,gBACA/X,EAAAqU,iBAAA0D,EAAA/X,EAAA4d,eAEA,IAAAG,GAAA,EACAC,EAAA3X,EAAA2X,gBA0BA,GAzBA3X,EAAA6W,sBACAc,EAAA,GAEAjG,EAAA,GAAA/X,EAAAqU,iBAAAhJ,EAAAyG,gBACAiM,GAAA,EACA1X,EAAA4X,aAAAje,EAAAqU,iBAAAhJ,EAAAyG,eAAA,IAAAzG,EAAAyG,eAAA9R,EAAA4d,eAAA7F,IAAAiG,IACGjG,EAAA,GAAA/X,EAAAqU,iBAAAhJ,EAAAgH,iBACH0L,GAAA,EACA1X,EAAA4X,aAAAje,EAAAqU,iBAAAhJ,EAAAgH,eAAA,GAAAhH,EAAAgH,eAAArS,EAAA4d,eAAA7F,IAAAiG,IAGAD,IACA1f,EAAA4e,yBAAA,IAIA5R,EAAAuK,gBAAA,SAAAvK,EAAAkR,gBAAAvc,EAAAqU,iBAAArU,EAAA4d,iBACA5d,EAAAqU,iBAAArU,EAAA4d,iBAEAvS,EAAAwK,gBAAA,SAAAxK,EAAAkR,gBAAAvc,EAAAqU,iBAAArU,EAAA4d,iBACA5d,EAAAqU,iBAAArU,EAAA4d,gBAKAvX,EAAAmW,UAAA,GACA,KAAAxO,KAAA4B,IAAAmI,GAAA1R,EAAAmW,WAAAxc,EAAAyc,oBAWA,YADAzc,EAAAqU,iBAAArU,EAAA4d,gBATA,IAAA5d,EAAAyc,mBAMA,OALAzc,EAAAyc,oBAAA,EACA9B,EAAAkB,OAAAlB,EAAAa,SACAb,EAAAmB,OAAAnB,EAAAgB,SACA3b,EAAAqU,iBAAArU,EAAA4d,oBACAjD,EAAA5C,KAAA1M,EAAAM,eAAAgP,EAAAa,SAAAb,EAAAkB,OAAAlB,EAAAgB,SAAAhB,EAAAmB,QASAzV,EAAA6X,gBAGA7X,EAAA8X,UAAA9X,EAAAsK,qBAAAtK,EAAAuK,yBACAvF,EAAAkI,oBACAlI,EAAAqH,uBAEArM,EAAA8X,WAEA,IAAAne,EAAAoe,WAAAtjB,QACAkF,EAAAoe,WAAA3iB,KAAA,CACA4iB,SAAA1D,EAAAtP,EAAAM,eAAA,mBACA2S,KAAAte,EAAAsc,iBAGAtc,EAAAoe,WAAA3iB,KAAA,CACA4iB,SAAA1D,EAAAtP,EAAAM,eAAA,uBACA2S,KAAAzZ,GAAAI,SAIAoG,EAAA8G,eAAAnS,EAAAqU,kBAEAhJ,EAAAiJ,aAAAtU,EAAAqU,mBAGA,SAAAkK,GAAAtf,GACA,MAAAoM,EAAAzU,KACAoJ,EAAAqL,EAAAqP,iBAEArU,OACAA,EAAAsU,UAAAzO,aAAAC,EAAAH,aAAAa,aAAAD,YACGvB,EACH,IAAAhN,EAAAY,EAMA,GALAZ,EAAAuc,gBAAAvc,IAAAuc,eACA5a,EAAAmc,qBACA9Q,EAAAmF,KAAA,WAAAnS,GAEA2B,EAAAmc,qBAAA,GACAnc,EAAAib,UAMA,OALAjb,EAAAkb,SAAA7U,EAAAmS,YACAnN,EAAA6M,eAAA,GAEAlY,EAAAkb,SAAA,OACAlb,EAAAqc,aAAA,GAIAhW,EAAAmS,YAAAxY,EAAAkb,SAAAlb,EAAAib,aAAA,IAAA5P,EAAAuK,iBAAA,IAAAvK,EAAAwK,iBACAxK,EAAA6M,eAAA,GAIA,MAAAsG,EAAA3Z,GAAAI,MACAwZ,EAAAD,EAAAxe,EAAAsc,eAwBA,GArBAjR,EAAAiQ,aACAjQ,EAAAwI,mBAAAxV,GACAgN,EAAAmF,KAAA,MAAAnS,GACAogB,EAAA,KAAAD,EAAAxe,EAAA0e,cAAA,MACA1e,EAAA2e,cAAAnkB,aAAAwF,EAAA2e,cACA3e,EAAA2e,aAAA9Z,GAAAsS,SAAA,KACA9L,MAAA0K,WACA1K,EAAAmF,KAAA,QAAAnS,IACO,MAEPogB,EAAA,KAAAD,EAAAxe,EAAA0e,cAAA,MACA1e,EAAA2e,cAAAnkB,aAAAwF,EAAA2e,cACAtT,EAAAmF,KAAA,YAAAnS,KAIA2B,EAAA0e,cAAA7Z,GAAAI,MACAJ,GAAAsS,SAAA,KACA9L,EAAA0K,YAAA1K,EAAAiQ,YAAA,MAGAtb,EAAAib,YAAAjb,EAAAkb,UAAA7P,EAAAkR,gBAAA,IAAA5B,EAAA5C,MAAA/X,EAAAqU,mBAAArU,EAAA4d,eAIA,OAHA5d,EAAAib,WAAA,EACAjb,EAAAkb,SAAA,OACAlb,EAAAqc,aAAA,GAOA,IAAAuC,EAOA,GAXA5e,EAAAib,WAAA,EACAjb,EAAAkb,SAAA,EACAlb,EAAAqc,aAAA,EAIAuC,EADAvY,EAAA6X,aACA/R,EAAAd,EAAAmG,WAAAnG,EAAAmG,WAEAxR,EAAAqU,iBAGAhO,EAAA8X,SAAA,CACA,GAAAS,GAAAvT,EAAAyG,eAEA,YADAzG,EAAAiK,QAAAjK,EAAA8F,aAGA,GAAAyN,GAAAvT,EAAAgH,eAMA,YALAhH,EAAAoB,OAAA3R,OAAA8R,EAAA9R,OACAuQ,EAAAiK,QAAA1I,EAAA9R,OAAA,GAEAuQ,EAAAiK,QAAAjK,EAAAoB,OAAA3R,OAAA,IAKA,GAAAuL,EAAAwY,iBAAA,CACA,GAAA7e,EAAAoe,WAAAtjB,OAAA,GACA,MAAAgkB,EAAA9e,EAAAoe,WAAAW,MACAC,EAAAhf,EAAAoe,WAAAW,MAEAE,EAAAH,EAAAT,SAAAW,EAAAX,SACAC,EAAAQ,EAAAR,KAAAU,EAAAV,KACAjT,EAAA6T,SAAAD,EAAAX,EACAjT,EAAA6T,UAAA,EACAlR,KAAA4B,IAAAvE,EAAA6T,UAAA7Y,EAAA8Y,0BACA9T,EAAA6T,SAAA,IAIAZ,EAAA,KAAAzZ,GAAAI,MAAA6Z,EAAAR,KAAA,OACAjT,EAAA6T,SAAA,QAGA7T,EAAA6T,SAAA,EAEA7T,EAAA6T,UAAA7Y,EAAA+Y,8BAEApf,EAAAoe,WAAAtjB,OAAA,EACA,IAAAukB,EAAA,IAAAhZ,EAAAiZ,sBACA,MAAAC,EAAAlU,EAAA6T,SAAAG,EAEA,IAAAG,EAAAnU,EAAAmG,UAAA+N,EACApT,IAAAqT,MAEA,IACAC,EADAC,GAAA,EAEA,MAAAC,EAAA,GAAA3R,KAAA4B,IAAAvE,EAAA6T,UAAA7Y,EAAAuZ,4BACA,IAAAC,EACA,GAAAL,EAAAnU,EAAAgH,eACAhM,EAAAyZ,wBACAN,EAAAnU,EAAAgH,gBAAAsN,IACAH,EAAAnU,EAAAgH,eAAAsN,GAEAF,EAAApU,EAAAgH,eACAqN,GAAA,EACA1f,EAAA6d,qBAAA,GAEA2B,EAAAnU,EAAAgH,eAEAhM,EAAA8M,MAAA9M,EAAAsJ,iBAAAkQ,GAAA,QACO,GAAAL,EAAAnU,EAAAyG,eACPzL,EAAAyZ,wBACAN,EAAAnU,EAAAyG,eAAA6N,IACAH,EAAAnU,EAAAyG,eAAA6N,GAEAF,EAAApU,EAAAyG,eACA4N,GAAA,EACA1f,EAAA6d,qBAAA,GAEA2B,EAAAnU,EAAAyG,eAEAzL,EAAA8M,MAAA9M,EAAAsJ,iBAAAkQ,GAAA,QACO,GAAAxZ,EAAA0Z,eAAA,CACP,IAAA1M,EACA,QAAAnX,EAAA,EAAuBA,EAAA0Q,EAAA9R,OAAqBoB,GAAA,EAC5C,GAAA0Q,EAAA1Q,IAAAsjB,EAAA,CACAnM,EAAAnX,EACA,MAKAsjB,EADAxR,KAAA4B,IAAAhD,EAAAyG,GAAAmM,GAAAxR,KAAA4B,IAAAhD,EAAAyG,EAAA,GAAAmM,IAAA,SAAAnU,EAAAkR,eACA3P,EAAAyG,GAEAzG,EAAAyG,EAAA,GAEAmM,KAQA,GANAK,GACAxU,EAAA2U,KAAA,qBACA3U,EAAA+K,YAIA,IAAA/K,EAAA6T,SAEAG,EADAlT,EACA6B,KAAA4B,MAAA4P,EAAAnU,EAAAmG,WAAAnG,EAAA6T,UAEAlR,KAAA4B,KAAA4P,EAAAnU,EAAAmG,WAAAnG,EAAA6T,eAEO,GAAA7Y,EAAA0Z,eAEP,YADA1U,EAAAyL,iBAIAzQ,EAAAyZ,wBAAAJ,GACArU,EAAA8G,eAAAsN,GACApU,EAAA6F,cAAAmO,GACAhU,EAAAiJ,aAAAkL,GACAnU,EAAAyJ,iBAAA,EAAAzJ,EAAAkR,gBACAlR,EAAA+J,WAAA,EACApJ,EAAA7L,cAAA,KACAkL,MAAA0K,WAAA/V,EAAA6d,sBACAxS,EAAAmF,KAAA,kBAEAnF,EAAA6F,cAAA7K,EAAA0K,OACA1F,EAAAiJ,aAAAmL,GACAzT,EAAA7L,cAAA,KACAkL,MAAA0K,WACA1K,EAAAlL,sBAGOkL,EAAA6T,UACP7T,EAAA8G,eAAAqN,GACAnU,EAAA6F,cAAAmO,GACAhU,EAAAiJ,aAAAkL,GACAnU,EAAAyJ,iBAAA,EAAAzJ,EAAAkR,gBACAlR,EAAA+J,YACA/J,EAAA+J,WAAA,EACApJ,EAAA7L,cAAA,KACAkL,MAAA0K,WACA1K,EAAAlL,oBAIAkL,EAAA8G,eAAAqN,GAGAnU,EAAAkI,oBACAlI,EAAAqH,2BACK,GAAArM,EAAA0Z,eAEL,YADA1U,EAAAyL,iBASA,cALAzQ,EAAAwY,kBAAAJ,GAAApY,EAAA4Z,gBACA5U,EAAA8G,iBACA9G,EAAAkI,oBACAlI,EAAAqH,wBAMA,IAAAwN,EAAA,EACAC,EAAA9U,EAAAyB,gBAAA,GACA,QAAAjS,EAAA,EAAiBA,EAAAgS,EAAA/R,OAAuBD,GAAAwL,EAAAwJ,eACxC,qBAAAhD,EAAAhS,EAAAwL,EAAAwJ,gBACA+O,GAAA/R,EAAAhS,IAAA+jB,EAAA/R,EAAAhS,EAAAwL,EAAAwJ,kBACAqQ,EAAArlB,EACAslB,EAAAtT,EAAAhS,EAAAwL,EAAAwJ,gBAAAhD,EAAAhS,IAEK+jB,GAAA/R,EAAAhS,KACLqlB,EAAArlB,EACAslB,EAAAtT,IAAA/R,OAAA,GAAA+R,IAAA/R,OAAA,IAKA,MAAAslB,GAAAxB,EAAA/R,EAAAqT,IAAAC,EAEA,GAAA1B,EAAApY,EAAA4Z,aAAA,CAEA,IAAA5Z,EAAAga,WAEA,YADAhV,EAAAiK,QAAAjK,EAAA8F,aAGA,SAAA9F,EAAAkR,iBACA6D,GAAA/Z,EAAAia,gBAAAjV,EAAAiK,QAAA4K,EAAA7Z,EAAAwJ,gBACAxE,EAAAiK,QAAA4K,IAEA,SAAA7U,EAAAkR,iBACA6D,EAAA,EAAA/Z,EAAAia,gBAAAjV,EAAAiK,QAAA4K,EAAA7Z,EAAAwJ,gBACAxE,EAAAiK,QAAA4K,QAEG,CAEH,IAAA7Z,EAAAka,YAEA,YADAlV,EAAAiK,QAAAjK,EAAA8F,aAGA,SAAA9F,EAAAkR,gBACAlR,EAAAiK,QAAA4K,EAAA7Z,EAAAwJ,gBAEA,SAAAxE,EAAAkR,gBACAlR,EAAAiK,QAAA4K,IAKA,SAAAM,KACA,MAAAnV,EAAAzU,MAEAyP,OAASA,EAAAlJ,MAAakO,EAEtB,GAAAlO,GAAA,IAAAA,EAAAwD,YAAA,OAGA0F,EAAAoa,aACApV,EAAAqV,gBAIA,MAAA9K,eAASA,EAAAC,iBAAAjJ,YAA2CvB,EASpD,GANAA,EAAAuK,gBAAA,EACAvK,EAAAwK,gBAAA,EAEAxK,EAAAD,aACAC,EAAAU,eAEA1F,EAAA8X,SAAA,CACA,MAAAwC,EAAA3S,KAAA4S,IAAA5S,KAAAK,IAAAhD,EAAAmG,UAAAnG,EAAAgH,gBAAAhH,EAAAyG,gBACAzG,EAAAiJ,aAAAqM,GACAtV,EAAAkI,oBACAlI,EAAAqH,sBAEArM,EAAA4O,YACA5J,EAAAyF,wBAGAzF,EAAAqH,uBACA,SAAArM,EAAA8H,eAAA9H,EAAA8H,cAAA,IAAA9C,EAAAkH,QAAAlH,EAAAhF,OAAAsJ,eACAtE,EAAAiK,QAAAjK,EAAAoB,OAAA3R,OAAA,WAEAuQ,EAAAiK,QAAAjK,EAAA8F,YAAA,SAIA9F,EAAAwK,iBACAxK,EAAAuK,iBAEAvK,EAAAhF,OAAAoK,eAAA7D,IAAAvB,EAAAuB,UACAvB,EAAAqF,gBAIA,SAASmQ,GAAOxiB,GAChB,MAAAgN,EAAAzU,KACAyU,EAAAiQ,aACAjQ,EAAAhF,OAAAya,eAAAziB,EAAAqe,iBACArR,EAAAhF,OAAA0a,0BAAA1V,EAAA+J,YACA/W,EAAAsf,kBACAtf,EAAA2iB,6BAKA,SAAAC,KACA,MAAA5V,EAAAzU,MACAyP,OACAA,EAAA6a,cAAA/jB,KAAAgkB,aACG9V,EAGHA,EAAAoP,gBAAAhQ,KAAAY,GACAA,EAAA2R,eAAAvS,KAAAY,GACAA,EAAAkT,cAAA9T,KAAAY,GAGAA,EAAA+V,QAAmBP,GAAOpW,KAAAY,GAE1B,MAAA/M,EAAA,cAAA+H,EAAAgb,kBAAAlkB,EAAAgkB,EACAhjB,IAAAkI,EAAAqX,OAIA,GAASlW,GAAOE,QAAWF,GAAOM,gBAAkBN,GAAOS,sBAItD,CACL,GAAUT,GAAOE,MAAA,CACjB,MAAAa,IAAA,eAAA2Y,EAAAI,QAAsE9Z,GAAOe,kBAAAlC,EAAAkb,mBAAA,CAA+CC,SAAA,EAAArjB,SAAA,GAC5HG,EAAA3F,iBAAAuoB,EAAAI,MAAAjW,EAAAoP,aAAAlS,GACAjK,EAAA3F,iBAAAuoB,EAAAO,KAAApW,EAAA2R,YAAsExV,GAAOe,gBAAA,CAAoBiZ,SAAA,EAAArjB,WAA0BA,GAC3HG,EAAA3F,iBAAAuoB,EAAAQ,IAAArW,EAAAkT,WAAAhW,IAEAlC,EAAA+R,gBAAoCiB,GAAME,MAASF,GAAMG,SAAAnT,EAAA+R,gBAAuC5Q,GAAOE,OAAU2R,GAAME,OACvHjb,EAAA3F,iBAAA,YAAA0S,EAAAoP,cAAA,GACQjiB,EAAQG,iBAAA,YAAA0S,EAAA2R,YAAA7e,GACR3F,EAAQG,iBAAA,UAAA0S,EAAAkT,YAAA,SAbhBjgB,EAAA3F,iBAAAuoB,EAAAI,MAAAjW,EAAAoP,cAAA,GACMjiB,EAAQG,iBAAAuoB,EAAAO,KAAApW,EAAA2R,YAAA7e,GACR3F,EAAQG,iBAAAuoB,EAAAQ,IAAArW,EAAAkT,YAAA,IAedlY,EAAAya,eAAAza,EAAA0a,2BACAziB,EAAA3F,iBAAA,QAAA0S,EAAA+V,SAAA,GAKA/V,EAAAvN,GAAaub,GAAME,KAAQF,GAAMG,QAAA,kEAAAgH,IAAA,GAGjC,SAAAmB,KACA,MAAAtW,EAAAzU,MAEAyP,OACAA,EAAA6a,cAAA/jB,KAAAgkB,aACG9V,EAEH/M,EAAA,cAAA+H,EAAAgb,kBAAAlkB,EAAAgkB,EACAhjB,IAAAkI,EAAAqX,OAIA,GAASlW,GAAOE,QAAWF,GAAOM,gBAAkBN,GAAOS,sBAItD,CACL,GAAUT,GAAOE,MAAA,CACjB,MAAAa,IAAA,iBAAA2Y,EAAAI,QAAwE9Z,GAAOe,kBAAAlC,EAAAkb,mBAAA,CAA+CC,SAAA,EAAArjB,SAAA,GAC9HG,EAAA1F,oBAAAsoB,EAAAI,MAAAjW,EAAAoP,aAAAlS,GACAjK,EAAA1F,oBAAAsoB,EAAAO,KAAApW,EAAA2R,YAAA7e,GACAG,EAAA1F,oBAAAsoB,EAAAQ,IAAArW,EAAAkT,WAAAhW,IAEAlC,EAAA+R,gBAAoCiB,GAAME,MAASF,GAAMG,SAAAnT,EAAA+R,gBAAuC5Q,GAAOE,OAAU2R,GAAME,OACvHjb,EAAA1F,oBAAA,YAAAyS,EAAAoP,cAAA,GACQjiB,EAAQI,oBAAA,YAAAyS,EAAA2R,YAAA7e,GACR3F,EAAQI,oBAAA,UAAAyS,EAAAkT,YAAA,SAbhBjgB,EAAA1F,oBAAAsoB,EAAAI,MAAAjW,EAAAoP,cAAA,GACMjiB,EAAQI,oBAAAsoB,EAAAO,KAAApW,EAAA2R,YAAA7e,GACR3F,EAAQI,oBAAAsoB,EAAAQ,IAAArW,EAAAkT,YAAA,IAedlY,EAAAya,eAAAza,EAAA0a,2BACAziB,EAAA1F,oBAAA,QAAAyS,EAAA+V,SAAA,GAKA/V,EAAAhM,IAAcga,GAAME,KAAQF,GAAMG,QAAA,kEAAAgH,IAGlC,IAAIoB,GAAM,CACVX,gBACAU,iBAGA,SAAAjB,KACA,MAAArV,EAAAzU,MACAua,YACAA,EAAAwE,cAAAO,eAAA,EAAA7P,UACGgF,EACHoV,EAAApa,EAAAoa,YACA,IAAAA,MAAA,IAAAhc,OAAAC,KAAA+b,GAAA3lB,OAAA,OAGA,MAAA+mB,EAAAxW,EAAAyW,cAAArB,GAEA,GAAAoB,GAAAxW,EAAA0W,oBAAAF,EAAA,CACA,MAAAG,EAAAH,KAAApB,IAAAoB,QAAA9iB,EACAijB,GACA,kDAAArd,QAAA2B,IACA,MAAA2b,EAAAD,EAAA1b,GACA,qBAAA2b,IAIAD,EAAA1b,GAHA,kBAAAA,GAAA,SAAA2b,GAAA,SAAAA,EAES,kBAAA3b,EACT1F,WAAAqhB,GAEApW,SAAAoW,EAAA,IAJA,UASA,MAAAC,EAAAF,GAAA3W,EAAA8W,eACAC,EAAAF,EAAAlN,WAAAkN,EAAAlN,YAAA3O,EAAA2O,UACAqN,EAAAhc,EAAA8M,OAAA+O,EAAA/T,gBAAA9H,EAAA8H,eAAAiU,GAEAA,GAAAzM,GACAtK,EAAAiX,kBAGAzd,GAAA0C,OAAA8D,EAAAhF,OAAA6b,GAEArd,GAAA0C,OAAA8D,EAAA,CACAwR,eAAAxR,EAAAhF,OAAAwW,eACAjH,eAAAvK,EAAAhF,OAAAuP,eACAC,eAAAxK,EAAAhF,OAAAwP,iBAGAxK,EAAA0W,kBAAAF,EAEAQ,GAAA1M,IACAtK,EAAA4M,cACA5M,EAAAgM,aACAhM,EAAAU,eACAV,EAAAiK,QAAAnE,EAAA+E,EAAA7K,EAAA6K,aAAA,OAGA7K,EAAAmF,KAAA,aAAA0R,IAIA,SAAAJ,GAAArB,GACA,MAAApV,EAAAzU,KAEA,IAAA6pB,EAAA,OACA,IAAAoB,GAAA,EACA,MAAAU,EAAA,GACA9d,OAAAC,KAAA+b,GAAA9b,QAAA6d,IACAD,EAAA9mB,KAAA+mB,KAEAD,EAAAE,KAAA,CAAAhd,EAAAid,IAAA7W,SAAApG,EAAA,IAAAoG,SAAA6W,EAAA,KACA,QAAA7nB,EAAA,EAAiBA,EAAA0nB,EAAAznB,OAAmBD,GAAA,GACpC,MAAA2nB,EAAAD,EAAA1nB,GACAwQ,EAAAhF,OAAAsc,mBACAH,GAAmB5oB,EAAMgpB,aACzBf,EAAAW,GAEKA,GAAmB5oB,EAAMgpB,aAAAf,IAC9BA,EAAAW,GAGA,OAAAX,GAAA,MAGA,IAAIgB,GAAW,CAAInC,iBAAAoB,kBAEnB,SAAAgB,KACA,MAAAzX,EAAAzU,MACAmsB,WACAA,EAAA1c,SAAA8F,MAAAX,OACGH,EACH2X,EAAA,GAEAA,EAAAvnB,KAAA,eACAunB,EAAAvnB,KAAA4K,EAAA2O,WAEA3O,EAAA8X,UACA6E,EAAAvnB,KAAA,aAEO+L,GAAOa,SACd2a,EAAAvnB,KAAA,cAEA4K,EAAA4O,YACA+N,EAAAvnB,KAAA,cAEA0Q,GACA6W,EAAAvnB,KAAA,OAEA4K,EAAA0H,gBAAA,GACAiV,EAAAvnB,KAAA,YAEM4d,GAAMG,SACZwJ,EAAAvnB,KAAA,WAEM4d,GAAME,KACZyJ,EAAAvnB,KAAA,QAGOmN,GAAOI,MAASJ,GAAOK,UAAazB,GAAOM,eAAkBN,GAAOS,wBAC3E+a,EAAAvnB,YAAyB4K,EAAA2O,aAGzBgO,EAAAre,QAAAse,IACAF,EAAAtnB,KAAA4K,EAAA6c,uBAAAD,KAGAzX,EAAAzP,SAAAgnB,EAAApd,KAAA,MAGA,SAAAwd,KACA,MAAA9X,EAAAzU,MACA4U,IAASA,EAAAuX,cAAkB1X,EAE3BG,EAAAnP,YAAA0mB,EAAApd,KAAA,MAGA,IAAA1J,GAAA,CAAe6mB,cAAAK,kBAEf,SAAAC,GAAAC,EAAAhrB,EAAAirB,EAAAC,EAAAC,EAAApjB,GACA,IAAAqjB,EACA,SAAAC,IACAtjB,OAEAijB,EAAAM,UAAAH,EAmBAE,IAlBArrB,GACAorB,EAAA,IAAkB7pB,EAAMQ,MACxBqpB,EAAAG,OAAAF,EACAD,EAAAI,QAAAH,EACAH,IACAE,EAAAF,SAEAD,IACAG,EAAAH,UAEAjrB,IACAorB,EAAAprB,QAGAqrB,IAQA,SAAAI,KACA,MAAAzY,EAAAzU,KAEA,SAAA8sB,IACA,qBAAArY,GAAA,OAAAA,SAAA0K,iBACAhX,IAAAsM,EAAA0Y,eAAA1Y,EAAA0Y,cAAA,GACA1Y,EAAA0Y,eAAA1Y,EAAA2Y,aAAAlpB,SACAuQ,EAAAhF,OAAA4d,qBAAA5Y,EAAA6I,SACA7I,EAAAmF,KAAA,iBANAnF,EAAA2Y,aAAA3Y,EAAAG,IAAA3H,KAAA,OASA,QAAAhJ,EAAA,EAAiBA,EAAAwQ,EAAA2Y,aAAAlpB,OAAgCD,GAAA,GACjD,MAAAwoB,EAAAhY,EAAA2Y,aAAAnpB,GACAwQ,EAAA+X,UACAC,EACAA,EAAAa,YAAAb,EAAAvmB,aAAA,OACAumB,EAAAC,QAAAD,EAAAvmB,aAAA,UACAumB,EAAAE,OAAAF,EAAAvmB,aAAA,UACA,EACA4mB,IAKA,IAAIS,GAAM,CACVf,aACAU,kBAGA,SAAApT,KACA,MAAArF,EAAAzU,KACAwtB,EAAA/Y,EAAAgN,SAEAhN,EAAAgN,SAAA,IAAAhN,EAAAuB,SAAA9R,OACAuQ,EAAAuK,gBAAAvK,EAAAgN,SACAhN,EAAAwK,gBAAAxK,EAAAgN,SAGA+L,IAAA/Y,EAAAgN,UAAAhN,EAAAmF,KAAAnF,EAAAgN,SAAA,iBAEA+L,OAAA/Y,EAAAgN,WACAhN,EAAAkH,OAAA,EACAlH,EAAAgZ,WAAAnQ,UAIA,IAAAoQ,GAAA,CAAuB5T,kBAEvB6T,GAAA,CACAC,MAAA,EACAxP,UAAA,aACAqM,kBAAA,YACA3L,aAAA,EACA3E,MAAA,IAEA0E,gCAAA,EAGAsG,oBAAA,EACAE,mBAAA,GAGAkC,UAAA,EACAU,kBAAA,EACAS,sBAAA,EACAQ,wBAAA,EACAF,4BAAA,EACAR,8BAAA,EACAW,gBAAA,EACAZ,wBAAA,IAGAlK,YAAA,EAGAjF,gBAAA,EAGAoE,kBAAA,EAGArE,OAAA,QAGA0Q,iBAAA1hB,EACA4jB,oBAAA,EAGApV,aAAA,EACAY,cAAA,EACAJ,gBAAA,EACAK,oBAAA,SACAyB,eAAA,EACAF,gBAAA,EACA3C,mBAAA,EACAE,kBAAA,EACA0G,qBAAA,EACA1D,0BAAA,EAGAO,eAAA,EAGArB,cAAA,EAGA0O,WAAA,EACAR,WAAA,GACAlF,eAAA,EACAmI,aAAA,EACAF,YAAA,EACAC,gBAAA,GACAL,aAAA,IACA/B,cAAA,EACArB,gBAAA,EACAL,UAAA,EACAiB,0BAAA,EACAX,0BAAA,EACAC,+BAAA,EACAG,qBAAA,EAGAuH,mBAAA,EAGAxG,YAAA,EACAD,gBAAA,IAGArN,qBAAA,EACAC,uBAAA,EAGA4H,YAAA,EAGAsI,eAAA,EACAC,0BAAA,EACA9M,qBAAA,EAGA6P,eAAA,EACAG,qBAAA,EAGA9Q,MAAA,EACAuE,qBAAA,EACAxB,aAAA,KACAoB,wBAAA,EAGAzB,gBAAA,EACAD,gBAAA,EACA2F,aAAA,KACAJ,WAAA,EACAE,eAAA,oBACAD,kBAAA,KAGAmG,kBAAA,EAGA2B,uBAAA,oBACAxW,WAAA,eACA+K,gBAAA,+BACA5E,iBAAA,sBACAG,0BAAA,gCACAtB,kBAAA,uBACA0B,oBAAA,yBACAN,eAAA,oBACAG,wBAAA,8BACAF,eAAA,oBACAG,wBAAA,8BACAwR,aAAA,iBAGAC,oBAAA,GAKA,MAAAC,GAAA,CACA1Q,UACA1C,UAAWqD,GACXnX,WAAY2X,GACZ7G,MAAO4I,GACPjE,QACAqF,cACAY,gBACApa,OAAQ4iB,GACRnB,YAAaoC,GACbnS,cAAA4T,GACAroB,WACA4oB,OAAQV,IAGRW,GAAA,GAEA,MAAMC,WAAM3b,GACZ1O,eAAAqD,GACA,IAAAZ,EACAkJ,EACA,IAAAtI,EAAAjD,QAAAiD,EAAA,GAAA6I,aAAA7I,EAAA,GAAA6I,cAAAnC,OACA4B,EAAAtI,EAAA,IAEAZ,EAAAkJ,GAAAtI,EAEAsI,MAAA,IAEAA,EAAAxB,GAAA0C,OAAA,GAA4BlB,GAC5BlJ,IAAAkJ,EAAAlJ,KAAAkJ,EAAAlJ,MAEA6nB,MAAA3e,GAEA5B,OAAAC,KAAAkgB,IAAAjgB,QAAAsgB,IACAxgB,OAAAC,KAAAkgB,GAAAK,IAAAtgB,QAAAugB,IACaH,GAAM5gB,UAAA+gB,KACTH,GAAM5gB,UAAA+gB,GAAAN,GAAAK,GAAAC,QAMhB,MAAA7Z,EAAAzU,KACA,qBAAAyU,EAAAnB,UACAmB,EAAAnB,QAAA,IAEAzF,OAAAC,KAAA2G,EAAAnB,SAAAvF,QAAAwF,IACA,MAAAC,EAAAiB,EAAAnB,QAAAC,GACA,GAAAC,EAAA/D,OAAA,CACA,MAAA8e,EAAA1gB,OAAAC,KAAA0F,EAAA/D,QAAA,GACAiE,EAAAF,EAAA/D,OAAA8e,GACA,qBAAA7a,GAAA,OAAAA,EAAA,OACA,KAAA6a,KAAA9e,GAAA,YAAAiE,GAAA,QACA,IAAAjE,EAAA8e,KACA9e,EAAA8e,GAAA,CAAqC5Y,SAAA,IAGrC,kBAAAlG,EAAA8e,IACA,YAAA9e,EAAA8e,KAEA9e,EAAA8e,GAAA5Y,SAAA,GAEAlG,EAAA8e,KAAA9e,EAAA8e,GAAA,CAAiE5Y,SAAA,OAKjE,MAAA6Y,EAAAvgB,GAAA0C,OAAA,GAAwCgd,IACxClZ,EAAAga,iBAAAD,GAGA/Z,EAAAhF,OAAAxB,GAAA0C,OAAA,GAAmC6d,EAAAN,GAAAze,GACnCgF,EAAA8W,eAAAtd,GAAA0C,OAAA,GAA2C8D,EAAAhF,QAC3CgF,EAAAia,aAAAzgB,GAAA0C,OAAA,GAAyClB,GAGzCgF,EAAAtQ,EAAeA,EAGf,MAAAyQ,EAAgBzQ,EAACsQ,EAAAhF,OAAAlJ,IAGjB,GAFAA,EAAAqO,EAAA,IAEArO,EACA,OAGA,GAAAqO,EAAA1Q,OAAA,GACA,MAAAyqB,EAAA,GAKA,OAJA/Z,EAAA3J,KAAA,CAAA1J,EAAAqtB,KACA,MAAAC,EAAA5gB,GAAA0C,OAAA,GAAyClB,EAAA,CAAWlJ,GAAAqoB,IACpDD,EAAA9pB,KAAA,IAAyBspB,GAAMU,MAE/BF,EAGApoB,EAAAkO,SACAG,EAAAxL,KAAA,SAAAqL,GAGA,MAAAW,EAAAR,EAAAlS,aAAwC+R,EAAAhF,OAAAqe,gBAwHxC,OArHA7f,GAAA0C,OAAA8D,EAAA,CACAG,MACArO,KACA6O,aACAmV,UAAAnV,EAAA,GAGA+W,WAAA,GAGAtW,OAAc1R,IACd8R,WAAA,GACAD,SAAA,GACAE,gBAAA,GAGApS,eACA,qBAAA2Q,EAAAhF,OAAA2O,WAEAta,aACA,mBAAA2Q,EAAAhF,OAAA2O,WAGA7I,IAAA,QAAAhP,EAAA+X,IAAAnM,eAAA,QAAAyC,EAAA9J,IAAA,aACAwK,aAAA,eAAAb,EAAAhF,OAAA2O,YAAA,QAAA7X,EAAA+X,IAAAnM,eAAA,QAAAyC,EAAA9J,IAAA,cACA0K,SAAA,gBAAAJ,EAAAtK,IAAA,WAGAyP,YAAA,EACAwB,UAAA,EAGAL,aAAA,EACAC,OAAA,EAGAf,UAAA,EACAoD,kBAAA,EACA1C,SAAA,EACAgN,SAAA,EACA9J,WAAA,EAGAQ,eAAAvK,EAAAhF,OAAAuP,eACAC,eAAAxK,EAAAhF,OAAAwP,eAGAqL,YAAA,WACA,MAAAxZ,EAAA,sCACA,IAAAgS,EAAA,oCAgBA,OAfYlS,GAAOM,cACnB4R,EAAA,0CACmBlS,GAAOS,wBAC1ByR,EAAA,iDAEArO,EAAAqa,iBAAA,CACApE,MAAA5Z,EAAA,GACA+Z,KAAA/Z,EAAA,GACAga,IAAAha,EAAA,IAEA2D,EAAAsa,mBAAA,CACArE,MAAA5H,EAAA,GACA+H,KAAA/H,EAAA,GACAgI,IAAAhI,EAAA,IAEelS,GAAOE,QAAA2D,EAAAhF,OAAA+R,cAAA/M,EAAAqa,iBAAAra,EAAAsa,mBAlBtB,GAoBAjL,gBAAA,CACAO,eAAAlc,EACAmc,aAAAnc,EACAod,yBAAApd,EACAud,oBAAAvd,EACAqd,iBAAArd,EACAsV,sBAAAtV,EACA6e,oBAAA7e,EACA0d,wBAAA1d,EAEA4d,aAAA,iDAEA+B,cAAA7Z,GAAAI,MACA0Z,kBAAA5f,EAEAqf,WAAA,GACAP,yBAAA9e,EACA8b,kBAAA9b,EACAsd,iBAAAtd,GAIAuc,YAAA,EAGAuB,eAAAxR,EAAAhF,OAAAwW,eAEAlC,QAAA,CACAkB,OAAA,EACAC,OAAA,EACAN,SAAA,EACAG,SAAA,EACA5D,KAAA,GAIAiM,aAAA,GACAD,aAAA,IAKA1Y,EAAAua,aAGAva,EAAAhF,OAAAme,MACAnZ,EAAAmZ,OAIAnZ,EAGA3Q,uBACA,MAAA2Q,EAAAzU,MACAyP,OACAA,EAAAoG,SAAAI,aAAAf,KAAAG,EAAAkF,eACK9F,EACL,IAAAwa,EAAA,EACA,GAAAxf,EAAAsJ,eAAA,CACA,IACAmW,EADAxY,EAAAb,EAAA0E,GAAAzB,gBAEA,QAAA7U,EAAAsW,EAAA,EAAmCtW,EAAA4R,EAAA3R,OAAmBD,GAAA,EACtD4R,EAAA5R,KAAAirB,IACAxY,GAAAb,EAAA5R,GAAA6U,gBACAmW,GAAA,EACAvY,EAAArB,IAAA6Z,GAAA,IAGA,QAAAjrB,EAAAsW,EAAA,EAAmCtW,GAAA,EAAQA,GAAA,EAC3C4R,EAAA5R,KAAAirB,IACAxY,GAAAb,EAAA5R,GAAA6U,gBACAmW,GAAA,EACAvY,EAAArB,IAAA6Z,GAAA,SAIA,QAAAjrB,EAAAsW,EAAA,EAAmCtW,EAAA4R,EAAA3R,OAAmBD,GAAA,EACtDgS,EAAAhS,GAAAgS,EAAAsE,GAAAlF,IACA4Z,GAAA,GAIA,OAAAA,EAGAnrB,SACA,MAAA2Q,EAAAzU,KACA,IAAAyU,KAAA0K,UAAA,OACA,MAAAnJ,SAAWA,EAAAvG,UAAmBgF,EAU9B,SAAAiJ,IACA,MAAAyR,EAAA1a,EAAAa,cAAA,EAAAb,EAAAmG,UAAAnG,EAAAmG,UACAmP,EAAA3S,KAAA4S,IAAA5S,KAAAK,IAAA0X,EAAA1a,EAAAgH,gBAAAhH,EAAAyG,gBACAzG,EAAAiJ,aAAAqM,GACAtV,EAAAkI,oBACAlI,EAAAqH,sBAEA,IAAAsT,EAfA3f,EAAAoa,aACApV,EAAAqV,gBAEArV,EAAAD,aACAC,EAAAU,eACAV,EAAA8G,iBACA9G,EAAAqH,sBAUArH,EAAAhF,OAAA8X,UACA7J,IACAjJ,EAAAhF,OAAA4O,YACA5J,EAAAyF,qBAIAkV,GADA,SAAA3a,EAAAhF,OAAA8H,eAAA9C,EAAAhF,OAAA8H,cAAA,IAAA9C,EAAAkH,QAAAlH,EAAAhF,OAAAsJ,eACAtE,EAAAiK,QAAAjK,EAAAoB,OAAA3R,OAAA,WAEAuQ,EAAAiK,QAAAjK,EAAA8F,YAAA,SAEA6U,GACA1R,KAGAjO,EAAAoK,eAAA7D,IAAAvB,EAAAuB,UACAvB,EAAAqF,gBAEArF,EAAAmF,KAAA,UAGA9V,gBAAAurB,EAAAC,GAAA,GACA,MAAA7a,EAAAzU,KACAuvB,EAAA9a,EAAAhF,OAAA2O,UAKA,OAJAiR,IAEAA,EAAA,eAAAE,EAAA,yBAEAF,IAAAE,GAAA,eAAAF,GAAA,aAAAA,EACA5a,GAGA,aAAA8a,IACA9a,EAAAG,IACAnP,eAAwBgP,EAAAhF,OAAA6c,+CACxBnnB,YAAqBsP,EAAAhF,OAAA6c,yBAAuC+C,MAEjDrd,GAAOI,MAASJ,GAAOK,UAAazB,GAAOM,eAAkBN,GAAOS,wBAC/EoD,EAAAG,IAAAzP,YAA+BsP,EAAAhF,OAAA6c,6BAA2C+C,MAG1E,eAAAE,IACA9a,EAAAG,IACAnP,eAAwBgP,EAAAhF,OAAA6c,mDACxBnnB,YAAqBsP,EAAAhF,OAAA6c,yBAAuC+C,MAEjDrd,GAAOI,MAASJ,GAAOK,UAAazB,GAAOM,eAAkBN,GAAOS,wBAC/EoD,EAAAG,IAAAzP,YAA+BsP,EAAAhF,OAAA6c,6BAA2C+C,MAI1E5a,EAAAhF,OAAA2O,UAAAiR,EAEA5a,EAAAoB,OAAA5K,KAAA,CAAA2T,EAAA4Q,KACA,aAAAH,EACAG,EAAAlvB,MAAAoU,MAAA,GAEA8a,EAAAlvB,MAAAqU,OAAA,KAIAF,EAAAmF,KAAA,mBACA0V,GAAA7a,EAAA6I,SAEA7I,GAGA3Q,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAsK,cAEAtK,EAAAmF,KAAA,cAGAnF,EAAAhF,OAAAoa,aACApV,EAAAqV,gBAIArV,EAAAyX,aAGAzX,EAAAhF,OAAA8M,MACA9H,EAAAgM,aAIAhM,EAAAD,aAGAC,EAAAU,eAEAV,EAAAhF,OAAAoK,eACApF,EAAAqF,gBAIArF,EAAAhF,OAAAmS,YACAnN,EAAA6M,gBAGA7M,EAAAhF,OAAAyd,eACAzY,EAAAyY,gBAIAzY,EAAAhF,OAAA8M,KACA9H,EAAAiK,QAAAjK,EAAAhF,OAAAqP,aAAArK,EAAA6K,aAAA,EAAA7K,EAAAhF,OAAAse,oBAEAtZ,EAAAiK,QAAAjK,EAAAhF,OAAAqP,aAAA,EAAArK,EAAAhF,OAAAse,oBAIAtZ,EAAA4V,eAGA5V,EAAAsK,aAAA,EAGAtK,EAAAmF,KAAA,SAGA9V,QAAA2rB,GAAA,EAAAC,GAAA,GACA,MAAAjb,EAAAzU,MACAyP,OACAA,EAAAmF,MAAAQ,aAAAS,UACKpB,EAEL,2BAAAA,EAAAhF,QAAAgF,EAAA0K,UACA,MAGA1K,EAAAmF,KAAA,iBAGAnF,EAAAsK,aAAA,EAGAtK,EAAAsW,eAGAtb,EAAA8M,MACA9H,EAAA4M,cAIAqO,IACAjb,EAAA8X,gBACA3X,EAAAxO,WAAA,SACAgP,EAAAhP,WAAA,SACAyP,KAAA3R,QACA2R,EACApQ,YAAA,CACAgK,EAAAqL,kBACArL,EAAAwM,iBACAxM,EAAAyM,eACAzM,EAAA0M,gBACApN,KAAA,MACA3I,WAAA,SACAA,WAAA,2BACAA,WAAA,sBACAA,WAAA,oBAIAqO,EAAAmF,KAAA,WAGA/L,OAAAC,KAAA2G,EAAAhC,iBAAA1E,QAAA2E,IACA+B,EAAAhM,IAAAiK,MAGA,IAAA+c,IACAhb,EAAAG,IAAA,GAAAH,OAAA,KACAA,EAAAG,IAAAxL,KAAA,eACA6E,GAAA0hB,YAAAlb,IAEAA,EAAA0K,WAAA,EAEA,MAGArb,sBAAA8rB,GACA3hB,GAAA0C,OAAAud,GAAA0B,GAGA1B,8BACA,OAAAA,GAGAP,sBACA,OAAAA,GAGAngB,mBACA,OAAAgF,GAGArO,eACA,OAAWA,GAIX,IAAA0rB,GAAA,CACA3b,KAAA,SACAC,MAAA,CACAuO,OAAYD,IAEZrO,OAAA,CACAsO,OAAYD,KAIZqN,GAAA,CACA5b,KAAA,UACAC,MAAA,CACA4b,QAAanf,IAEbwD,OAAA,CACA2b,QAAanf,KAIbof,GAAA,CACA9b,KAAA,UACAC,MAAA,CACA8b,QAAaje,IAEboC,OAAA,CACA6b,QAAaje,KAIbke,GAAA,CACAhc,KAAA,SACApQ,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACA0b,OAAA,CACArsB,gBACA2Q,MAAA0K,WAAA1K,EAAAsK,cACAtK,EAAAmF,KAAA,gBACAnF,EAAAmF,KAAA,YAEA9V,2BACA2Q,MAAA0K,WAAA1K,EAAAsK,aACAtK,EAAAmF,KAAA,0BAKA1S,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KAEMgD,EAAMjB,iBAAA,SAAA0S,EAAA0b,OAAAC,eAGNptB,EAAMjB,iBAAA,oBAAA0S,EAAA0b,OAAAE,2BAEZvsB,UACA,MAAA2Q,EAAAzU,KACMgD,EAAMhB,oBAAA,SAAAyS,EAAA0b,OAAAC,eACNptB,EAAMhB,oBAAA,oBAAAyS,EAAA0b,OAAAE,6BAKZ,MAAAC,GAAA,CACAC,KAAQvtB,EAAMwtB,kBAAqBxtB,EAAMytB,uBACzC3sB,OAAA4D,EAAAgpB,EAAA,IACA,MAAAjc,EAAAzU,KAEA2wB,EAAAL,GAAAC,KACA7e,EAAA,IAAAif,EAAAC,IAIA,OAAAA,EAAA1sB,OAEA,YADAuQ,EAAAmF,KAAA,iBAAAgX,EAAA,IAGA,MAAAC,EAAA,WACApc,EAAAmF,KAAA,iBAAAgX,EAAA,KAGU5tB,EAAM8tB,sBACR9tB,EAAM8tB,sBAAAD,GAEN7tB,EAAMW,WAAAktB,EAAA,KAIdnf,EAAAqf,QAAArpB,EAAA,CACAspB,WAAA,qBAAAN,EAAAM,YAAAN,EAAAM,WACAC,UAAA,qBAAAP,EAAAO,WAAAP,EAAAO,UACAC,cAAA,qBAAAR,EAAAQ,eAAAR,EAAAQ,gBAGAzc,EAAA/C,SAAAyf,UAAAtsB,KAAA6M,IAEA5N,OACA,MAAA2Q,EAAAzU,KACA,GAAS4Q,GAAOc,UAAA+C,EAAAhF,OAAAiC,SAAhB,CACA,GAAA+C,EAAAhF,OAAA2hB,eAAA,CACA,MAAAC,EAAA5c,EAAAG,IAAA5M,UACA,QAAA/D,EAAA,EAAqBA,EAAAotB,EAAAntB,OAA6BD,GAAA,EAClDwQ,EAAA/C,SAAA4f,OAAAD,EAAAptB,IAIAwQ,EAAA/C,SAAA4f,OAAA7c,EAAAG,IAAA,IAA2Cqc,UAAAxc,EAAAhF,OAAA8hB,uBAG3C9c,EAAA/C,SAAA4f,OAAA7c,EAAAW,WAAA,IAAkD4b,YAAA,MAElDltB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAA/C,SAAAyf,UAAApjB,QAAA2D,IACAA,EAAA8f,eAEA/c,EAAA/C,SAAAyf,UAAA,KAIA,IAAAM,GAAA,CACAvd,KAAA,WACAzE,OAAA,CACAiC,UAAA,EACA0f,gBAAA,EACAG,sBAAA,GAEAztB,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACA/C,SAAA,CACAkc,KAAA0C,GAAA1C,KAAA/Z,KAAAY,GACA6c,OAAAhB,GAAAgB,OAAAzd,KAAAY,GACAid,QAAApB,GAAAoB,QAAA7d,KAAAY,GACA0c,UAAA,OAIAjqB,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAA/C,SAAAkc,QAEA9pB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAA/C,SAAAggB,aAKA,MAAAC,GAAA,CACA7tB,OAAA8tB,GACA,MAAAnd,EAAAzU,MACAuX,cAAWA,EAAA0B,iBAAAF,kBAAgDtE,EAAAhF,QAC3DoiB,gBAAWA,EAAAC,kBAAkCrd,EAAAhF,OAAAiG,SAE7Cqc,KAAAC,EACA/hB,GAAAgiB,EAAApc,OACAA,EACAI,WAAAic,EAAAC,YACAA,EACAvkB,OAAAwkB,GACK3d,EAAAiB,QACLjB,EAAAkI,oBACA,MAAApC,EAAA9F,EAAA8F,aAAA,EAEA,IAAA8X,EAIAC,EACAC,EAJAF,EAAA5d,EAAAa,aAAA,QACAb,EAAAM,eAAA,aAIAgE,GACAuZ,EAAAlb,KAAAC,MAAAE,EAAA,GAAA0B,EAAA4Y,EACAU,EAAAnb,KAAAC,MAAAE,EAAA,GAAA0B,EAAA6Y,IAEAQ,EAAA/a,GAAA0B,EAAA,GAAA4Y,EACAU,EAAAtZ,EAAA6Y,GAEA,MAAAC,EAAA3a,KAAAK,KAAA8C,GAAA,GAAAgY,EAAA,GACAtiB,EAAAmH,KAAA4S,KAAAzP,GAAA,GAAA+X,EAAAzc,EAAA3R,OAAA,GACA0J,GAAA6G,EAAAwB,WAAA8b,IAAA,IAAAtd,EAAAwB,WAAA,OASA,SAAAuc,IACA/d,EAAAU,eACAV,EAAA8G,iBACA9G,EAAAqH,sBACArH,EAAAge,MAAAhe,EAAAhF,OAAAgjB,KAAA9c,SACAlB,EAAAge,KAAAC,OAIA,GAhBAzkB,GAAA0C,OAAA8D,EAAAiB,QAAA,CACAqc,OACA9hB,KACArC,SACAqI,WAAAxB,EAAAwB,aAYA+b,IAAAD,GAAAE,IAAAhiB,IAAA2hB,EAKA,OAJAnd,EAAAwB,aAAAic,GAAAtkB,IAAAwkB,GACA3d,EAAAoB,OAAA/K,IAAAunB,KAAyCzkB,YAEzC6G,EAAA8G,iBAGA,GAAA9G,EAAAhF,OAAAiG,QAAAid,eAcA,OAbAle,EAAAhF,OAAAiG,QAAAid,eAAAhpB,KAAA8K,EAAA,CACA7G,SACAmkB,OACA9hB,KACA4F,OAAA,WACA,MAAA+c,EAAA,GACA,QAAA3uB,EAAA8tB,EAA4B9tB,GAAAgM,EAAShM,GAAA,EACrC2uB,EAAA/tB,KAAAgR,EAAA5R,IAEA,OAAA2uB,EALA,UAQAJ,IAGA,MAAAK,EAAA,GACAC,EAAA,GACA,GAAAlB,EACAnd,EAAAW,WAAAnI,SAAiCwH,EAAAhF,OAAAqG,cAAyBpQ,cAE1D,QAAAzB,EAAA+tB,EAAgC/tB,GAAAguB,EAAiBhuB,GAAA,GACjDA,EAAA8tB,GAAA9tB,EAAAgM,IACAwE,EAAAW,WAAAnI,SAAqCwH,EAAAhF,OAAAqG,uCAAqD7R,OAAEyB,SAI5F,QAAAzB,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACtCA,GAAA8tB,GAAA9tB,GAAAgM,IACA,qBAAAgiB,GAAAL,EACAkB,EAAAjuB,KAAAZ,IAEAA,EAAAguB,GAAAa,EAAAjuB,KAAAZ,GACAA,EAAA+tB,GAAAa,EAAAhuB,KAAAZ,KAIA6uB,EAAA/kB,QAAAxM,IACAkT,EAAAW,WAAAtJ,OAAAqmB,EAAAtc,EAAAtU,SAEAsxB,EAAAhH,KAAA,CAAAhd,EAAAid,MAAAjd,GAAAd,QAAAxM,IACAkT,EAAAW,WAAAjJ,QAAAgmB,EAAAtc,EAAAtU,SAEAkT,EAAAW,WAAA1S,SAAA,iBAAAoI,IAAAunB,KAAmEzkB,OACnE4kB,KAEA1uB,YAAA8T,EAAArW,GACA,MAAAkT,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAiG,QACA,GAAAjG,EAAAsjB,OAAAte,EAAAiB,QAAAqd,MAAAxxB,GACA,OAAAkT,EAAAiB,QAAAqd,MAAAxxB,GAEA,MAAAyxB,EAAAvjB,EAAA0iB,YACQhuB,EAACsL,EAAA0iB,YAAAxoB,KAAA8K,EAAAmD,EAAArW,IACD4C,iBAAiBsQ,EAAAhF,OAAAqG,wCAAsDvU,MAAUqW,WAGzF,OAFAob,EAAAjtB,KAAA,4BAAAitB,EAAAjtB,KAAA,0BAAAxE,GACAkO,EAAAsjB,QAAAte,EAAAiB,QAAAqd,MAAAxxB,GAAAyxB,GACAA,GAEAlvB,YAAA+R,GACA,MAAApB,EAAAzU,KACA,qBAAA6V,GAAA,WAAAA,EACA,QAAA5R,EAAA,EAAqBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACxC4R,EAAA5R,IAAAwQ,EAAAiB,QAAAG,OAAAhR,KAAAgR,EAAA5R,SAGAwQ,EAAAiB,QAAAG,OAAAhR,KAAAgR,GAEApB,EAAAiB,QAAA4H,QAAA,IAEAxZ,aAAA+R,GACA,MAAApB,EAAAzU,KACAua,EAAA9F,EAAA8F,YACA,IAAAqC,EAAArC,EAAA,EACA0Y,EAAA,EAEA,GAAAjgB,MAAAC,QAAA4C,GAAA,CACA,QAAA5R,EAAA,EAAqBA,EAAA4R,EAAA3R,OAAmBD,GAAA,EACxC4R,EAAA5R,IAAAwQ,EAAAiB,QAAAG,OAAAhO,QAAAgO,EAAA5R,IAEA2Y,EAAArC,EAAA1E,EAAA3R,OACA+uB,EAAApd,EAAA3R,YAEAuQ,EAAAiB,QAAAG,OAAAhO,QAAAgO,GAEA,GAAApB,EAAAhF,OAAAiG,QAAAqd,MAAA,CACA,MAAAA,EAAAte,EAAAiB,QAAAqd,MACAG,EAAA,GACArlB,OAAAC,KAAAilB,GAAAhlB,QAAAolB,IACAD,EAAAje,SAAAke,EAAA,IAAAF,GAAAF,EAAAI,KAEA1e,EAAAiB,QAAAqd,MAAAG,EAEAze,EAAAiB,QAAA4H,QAAA,GACA7I,EAAAiK,QAAA9B,EAAA,IAEA9Y,YAAAue,GACA,MAAA5N,EAAAzU,KACA,wBAAAqiB,GAAA,OAAAA,EAAA,OACA,IAAA9H,EAAA9F,EAAA8F,YACA,GAAAvH,MAAAC,QAAAoP,GACA,QAAApe,EAAAoe,EAAAne,OAAA,EAA4CD,GAAA,EAAQA,GAAA,EACpDwQ,EAAAiB,QAAAG,OAAAjN,OAAAyZ,EAAApe,GAAA,GACAwQ,EAAAhF,OAAAiG,QAAAqd,cACAte,EAAAiB,QAAAqd,MAAA1Q,EAAApe,IAEAoe,EAAApe,GAAAsW,OAAA,GACAA,EAAAnD,KAAAK,IAAA8C,EAAA,QAGA9F,EAAAiB,QAAAG,OAAAjN,OAAAyZ,EAAA,GACA5N,EAAAhF,OAAAiG,QAAAqd,cACAte,EAAAiB,QAAAqd,MAAA1Q,GAEAA,EAAA9H,OAAA,GACAA,EAAAnD,KAAAK,IAAA8C,EAAA,GAEA9F,EAAAiB,QAAA4H,QAAA,GACA7I,EAAAiK,QAAAnE,EAAA,IAEAzW,kBACA,MAAA2Q,EAAAzU,KACAyU,EAAAiB,QAAAG,OAAA,GACApB,EAAAhF,OAAAiG,QAAAqd,QACAte,EAAAiB,QAAAqd,MAAA,IAEAte,EAAAiB,QAAA4H,QAAA,GACA7I,EAAAiK,QAAA,OAIA,IAAA0U,GAAA,CACAlf,KAAA,UACAzE,OAAA,CACAiG,QAAA,CACAC,SAAA,EACAE,OAAA,GACAkd,OAAA,EACAZ,YAAA,KACAQ,eAAA,KACAd,gBAAA,EACAC,eAAA,IAGAhuB,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAiB,QAAA,CACA4H,OAAAqU,GAAArU,OAAAzJ,KAAAY,GACAoN,YAAA8P,GAAA9P,YAAAhO,KAAAY,GACAqN,aAAA6P,GAAA7P,aAAAjO,KAAAY,GACA2N,YAAAuP,GAAAvP,YAAAvO,KAAAY,GACA8N,gBAAAoP,GAAApP,gBAAA1O,KAAAY,GACA0d,YAAAR,GAAAQ,YAAAte,KAAAY,GACAoB,OAAApB,EAAAhF,OAAAiG,QAAAG,OACAkd,MAAA,OAIA7rB,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAiG,QAAAC,QAAA,OACAlB,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,iCAChC,MAAA+G,EAAA,CACAtZ,qBAAA,GAEA9L,GAAA0C,OAAA8D,EAAAhF,OAAA4jB,GACAplB,GAAA0C,OAAA8D,EAAA8W,eAAA8H,GAEA5e,EAAAhF,OAAAqP,cACArK,EAAAiB,QAAA4H,UAGAxZ,eACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAiG,QAAAC,SACAlB,EAAAiB,QAAA4H,YAKA,MAAAgW,GAAA,CACAxvB,OAAAuE,GACA,MAAAoM,EAAAzU,MACWsV,aAAAC,GAAoBd,EAC/B,IAAAhN,EAAAY,EACAZ,EAAAuc,gBAAAvc,IAAAuc,eACA,MAAAuP,EAAA9rB,EAAA+rB,SAAA/rB,EAAAgsB,SAEA,IAAAhf,EAAAuK,iBAAAvK,EAAAM,gBAAA,KAAAwe,GAAA9e,EAAAO,cAAA,KAAAue,GACA,SAEA,IAAA9e,EAAAwK,iBAAAxK,EAAAM,gBAAA,KAAAwe,GAAA9e,EAAAO,cAAA,KAAAue,GACA,SAEA,KAAA9rB,EAAAisB,UAAAjsB,EAAAksB,QAAAlsB,EAAAmsB,SAAAnsB,EAAAosB,YAGQjyB,EAAQK,gBAAkBL,EAAQK,cAAAE,UAAoC,UAARP,EAAQK,cAAAE,SAAAgQ,eAA6D,aAARvQ,EAAQK,cAAAE,SAAAgQ,eAA3I,CAGA,GAAAsC,EAAAhF,OAAAqkB,SAAAC,iBAAA,KAAAR,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,CACA,IAAAS,GAAA,EAEA,GAAAvf,EAAAG,IAAA5M,YAAiCyM,EAAAhF,OAAAqG,cAAyB5R,OAAA,GAAuE,IAAvEuQ,EAAAG,IAAA5M,YAAwCyM,EAAAhF,OAAAwM,oBAA+B/X,OACjI,OAEA,MAAA+vB,EAA0BjxB,EAAMgpB,WAChCkI,EAA2BlxB,EAAMmxB,YACjCC,EAAA3f,EAAAG,IAAAhH,SACA2H,IAAA6e,EAAAvpB,MAAA4J,EAAAG,IAAA,GAAAlK,YACA,MAAA2pB,EAAA,CACA,CAAAD,EAAAvpB,KAAAupB,EAAAxpB,KACA,CAAAwpB,EAAAvpB,KAAA4J,EAAAC,MAAA0f,EAAAxpB,KACA,CAAAwpB,EAAAvpB,KAAAupB,EAAAxpB,IAAA6J,EAAAE,QACA,CAAAyf,EAAAvpB,KAAA4J,EAAAC,MAAA0f,EAAAxpB,IAAA6J,EAAAE,SAEA,QAAA1Q,EAAA,EAAqBA,EAAAowB,EAAAnwB,OAAwBD,GAAA,GAC7C,MAAA2nB,EAAAyI,EAAApwB,GAEA2nB,EAAA,OAAAA,EAAA,IAAAqI,GACArI,EAAA,OAAAA,EAAA,IAAAsI,IAEAF,GAAA,GAGA,IAAAA,EAAA,OAEAvf,EAAAM,gBACA,KAAAwe,GAAA,KAAAA,IACA9rB,EAAAqe,eAAAre,EAAAqe,iBACAre,EAAA6sB,aAAA,IAEA,KAAAf,IAAAhe,GAAA,KAAAge,GAAAhe,IAAAd,EAAA8K,aACA,KAAAgU,IAAAhe,GAAA,KAAAge,GAAAhe,IAAAd,EAAAiL,cAEA,KAAA6T,GAAA,KAAAA,IACA9rB,EAAAqe,eAAAre,EAAAqe,iBACAre,EAAA6sB,aAAA,GAEA,KAAAf,GAAA9e,EAAA8K,YACA,KAAAgU,GAAA9e,EAAAiL,aAEAjL,EAAAmF,KAAA,WAAA2Z,KAGAzvB,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAqf,SAAAne,UACIxR,EAAEvC,GAAQsF,GAAA,UAAAuN,EAAAqf,SAAAS,QACd9f,EAAAqf,SAAAne,SAAA,IAEA7R,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAqf,SAAAne,UACIxR,EAAEvC,GAAQ6G,IAAA,UAAAgM,EAAAqf,SAAAS,QACd9f,EAAAqf,SAAAne,SAAA,KAIA,IAAA6e,GAAA,CACAtgB,KAAA,WACAzE,OAAA,CACAqkB,SAAA,CACAne,SAAA,EACAoe,gBAAA,IAGAjwB,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAqf,SAAA,CACAne,SAAA,EACA8e,OAAAnB,GAAAmB,OAAA5gB,KAAAY,GACAigB,QAAApB,GAAAoB,QAAA7gB,KAAAY,GACA8f,OAAAjB,GAAAiB,OAAA1gB,KAAAY,OAIAvN,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAqkB,SAAAne,SACAlB,EAAAqf,SAAAW,UAGA3wB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAqf,SAAAne,SACAlB,EAAAqf,SAAAY,aAMA,SAAAC,KACA,MAAAjiB,EAAA,UACA,IAAAkiB,EAAAliB,KAAiC9Q,EAEjC,IAAAgzB,EAAA,CACA,MAAAC,EAAoBjzB,EAAQa,cAAA,OAC5BoyB,EAAAjyB,aAAA8P,EAAA,WACAkiB,EAAA,oBAAAC,EAAAniB,GAcA,OAXAkiB,GACOhzB,EAAQkzB,gBACRlzB,EAAQkzB,eAAAC,aAGA,IAARnzB,EAAQkzB,eAAAC,WAAA,SAGfH,EAAkBhzB,EAAQkzB,eAAAC,WAAA,uBAG1BH,EAEA,MAAAI,GAAA,CACAC,eAAAhnB,GAAAI,MACAhG,MAAA,WACA,OAAQrF,EAAME,UAAAC,UAAAuB,QAAA,+BACdiwB,KAAA,qBAFA,GAIA7wB,UAAA2D,GAEA,MAAAytB,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA,IAAAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAkDA,MA/CA,WAAA/tB,IACA6tB,EAAA7tB,EAAAuB,QAEA,eAAAvB,IACA6tB,GAAA7tB,EAAAguB,WAAA,KAEA,gBAAAhuB,IACA6tB,GAAA7tB,EAAAiuB,YAAA,KAEA,gBAAAjuB,IACA4tB,GAAA5tB,EAAAkuB,YAAA,KAIA,SAAAluB,KAAA6G,OAAA7G,EAAAmuB,kBACAP,EAAAC,EACAA,EAAA,GAGAC,EAAAF,EAAAH,EACAM,EAAAF,EAAAJ,EAEA,WAAAztB,IACA+tB,EAAA/tB,EAAAouB,QAEA,WAAApuB,IACA8tB,EAAA9tB,EAAAquB,SAGAP,GAAAC,IAAA/tB,EAAAsuB,YACA,IAAAtuB,EAAAsuB,WACAR,GAAAJ,EACAK,GAAAL,IAEAI,GAAAH,EACAI,GAAAJ,IAKAG,IAAAF,IACAA,EAAAE,EAAA,QAEAC,IAAAF,IACAA,EAAAE,EAAA,QAGA,CACAQ,MAAAX,EACAY,MAAAX,EACAY,OAAAX,EACAY,OAAAX,IAGA1xB,mBACA,MAAA2Q,EAAAzU,KACAyU,EAAA2hB,cAAA,GAEAtyB,mBACA,MAAA2Q,EAAAzU,KACAyU,EAAA2hB,cAAA,GAEAtyB,OAAAuE,GACA,IAAAZ,EAAAY,EACA,MAAAoM,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAA4mB,WAEA,IAAA5hB,EAAA2hB,eAAA3mB,EAAA6mB,eAAA,SAEA7uB,EAAAuc,gBAAAvc,IAAAuc,eACA,IAAAuS,EAAA,EACA,MAAAC,EAAA/hB,EAAAa,cAAA,IAEAlM,EAAA4rB,GAAArV,UAAAlY,GAEA,GAAAgI,EAAAgnB,YACA,GAAAhiB,EAAAM,eAAA,CACA,KAAAqC,KAAA4B,IAAA5P,EAAA8sB,QAAA9e,KAAA4B,IAAA5P,EAAA+sB,SACA,SADAI,EAAAntB,EAAA8sB,OAAAM,MAEO,MAAApf,KAAA4B,IAAA5P,EAAA+sB,QAAA/e,KAAA4B,IAAA5P,EAAA8sB,SACP,SADOK,EAAAntB,EAAA+sB,YAGPI,EAAAnf,KAAA4B,IAAA5P,EAAA8sB,QAAA9e,KAAA4B,IAAA5P,EAAA+sB,SAAA/sB,EAAA8sB,OAAAM,GAAAptB,EAAA+sB,OAGA,OAAAI,EAAA,SAIA,GAFA9mB,EAAAinB,SAAAH,MAEA9hB,EAAAhF,OAAA8X,SAaK,CAEL9S,EAAAhF,OAAA8M,MACA9H,EAAA+K,UAEA,IAAAiI,EAAAhT,EAAA8I,eAAAgZ,EAAA9mB,EAAAknB,YACA,MAAA/a,EAAAnH,EAAAiH,YACAG,EAAApH,EAAAkH,MA2BA,GAzBA8L,GAAAhT,EAAAyG,iBAAAuM,EAAAhT,EAAAyG,gBACAuM,GAAAhT,EAAAgH,iBAAAgM,EAAAhT,EAAAgH,gBAEAhH,EAAA6F,cAAA,GACA7F,EAAAiJ,aAAA+J,GACAhT,EAAA8G,iBACA9G,EAAAkI,oBACAlI,EAAAqH,wBAEAF,GAAAnH,EAAAiH,cAAAG,GAAApH,EAAAkH,QACAlH,EAAAqH,sBAGArH,EAAAhF,OAAA0Z,iBACAvlB,aAAA6Q,EAAA4hB,WAAAO,SACAniB,EAAA4hB,WAAAO,QAAA3oB,GAAAsS,SAAA,KACA9L,EAAAyL,kBACS,MAGTzL,EAAAmF,KAAA,SAAAnS,GAGAgN,EAAAhF,OAAAonB,UAAApiB,EAAAhF,OAAAqnB,8BAAAriB,EAAAoiB,SAAAE,OAEAtP,IAAAhT,EAAAyG,gBAAAuM,IAAAhT,EAAAgH,eAAA,aA/CA,CACA,GAAAxN,GAAAI,MAAAoG,EAAA4hB,WAAApB,eAAA,GACA,GAAAsB,EAAA,EACA,GAAA9hB,EAAAkH,QAAAlH,EAAAhF,OAAA8M,MAAA9H,EAAA+J,WAGW,GAAA/O,EAAA6mB,eAAA,cAFX7hB,EAAA8K,YACA9K,EAAAmF,KAAA,SAAAnS,QAES,GAAAgN,EAAAiH,cAAAjH,EAAAhF,OAAA8M,MAAA9H,EAAA+J,WAGA,GAAA/O,EAAA6mB,eAAA,cAFT7hB,EAAAiL,YACAjL,EAAAmF,KAAA,SAAAnS,GAGAgN,EAAA4hB,WAAApB,gBAAA,IAA8CjyB,EAAMS,MAAAuzB,UAwCpD,OAFAvvB,EAAAqe,eAAAre,EAAAqe,iBACAre,EAAA6sB,aAAA,GACA,GAEAxwB,SACA,MAAA2Q,EAAAzU,KACA,IAAAg1B,GAAA3sB,MAAA,SACA,GAAAoM,EAAA4hB,WAAA1gB,QAAA,SACA,IAAAjO,EAAA+M,EAAAG,IAQA,MAPA,cAAAH,EAAAhF,OAAA4mB,WAAAY,eACAvvB,EAAevD,EAACsQ,EAAAhF,OAAA4mB,WAAAY,eAEhBvvB,EAAAR,GAAA,aAAAuN,EAAA4hB,WAAAa,kBACAxvB,EAAAR,GAAA,aAAAuN,EAAA4hB,WAAAc,kBACAzvB,EAAAR,GAAA8tB,GAAA3sB,MAAAoM,EAAA4hB,WAAA9B,QACA9f,EAAA4hB,WAAA1gB,SAAA,GACA,GAEA7R,UACA,MAAA2Q,EAAAzU,KACA,IAAAg1B,GAAA3sB,MAAA,SACA,IAAAoM,EAAA4hB,WAAA1gB,QAAA,SACA,IAAAjO,EAAA+M,EAAAG,IAMA,MALA,cAAAH,EAAAhF,OAAA4mB,WAAAY,eACAvvB,EAAevD,EAACsQ,EAAAhF,OAAA4mB,WAAAY,eAEhBvvB,EAAAe,IAAAusB,GAAA3sB,MAAAoM,EAAA4hB,WAAA9B,QACA9f,EAAA4hB,WAAA1gB,SAAA,GACA,IAIA,IAAAyhB,GAAA,CACAljB,KAAA,aACAzE,OAAA,CACA4mB,WAAA,CACA1gB,SAAA,EACA2gB,gBAAA,EACAI,QAAA,EACAD,aAAA,EACAE,YAAA,EACAM,aAAA,cAGAnzB,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACA4hB,WAAA,CACA1gB,SAAA,EACA8e,OAAAO,GAAAP,OAAA5gB,KAAAY,GACAigB,QAAAM,GAAAN,QAAA7gB,KAAAY,GACA8f,OAAAS,GAAAT,OAAA1gB,KAAAY,GACAyiB,iBAAAlC,GAAAkC,iBAAArjB,KAAAY,GACA0iB,iBAAAnC,GAAAmC,iBAAAtjB,KAAAY,GACAwgB,eAAAhnB,GAAAI,UAIAnH,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAA4mB,WAAA1gB,SAAAlB,EAAA4hB,WAAA5B,UAEA3wB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAA4hB,WAAA1gB,SAAAlB,EAAA4hB,WAAA3B,aAKA,MAAA2C,GAAA,CACAvzB,SAEA,MAAA2Q,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAge,WAEA,GAAAhZ,EAAAhF,OAAA8M,KAAA,OACA,MAAA+a,QAAWA,EAAAC,WAAmB9iB,EAAAgZ,WAE9B8J,KAAArzB,OAAA,IACAuQ,EAAAiH,YACA6b,EAAApyB,SAAAsK,EAAA+nB,eAEAD,EAAA9xB,YAAAgK,EAAA+nB,eAEAD,EAAA9iB,EAAAhF,OAAAoK,eAAApF,EAAAgN,SAAA,0BAAAhS,EAAAgoB,YAEAH,KAAApzB,OAAA,IACAuQ,EAAAkH,MACA2b,EAAAnyB,SAAAsK,EAAA+nB,eAEAF,EAAA7xB,YAAAgK,EAAA+nB,eAEAF,EAAA7iB,EAAAhF,OAAAoK,eAAApF,EAAAgN,SAAA,0BAAAhS,EAAAgoB,aAGA3zB,YAAA2D,GACA,MAAAgN,EAAAzU,KACAyH,EAAAqe,iBACArR,EAAAiH,cAAAjH,EAAAhF,OAAA8M,MACA9H,EAAAiL,aAEA5b,YAAA2D,GACA,MAAAgN,EAAAzU,KACAyH,EAAAqe,iBACArR,EAAAkH,QAAAlH,EAAAhF,OAAA8M,MACA9H,EAAA8K,aAEAzb,OACA,MAAA2Q,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAge,WACA,IAAAhe,EAAAioB,SAAAjoB,EAAAkoB,OAAA,OAEA,IAAAL,EACAC,EACA9nB,EAAAioB,SACAJ,EAAgBnzB,EAACsL,EAAAioB,QAEjBjjB,EAAAhF,OAAAoe,mBACA,kBAAApe,EAAAioB,QACAJ,EAAApzB,OAAA,GACA,IAAAuQ,EAAAG,IAAA3H,KAAAwC,EAAAioB,QAAAxzB,SAEAozB,EAAA7iB,EAAAG,IAAA3H,KAAAwC,EAAAioB,UAGAjoB,EAAAkoB,SACAJ,EAAgBpzB,EAACsL,EAAAkoB,QAEjBljB,EAAAhF,OAAAoe,mBACA,kBAAApe,EAAAkoB,QACAJ,EAAArzB,OAAA,GACA,IAAAuQ,EAAAG,IAAA3H,KAAAwC,EAAAkoB,QAAAzzB,SAEAqzB,EAAA9iB,EAAAG,IAAA3H,KAAAwC,EAAAkoB,UAIAL,KAAApzB,OAAA,GACAozB,EAAApwB,GAAA,QAAAuN,EAAAgZ,WAAAmK,aAEAL,KAAArzB,OAAA,GACAqzB,EAAArwB,GAAA,QAAAuN,EAAAgZ,WAAAoK,aAGA5pB,GAAA0C,OAAA8D,EAAAgZ,WAAA,CACA6J,UACAI,OAAAJ,KAAA,GACAC,UACAI,OAAAJ,KAAA,MAGAzzB,UACA,MAAA2Q,EAAAzU,MACAs3B,QAAWA,EAAAC,WAAmB9iB,EAAAgZ,WAC9B6J,KAAApzB,SACAozB,EAAA7uB,IAAA,QAAAgM,EAAAgZ,WAAAmK,aACAN,EAAA7xB,YAAAgP,EAAAhF,OAAAge,WAAA+J,gBAEAD,KAAArzB,SACAqzB,EAAA9uB,IAAA,QAAAgM,EAAAgZ,WAAAoK,aACAN,EAAA9xB,YAAAgP,EAAAhF,OAAAge,WAAA+J,kBAKA,IAAAM,GAAA,CACA5jB,KAAA,aACAzE,OAAA,CACAge,WAAA,CACAiK,OAAA,KACAC,OAAA,KAEAI,aAAA,EACAP,cAAA,yBACAQ,YAAA,uBACAP,UAAA,uBAGA3zB,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAgZ,WAAA,CACAG,KAAAyJ,GAAAzJ,KAAA/Z,KAAAY,GACA6I,OAAA+Z,GAAA/Z,OAAAzJ,KAAAY,GACAid,QAAA2F,GAAA3F,QAAA7d,KAAAY,GACAmjB,YAAAP,GAAAO,YAAA/jB,KAAAY,GACAojB,YAAAR,GAAAQ,YAAAhkB,KAAAY,OAIAvN,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAgZ,WAAAG,OACAnZ,EAAAgZ,WAAAnQ,UAEAxZ,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAgZ,WAAAnQ,UAEAxZ,WACA,MAAA2Q,EAAAzU,KACAyU,EAAAgZ,WAAAnQ,UAEAxZ,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAgZ,WAAAiE,WAEA5tB,MAAA2D,GACA,MAAAgN,EAAAzU,MACAs3B,QAAaA,EAAAC,WAAmB9iB,EAAAgZ,WAChC,GACAhZ,EAAAhF,OAAAge,WAAAsK,cACY5zB,EAACsD,EAAAC,QAAAI,GAAAyvB,KACDpzB,EAACsD,EAAAC,QAAAI,GAAAwvB,GACb,CACA,IAAAW,EACAX,EACAW,EAAAX,EAAA3xB,SAAA8O,EAAAhF,OAAAge,WAAAuK,aACST,IACTU,EAAAV,EAAA5xB,SAAA8O,EAAAhF,OAAAge,WAAAuK,eAEA,IAAAC,EACAxjB,EAAAmF,KAAA,iBAAAnF,GAEAA,EAAAmF,KAAA,iBAAAnF,GAEA6iB,GACAA,EAAAzxB,YAAA4O,EAAAhF,OAAAge,WAAAuK,aAEAT,GACAA,EAAA1xB,YAAA4O,EAAAhF,OAAAge,WAAAuK,iBAOA,MAAAE,GAAA,CACAp0B,SAEA,MAAA2Q,EAAAzU,KACAuV,EAAAd,EAAAc,IACA9F,EAAAgF,EAAAhF,OAAA0oB,WACA,IAAA1oB,EAAAlJ,KAAAkO,EAAA0jB,WAAA5xB,KAAAkO,EAAA0jB,WAAAvjB,KAAA,IAAAH,EAAA0jB,WAAAvjB,IAAA1Q,OAAA,OACA,MAAA6R,EAAAtB,EAAAiB,SAAAjB,EAAAhF,OAAAiG,QAAAC,QAAAlB,EAAAiB,QAAAG,OAAA3R,OAAAuQ,EAAAoB,OAAA3R,OACA0Q,EAAAH,EAAA0jB,WAAAvjB,IAEA,IAAAwjB,EACA,MAAAC,EAAA5jB,EAAAhF,OAAA8M,KAAAnF,KAAAE,MAAAvB,EAAA,EAAAtB,EAAA6K,cAAA7K,EAAAhF,OAAAwJ,gBAAAxE,EAAAuB,SAAA9R,OAcA,GAbAuQ,EAAAhF,OAAA8M,MACA6b,EAAAhhB,KAAAE,MAAA7C,EAAA8F,YAAA9F,EAAA6K,cAAA7K,EAAAhF,OAAAwJ,gBACAmf,EAAAriB,EAAA,IAAAtB,EAAA6K,eACA8Y,GAAAriB,EAAA,EAAAtB,EAAA6K,cAEA8Y,EAAAC,EAAA,IAAAD,GAAAC,GACAD,EAAA,eAAA3jB,EAAAhF,OAAA6oB,iBAAAF,EAAAC,EAAAD,IAEAA,EADK,qBAAA3jB,EAAAkF,UACLlF,EAAAkF,UAEAlF,EAAA8F,aAAA,EAGA,YAAA9K,EAAAyU,MAAAzP,EAAA0jB,WAAAI,SAAA9jB,EAAA0jB,WAAAI,QAAAr0B,OAAA,GACA,MAAAq0B,EAAA9jB,EAAA0jB,WAAAI,QACA,IAAAC,EACAC,EACAC,EAiBA,GAhBAjpB,EAAAkpB,iBACAlkB,EAAA0jB,WAAAS,WAAAL,EAAA3sB,GAAA,GAAA6I,EAAAM,eAAA,gCACAH,EAAA9J,IAAA2J,EAAAM,eAAA,oBAA+DN,EAAA0jB,WAAAS,YAAAnpB,EAAAopB,mBAAA,QAC/DppB,EAAAopB,mBAAA,QAAA1wB,IAAAsM,EAAAoI,gBACApI,EAAA0jB,WAAAW,oBAAAV,EAAA3jB,EAAAoI,cACApI,EAAA0jB,WAAAW,mBAAArpB,EAAAopB,mBAAA,EACApkB,EAAA0jB,WAAAW,mBAAArpB,EAAAopB,mBAAA,EACWpkB,EAAA0jB,WAAAW,mBAAA,IACXrkB,EAAA0jB,WAAAW,mBAAA,IAGAN,EAAAJ,EAAA3jB,EAAA0jB,WAAAW,mBACAL,EAAAD,GAAAphB,KAAA4S,IAAAuO,EAAAr0B,OAAAuL,EAAAopB,oBAAA,GACAH,GAAAD,EAAAD,GAAA,GAEAD,EAAA9yB,eAA6BgK,EAAAspB,qBAA4BtpB,EAAAspB,0BAAiCtpB,EAAAspB,+BAAsCtpB,EAAAspB,0BAAiCtpB,EAAAspB,+BAAsCtpB,EAAAspB,0BACvMnkB,EAAA1Q,OAAA,EACAq0B,EAAAttB,KAAA,CAAA1J,EAAAy3B,KACA,MAAAC,EAA0B90B,EAAC60B,GAC3BE,EAAAD,EAAA13B,QACA23B,IAAAd,GACAa,EAAA9zB,SAAAsK,EAAAspB,mBAEAtpB,EAAAkpB,iBACAO,GAAAV,GAAAU,GAAAT,GACAQ,EAAA9zB,YAAkCsK,EAAAspB,0BAElCG,IAAAV,GACAS,EACAxsB,OACAtH,YAA6BsK,EAAAspB,0BAC7BtsB,OACAtH,YAA6BsK,EAAAspB,+BAE7BG,IAAAT,GACAQ,EACA5sB,OACAlH,YAA6BsK,EAAAspB,0BAC7B1sB,OACAlH,YAA6BsK,EAAAspB,sCAItB,CACP,MAAAE,EAAAV,EAAA3sB,GAAAwsB,GAEA,GADAa,EAAA9zB,SAAAsK,EAAAspB,mBACAtpB,EAAAkpB,eAAA,CACA,MAAAQ,EAAAZ,EAAA3sB,GAAA4sB,GACAY,EAAAb,EAAA3sB,GAAA6sB,GACA,QAAAx0B,EAAAu0B,EAAkCv0B,GAAAw0B,EAAgBx0B,GAAA,EAClDs0B,EAAA3sB,GAAA3H,GAAAkB,YAAsCsK,EAAAspB,0BAEtCI,EACA1sB,OACAtH,YAAyBsK,EAAAspB,0BACzBtsB,OACAtH,YAAyBsK,EAAAspB,+BACzBK,EACA/sB,OACAlH,YAAyBsK,EAAAspB,0BACzB1sB,OACAlH,YAAyBsK,EAAAspB,gCAGzB,GAAAtpB,EAAAkpB,eAAA,CACA,MAAAU,EAAAjiB,KAAA4S,IAAAuO,EAAAr0B,OAAAuL,EAAAopB,mBAAA,GACAS,GAAA7kB,EAAA0jB,WAAAS,WAAAS,EAAA5kB,EAAA0jB,WAAA,cAAAO,EAAAjkB,EAAA0jB,WAAAS,WACAvG,EAAA9c,EAAA,eACAgjB,EAAAztB,IAAA2J,EAAAM,eAAAsd,EAAA,SAAmEiH,QAOnE,GAJA,aAAA7pB,EAAAyU,OACAtP,EAAA3H,SAAmBwC,EAAA8pB,gBAAoBnuB,KAAAqE,EAAA+pB,sBAAApB,EAAA,IACvCxjB,EAAA3H,SAAmBwC,EAAAgqB,cAAkBruB,KAAAqE,EAAAiqB,oBAAArB,KAErC,gBAAA5oB,EAAAyU,KAAA,CACA,IAAAyV,EAEAA,EADAlqB,EAAAmqB,oBACAnlB,EAAAM,eAAA,wBAEAN,EAAAM,eAAA,wBAEA,MAAA8kB,GAAAzB,EAAA,GAAAC,EACA,IAAAyB,EAAA,EACAC,EAAA,EACA,eAAAJ,EACAG,EAAAD,EAEAE,EAAAF,EAEAjlB,EAAA3H,SAAmBwC,EAAAuqB,wBAA4BrzB,uCAA0CmzB,aAAkBC,MAAOjzB,WAAA2N,EAAAhF,OAAA0K,OAElH,WAAA1K,EAAAyU,MAAAzU,EAAAwqB,cACArlB,EAAApQ,KAAAiL,EAAAwqB,aAAAxlB,EAAA2jB,EAAA,EAAAC,IACA5jB,EAAAmF,KAAA,mBAAAnF,EAAAG,EAAA,KAEAH,EAAAmF,KAAA,mBAAAnF,EAAAG,EAAA,IAEAA,EAAAH,EAAAhF,OAAAoK,eAAApF,EAAAgN,SAAA,0BAAAhS,EAAAgoB,YAEA3zB,SAEA,MAAA2Q,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAA0oB,WACA,IAAA1oB,EAAAlJ,KAAAkO,EAAA0jB,WAAA5xB,KAAAkO,EAAA0jB,WAAAvjB,KAAA,IAAAH,EAAA0jB,WAAAvjB,IAAA1Q,OAAA,OACA,MAAA6R,EAAAtB,EAAAiB,SAAAjB,EAAAhF,OAAAiG,QAAAC,QAAAlB,EAAAiB,QAAAG,OAAA3R,OAAAuQ,EAAAoB,OAAA3R,OAEA0Q,EAAAH,EAAA0jB,WAAAvjB,IACA,IAAAslB,EAAA,GACA,eAAAzqB,EAAAyU,KAAA,CACA,MAAAiW,EAAA1lB,EAAAhF,OAAA8M,KAAAnF,KAAAE,MAAAvB,EAAA,EAAAtB,EAAA6K,cAAA7K,EAAAhF,OAAAwJ,gBAAAxE,EAAAuB,SAAA9R,OACA,QAAAD,EAAA,EAAqBA,EAAAk2B,EAAqBl2B,GAAA,EAC1CwL,EAAA2qB,aACAF,GAAAzqB,EAAA2qB,aAAAzwB,KAAA8K,EAAAxQ,EAAAwL,EAAA4qB,aAEAH,OAAgCzqB,EAAA6qB,wBAA+B7qB,EAAA4qB,kBAAyB5qB,EAAA6qB,iBAGxF1lB,EAAApQ,KAAA01B,GACAzlB,EAAA0jB,WAAAI,QAAA3jB,EAAA3H,SAA+CwC,EAAA4qB,eAE/C,aAAA5qB,EAAAyU,OAEAgW,EADAzqB,EAAA8qB,eACA9qB,EAAA8qB,eAAA5wB,KAAA8K,EAAAhF,EAAA8pB,aAAA9pB,EAAAgqB,4BAEyChqB,EAAA8pB,wBACzC,sBAC0B9pB,EAAAgqB,sBAE1B7kB,EAAApQ,KAAA01B,IAEA,gBAAAzqB,EAAAyU,OAEAgW,EADAzqB,EAAA+qB,kBACA/qB,EAAA+qB,kBAAA7wB,KAAA8K,EAAAhF,EAAAuqB,sCAEyCvqB,EAAAuqB,gCAEzCplB,EAAApQ,KAAA01B,IAEA,WAAAzqB,EAAAyU,MACAzP,EAAAmF,KAAA,mBAAAnF,EAAA0jB,WAAAvjB,IAAA,KAGA9Q,OACA,MAAA2Q,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAA0oB,WACA,IAAA1oB,EAAAlJ,GAAA,OAEA,IAAAqO,EAAczQ,EAACsL,EAAAlJ,IACf,IAAAqO,EAAA1Q,SAGAuQ,EAAAhF,OAAAoe,mBACA,kBAAApe,EAAAlJ,IACAqO,EAAA1Q,OAAA,GACA,IAAAuQ,EAAAG,IAAA3H,KAAAwC,EAAAlJ,IAAArC,SAEA0Q,EAAAH,EAAAG,IAAA3H,KAAAwC,EAAAlJ,KAGA,YAAAkJ,EAAAyU,MAAAzU,EAAAgrB,WACA7lB,EAAAzP,SAAAsK,EAAAirB,gBAGA9lB,EAAAzP,SAAAsK,EAAAkrB,cAAAlrB,EAAAyU,MAEA,YAAAzU,EAAAyU,MAAAzU,EAAAkpB,iBACA/jB,EAAAzP,YAAsBsK,EAAAkrB,gBAAuBlrB,EAAAyU,gBAC7CzP,EAAA0jB,WAAAW,mBAAA,EACArpB,EAAAopB,mBAAA,IACAppB,EAAAopB,mBAAA,IAGA,gBAAAppB,EAAAyU,MAAAzU,EAAAmqB,qBACAhlB,EAAAzP,SAAAsK,EAAAmrB,0BAGAnrB,EAAAgrB,WACA7lB,EAAA1N,GAAA,YAA0BuI,EAAA4qB,cAAmB,SAAA5yB,GAC7CA,EAAAqe,iBACA,IAAAvkB,EAAoB4C,EAACnE,MAAAuB,QAAAkT,EAAAhF,OAAAwJ,eACrBxE,EAAAhF,OAAA8M,OAAAhb,GAAAkT,EAAA6K,cACA7K,EAAAiK,QAAAnd,KAIA0M,GAAA0C,OAAA8D,EAAA0jB,WAAA,CACAvjB,MACArO,GAAAqO,EAAA,OAGA9Q,UACA,MAAA2Q,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAA0oB,WACA,IAAA1oB,EAAAlJ,KAAAkO,EAAA0jB,WAAA5xB,KAAAkO,EAAA0jB,WAAAvjB,KAAA,IAAAH,EAAA0jB,WAAAvjB,IAAA1Q,OAAA,OACA,MAAA0Q,EAAAH,EAAA0jB,WAAAvjB,IAEAA,EAAAnP,YAAAgK,EAAAuoB,aACApjB,EAAAnP,YAAAgK,EAAAkrB,cAAAlrB,EAAAyU,MACAzP,EAAA0jB,WAAAI,SAAA9jB,EAAA0jB,WAAAI,QAAA9yB,YAAAgK,EAAAspB,mBACAtpB,EAAAgrB,WACA7lB,EAAAnM,IAAA,YAA2BgH,EAAA4qB,iBAK3B,IAAAQ,GAAA,CACA3mB,KAAA,aACAzE,OAAA,CACA0oB,WAAA,CACA5xB,GAAA,KACA+zB,cAAA,OACAG,WAAA,EACA1C,aAAA,EACAqC,aAAA,KACAI,kBAAA,KACAD,eAAA,KACAN,aAAA,KACAL,qBAAA,EACA1V,KAAA,UACAyU,gBAAA,EACAE,mBAAA,EACAW,sBAAAsB,KACApB,oBAAAoB,KACAT,YAAA,2BACAtB,kBAAA,kCACA4B,cAAA,qBACApB,aAAA,4BACAE,WAAA,0BACAzB,YAAA,2BACAgC,qBAAA,qCACAY,yBAAA,yCACAF,eAAA,8BACAjD,UAAA,2BAGA3zB,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACA0jB,WAAA,CACAvK,KAAAsK,GAAAtK,KAAA/Z,KAAAY,GACAsmB,OAAA7C,GAAA6C,OAAAlnB,KAAAY,GACA6I,OAAA4a,GAAA5a,OAAAzJ,KAAAY,GACAid,QAAAwG,GAAAxG,QAAA7d,KAAAY,GACAqkB,mBAAA,MAIA5xB,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAA0jB,WAAAvK,OACAnZ,EAAA0jB,WAAA4C,SACAtmB,EAAA0jB,WAAA7a,UAEAxZ,oBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAA8M,KACA9H,EAAA0jB,WAAA7a,SACO,qBAAA7I,EAAAkF,WACPlF,EAAA0jB,WAAA7a,UAGAxZ,kBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAA8M,MACA9H,EAAA0jB,WAAA7a,UAGAxZ,qBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAA8M,OACA9H,EAAA0jB,WAAA4C,SACAtmB,EAAA0jB,WAAA7a,WAGAxZ,uBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAA8M,OACA9H,EAAA0jB,WAAA4C,SACAtmB,EAAA0jB,WAAA7a,WAGAxZ,UACA,MAAA2Q,EAAAzU,KACAyU,EAAA0jB,WAAAzG,WAEA5tB,MAAA2D,GACA,MAAAgN,EAAAzU,KACA,GACAyU,EAAAhF,OAAA0oB,WAAA5xB,IACAkO,EAAAhF,OAAA0oB,WAAAJ,aACAtjB,EAAA0jB,WAAAvjB,IAAA1Q,OAAA,IACYC,EAACsD,EAAAC,QAAA/B,SAAA8O,EAAAhF,OAAA0oB,WAAAkC,aACb,CACA,MAAApC,EAAAxjB,EAAA0jB,WAAAvjB,IAAAjP,SAAA8O,EAAAhF,OAAA0oB,WAAAH,cACA,IAAAC,EACAxjB,EAAAmF,KAAA,iBAAAnF,GAEAA,EAAAmF,KAAA,iBAAAnF,GAEAA,EAAA0jB,WAAAvjB,IAAA/O,YAAA4O,EAAAhF,OAAA0oB,WAAAH,iBAMA,MAAAgD,GAAA,CACAl3B,eACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAwrB,UAAA10B,KAAAkO,EAAAwmB,UAAA10B,GAAA,OACA,MAAA00B,UAAWA,EAAA3lB,aAAAC,EAAA+F,YAAyC7G,GACpDymB,SACAA,EAAAC,YAAAC,UAAAxmB,OACKqmB,EACLxrB,EAAAgF,EAAAhF,OAAAwrB,UAEA,IAAAI,EAAAH,EACAI,GAAAH,EAAAD,GAAA5f,EACA/F,GACA+lB,KACAA,EAAA,GACAD,EAAAH,EAAAI,EACAA,EAAA,IACOA,EAAAJ,EAAAC,IACPE,EAAAF,EAAAG,IAEKA,EAAA,GACLD,EAAAH,EAAAI,EACAA,EAAA,GACKA,EAAAJ,EAAAC,IACLE,EAAAF,EAAAG,GAEA7mB,EAAAM,gBACUnE,GAAOW,aACjB6pB,EAAAz0B,yBAAyC20B,cAEzCF,EAAAz0B,wBAAwC20B,QAExCF,EAAA,GAAA96B,MAAAoU,SAAkC2mB,QAExBzqB,GAAOW,aACjB6pB,EAAAz0B,8BAA8C20B,WAE9CF,EAAAz0B,wBAAwC20B,QAExCF,EAAA,GAAA96B,MAAAqU,UAAmC0mB,OAEnC5rB,EAAA8rB,OACA33B,aAAA6Q,EAAAwmB,UAAArE,SACAhiB,EAAA,GAAAtU,MAAAk7B,QAAA,EACA/mB,EAAAwmB,UAAArE,QAAAjzB,WAAA,KACAiR,EAAA,GAAAtU,MAAAk7B,QAAA,EACA5mB,EAAA9N,WAAA,MACO,OAGPhD,cAAAiD,GACA,MAAA0N,EAAAzU,KACAyU,EAAAhF,OAAAwrB,UAAA10B,IAAAkO,EAAAwmB,UAAA10B,IACAkO,EAAAwmB,UAAAG,QAAAt0B,WAAAC,IAEAjD,aACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAwrB,UAAA10B,KAAAkO,EAAAwmB,UAAA10B,GAAA,OAEA,MAAA00B,UAAWA,GAAYxmB,GACvB2mB,QAAWA,EAAAxmB,OAAeqmB,EAE1BG,EAAA,GAAA96B,MAAAoU,MAAA,GACA0mB,EAAA,GAAA96B,MAAAqU,OAAA,GACA,MAAAwmB,EAAA1mB,EAAAM,eAAAH,EAAA,GAAA7K,YAAA6K,EAAA,GAAA1K,aAEAuxB,EAAAhnB,EAAAS,KAAAT,EAAAqC,YACA4kB,EAAAD,GAAAN,EAAA1mB,EAAAS,MACA,IAAAgmB,EAEAA,EADA,SAAAzmB,EAAAhF,OAAAwrB,UAAAC,SACAC,EAAAM,EAEAxmB,SAAAR,EAAAhF,OAAAwrB,UAAAC,SAAA,IAGAzmB,EAAAM,eACAqmB,EAAA,GAAA96B,MAAAoU,SAAkCwmB,MAElCE,EAAA,GAAA96B,MAAAqU,UAAmCumB,MAInCtmB,EAAA,GAAAtU,MAAAq7B,QADAF,GAAA,EACA,OAEA,GAEAhnB,EAAAhF,OAAAwrB,UAAAM,OACA3mB,EAAA,GAAAtU,MAAAk7B,QAAA,GAEAvtB,GAAA0C,OAAAsqB,EAAA,CACAE,YACAM,UACAC,cACAR,aAEAD,EAAArmB,IAAAH,EAAAhF,OAAAoK,eAAApF,EAAAgN,SAAA,0BAAAhN,EAAAhF,OAAAwrB,UAAAxD,YAEA3zB,gBAAA2D,GACA,MAAAgN,EAAAzU,MACAi7B,UAAWA,EAAA3lB,aAAAC,GAA+Bd,GAC1CG,IAAWA,EAAAsmB,WAAAC,aAA2BF,EAEtC,IAAAW,EAMAC,EAJAD,EADAnnB,EAAAM,eACA,eAAAtN,EAAAyc,MAAA,cAAAzc,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAC,MAAArd,EAAAqd,OAAArd,EAAAq0B,QAEA,eAAAr0B,EAAAyc,MAAA,cAAAzc,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAG,MAAAvd,EAAAud,OAAAvd,EAAAs0B,QAGAF,GAAA,EAAAjnB,EAAAhH,SAAA6G,EAAAM,eAAA,cAAAmmB,EAAA,IAAAC,EAAAD,GACAW,EAAAzkB,KAAAK,IAAAL,KAAA4S,IAAA6R,EAAA,MACAtmB,IACAsmB,EAAA,EAAAA,GAGA,MAAApU,EAAAhT,EAAAyG,gBAAAzG,EAAAgH,eAAAhH,EAAAyG,gBAAA2gB,EAEApnB,EAAA8G,eAAAkM,GACAhT,EAAAiJ,aAAA+J,GACAhT,EAAAkI,oBACAlI,EAAAqH,uBAEAhY,YAAA2D,GACA,MAAAgN,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAwrB,WACAA,UAAWA,EAAA7lB,cAAwBX,GACnCG,IAAWA,EAAAwmB,WAAeH,EAC1BxmB,EAAAwmB,UAAA5W,WAAA,EACA5c,EAAAqe,iBACAre,EAAAsf,kBAEA3R,EAAAtO,WAAA,KACAs0B,EAAAt0B,WAAA,KACAm0B,EAAAe,gBAAAv0B,GAEA7D,aAAA6Q,EAAAwmB,UAAAgB,aAEArnB,EAAA9N,WAAA,GACA2I,EAAA8rB,MACA3mB,EAAA9J,IAAA,aAEA2J,EAAAmF,KAAA,qBAAAnS,IAEA3D,WAAA2D,GACA,MAAAgN,EAAAzU,MACAi7B,UAAWA,EAAA7lB,cAAwBX,GACnCG,IAAWA,EAAAwmB,WAAeH,EAE1BxmB,EAAAwmB,UAAA5W,YACA5c,EAAAqe,eAAAre,EAAAqe,iBACAre,EAAA6sB,aAAA,EACA2G,EAAAe,gBAAAv0B,GACA2N,EAAAtO,WAAA,GACA8N,EAAA9N,WAAA,GACAs0B,EAAAt0B,WAAA,GACA2N,EAAAmF,KAAA,oBAAAnS,KAEA3D,UAAA2D,GACA,MAAAgN,EAAAzU,KAEAyP,EAAAgF,EAAAhF,OAAAwrB,WACAA,UAAWA,GAAYxmB,GACvBG,IAAWA,GAAMqmB,EAEjBxmB,EAAAwmB,UAAA5W,YACA5P,EAAAwmB,UAAA5W,WAAA,EACA5U,EAAA8rB,OACA33B,aAAA6Q,EAAAwmB,UAAAgB,aACAxnB,EAAAwmB,UAAAgB,YAAAhuB,GAAAsS,SAAA,KACA3L,EAAA9J,IAAA,aACA8J,EAAA9N,WAAA,MACO,MAEP2N,EAAAmF,KAAA,mBAAAnS,GACAgI,EAAAysB,eACAznB,EAAAyL,mBAGApc,kBACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAwrB,UAAA10B,GAAA,OACA,MAAA00B,UACAA,EAAAnM,mBAAAC,qBAAAtf,UACKgF,EACLG,EAAAqmB,EAAArmB,IACAlN,EAAAkN,EAAA,GACAunB,KAA2BvrB,GAAOe,kBAAAlC,EAAAkb,mBAAA,CAA+CC,SAAA,EAAArjB,SAAA,GACjFoK,KAA4Bf,GAAOe,kBAAAlC,EAAAkb,mBAAA,CAA+CC,SAAA,EAAArjB,SAAA,GACzEqJ,GAAOE,OAKhBpJ,EAAA3F,iBAAA+sB,EAAApE,MAAAjW,EAAAwmB,UAAAmB,YAAAD,GACAz0B,EAAA3F,iBAAA+sB,EAAAjE,KAAApW,EAAAwmB,UAAAoB,WAAAF,GACAz0B,EAAA3F,iBAAA+sB,EAAAhE,IAAArW,EAAAwmB,UAAAqB,UAAA3qB,KANAjK,EAAA3F,iBAAAgtB,EAAArE,MAAAjW,EAAAwmB,UAAAmB,YAAAD,GACMv6B,EAAQG,iBAAAgtB,EAAAlE,KAAApW,EAAAwmB,UAAAoB,WAAAF,GACRv6B,EAAQG,iBAAAgtB,EAAAjE,IAAArW,EAAAwmB,UAAAqB,UAAA3qB,KAOd7N,mBACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAwrB,UAAA10B,GAAA,OACA,MAAA00B,UACAA,EAAAnM,mBAAAC,qBAAAtf,UACKgF,EACLG,EAAAqmB,EAAArmB,IACAlN,EAAAkN,EAAA,GACAunB,KAA2BvrB,GAAOe,kBAAAlC,EAAAkb,mBAAA,CAA+CC,SAAA,EAAArjB,SAAA,GACjFoK,KAA4Bf,GAAOe,kBAAAlC,EAAAkb,mBAAA,CAA+CC,SAAA,EAAArjB,SAAA,GACzEqJ,GAAOE,OAKhBpJ,EAAA1F,oBAAA8sB,EAAApE,MAAAjW,EAAAwmB,UAAAmB,YAAAD,GACAz0B,EAAA1F,oBAAA8sB,EAAAjE,KAAApW,EAAAwmB,UAAAoB,WAAAF,GACAz0B,EAAA1F,oBAAA8sB,EAAAhE,IAAArW,EAAAwmB,UAAAqB,UAAA3qB,KANAjK,EAAA1F,oBAAA+sB,EAAArE,MAAAjW,EAAAwmB,UAAAmB,YAAAD,GACMv6B,EAAQI,oBAAA+sB,EAAAlE,KAAApW,EAAAwmB,UAAAoB,WAAAF,GACRv6B,EAAQI,oBAAA+sB,EAAAjE,IAAArW,EAAAwmB,UAAAqB,UAAA3qB,KAOd7N,OACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAwrB,UAAA10B,GAAA,OACA,MAAA00B,UAAWA,EAAArmB,IAAA2nB,GAA4B9nB,EACvChF,EAAAgF,EAAAhF,OAAAwrB,UAEA,IAAArmB,EAAczQ,EAACsL,EAAAlJ,IACfkO,EAAAhF,OAAAoe,mBAAA,kBAAApe,EAAAlJ,IAAAqO,EAAA1Q,OAAA,OAAAq4B,EAAAtvB,KAAAwC,EAAAlJ,IAAArC,SACA0Q,EAAA2nB,EAAAtvB,KAAAwC,EAAAlJ,KAGA,IAAA60B,EAAAxmB,EAAA3H,SAA+BwH,EAAAhF,OAAAwrB,UAAAuB,aAC/B,IAAApB,EAAAl3B,SACAk3B,EAAgBj3B,iBAAiBsQ,EAAAhF,OAAAwrB,UAAAuB,qBACjC5nB,EAAA9I,OAAAsvB,IAGAntB,GAAA0C,OAAAsqB,EAAA,CACArmB,MACArO,GAAAqO,EAAA,GACAwmB,UACAqB,OAAArB,EAAA,KAGA3rB,EAAAitB,WACAzB,EAAA0B,mBAGA74B,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAA2B,qBAIA,IAAAC,GAAA,CACA3oB,KAAA,YACAzE,OAAA,CACAwrB,UAAA,CACA10B,GAAA,KACA20B,SAAA,OACAK,MAAA,EACAmB,WAAA,EACAR,eAAA,EACAzE,UAAA,wBACA+E,UAAA,0BAGA14B,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAwmB,UAAA,CACArN,KAAAoN,GAAApN,KAAA/Z,KAAAY,GACAid,QAAAsJ,GAAAtJ,QAAA7d,KAAAY,GACAD,WAAAwmB,GAAAxmB,WAAAX,KAAAY,GACAiJ,aAAAsd,GAAAtd,aAAA7J,KAAAY,GACA6F,cAAA0gB,GAAA1gB,cAAAzG,KAAAY,GACAkoB,gBAAA3B,GAAA2B,gBAAA9oB,KAAAY,GACAmoB,iBAAA5B,GAAA4B,iBAAA/oB,KAAAY,GACAunB,gBAAAhB,GAAAgB,gBAAAnoB,KAAAY,GACA2nB,YAAApB,GAAAoB,YAAAvoB,KAAAY,GACA4nB,WAAArB,GAAAqB,WAAAxoB,KAAAY,GACA6nB,UAAAtB,GAAAsB,UAAAzoB,KAAAY,GACA4P,WAAA,EACAuS,QAAA,KACAqF,YAAA,SAIA/0B,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAArN,OACAnZ,EAAAwmB,UAAAzmB,aACAC,EAAAwmB,UAAAvd,gBAEA5Z,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAAzmB,cAEA1Q,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAAzmB,cAEA1Q,iBACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAAzmB,cAEA1Q,eACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAAvd,gBAEA5Z,cAAAiD,GACA,MAAA0N,EAAAzU,KACAyU,EAAAwmB,UAAA3gB,cAAAvT,IAEAjD,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAwmB,UAAAvJ,aAKA,MAAAoL,GAAA,CACAh5B,aAAAyC,EAAA+U,GACA,MAAA7G,EAAAzU,MACAuV,IAAWA,GAAMd,EAEjBG,EAAgBzQ,EAACoC,GACjBiwB,EAAAjhB,GAAA,IAEAwnB,EAAAnoB,EAAA7O,KAAA,6BACA,IAAA6X,EAAAhJ,EAAA7O,KAAA,0BACA8X,EAAAjJ,EAAA7O,KAAA,0BACA,MAAA8zB,EAAAjlB,EAAA7O,KAAA,8BACAy1B,EAAA5mB,EAAA7O,KAAA,gCAwBA,GAtBA6X,GAAAC,GACAD,KAAA,IACAC,KAAA,KACKpJ,EAAAM,gBACL6I,EAAAmf,EACAlf,EAAA,MAEAA,EAAAkf,EACAnf,EAAA,KAIAA,EADA,EAAAlZ,QAAA,WACauQ,SAAA2I,EAAA,IAAAtC,EAAAkb,QAEA5Y,EAAAtC,EAAAkb,MAGb3Y,EADA,EAAAnZ,QAAA,WACauQ,SAAA4I,EAAA,IAAAvC,QAEAuC,EAAAvC,MAGb,qBAAAkgB,GAAA,OAAAA,EAAA,CACA,MAAAwB,EAAAxB,KAAA,MAAApkB,KAAA4B,IAAAsC,IACA1G,EAAA,GAAAtU,MAAAk7B,QAAAwB,EAEA,wBAAAnD,GAAA,OAAAA,EACAjlB,EAAAjO,yBAAmCiX,MAAMC,eACpC,CACL,MAAAof,EAAApD,KAAA,MAAAziB,KAAA4B,IAAAsC,IACA1G,EAAAjO,yBAAmCiX,MAAMC,iBAAiBof,QAG1Dn5B,eACA,MAAA2Q,EAAAzU,MACA4U,IACAA,EAAAiB,SAAAyF,WAAAtF,YACKvB,EACLG,EAAAlS,SAAA,8EACAuI,KAAA,CAAA1J,EAAAgF,KACAkO,EAAAyoB,SAAAC,aAAA52B,EAAA+U,KAEAzF,EAAA5K,KAAA,CAAA2T,EAAA4Q,KACA,IAAAvU,EAAAuU,EAAAlU,SACA7G,EAAAhF,OAAAwJ,eAAA,YAAAxE,EAAAhF,OAAA8H,gBACA0D,GAAA7D,KAAAE,KAAAsH,EAAA,GAAAtD,GAAAtF,EAAA9R,OAAA,IAEA+W,EAAA7D,KAAA4S,IAAA5S,KAAAK,IAAAwD,GAAA,MACM9W,EAACqrB,GAAAviB,KAAA,8EACPhC,KAAA,CAAA1J,EAAAgF,KACAkO,EAAAyoB,SAAAC,aAAA52B,EAAA0U,QAIAnX,cAAAiD,EAAA/G,KAAAyP,OAAA0K,OACA,MAAA1F,EAAAzU,MACA4U,IAAWA,GAAMH,EACjBG,EAAA3H,KAAA,8EACAhC,KAAA,CAAA1J,EAAA67B,KACA,MAAAC,EAA4Bl5B,EAACi5B,GAC7B,IAAAE,EAAAroB,SAAAooB,EAAAt3B,KAAA,sCAAAgB,EACA,IAAAA,IAAAu2B,EAAA,GACAD,EAAAv2B,WAAAw2B,OAKA,IAAAC,GAAA,CACArpB,KAAA,WACAzE,OAAA,CACAytB,SAAA,CACAvnB,SAAA,IAGA7R,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAyoB,SAAA,CACAC,aAAAL,GAAAK,aAAAtpB,KAAAY,GACAiJ,aAAAof,GAAApf,aAAA7J,KAAAY,GACA6F,cAAAwiB,GAAAxiB,cAAAzG,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAytB,SAAAvnB,UACAlB,EAAAhF,OAAAsK,qBAAA,EACAtF,EAAA8W,eAAAxR,qBAAA,IAEAjW,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAytB,SAAAvnB,SACAlB,EAAAyoB,SAAAxf,gBAEA5Z,eACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAytB,SAAAvnB,SACAlB,EAAAyoB,SAAAxf,gBAEA5Z,cAAAiD,GACA,MAAA0N,EAAAzU,KACAyU,EAAAhF,OAAAytB,SAAAvnB,SACAlB,EAAAyoB,SAAA5iB,cAAAvT,MAKA,MAAAy2B,GAAA,CAEA15B,0BAAA2D,GACA,GAAAA,EAAAod,cAAA3gB,OAAA,WACA,MAAAu5B,EAAAh2B,EAAAod,cAAA,GAAAC,MACA4Y,EAAAj2B,EAAAod,cAAA,GAAAG,MACA2Y,EAAAl2B,EAAAod,cAAA,GAAAC,MACA8Y,EAAAn2B,EAAAod,cAAA,GAAAG,MACAqD,EAAAjR,KAAAqP,MAAAkX,EAAAF,IAAA,GAAAG,EAAAF,IAAA,GACA,OAAArV,GAGAvkB,eAAA2D,GACA,MAAAgN,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAouB,KACAA,EAAAppB,EAAAopB,MACAC,QAAWA,GAAUD,EAGrB,GAFAA,EAAAE,oBAAA,EACAF,EAAAG,kBAAA,GACSptB,GAAOmB,SAAA,CAChB,kBAAAtK,EAAAyc,MAAA,eAAAzc,EAAAyc,MAAAzc,EAAAod,cAAA3gB,OAAA,EACA,OAEA25B,EAAAE,oBAAA,EACAD,EAAAG,WAAAT,GAAAU,0BAAAz2B,GAEAq2B,EAAA9K,UAAA8K,EAAA9K,SAAA9uB,SACA45B,EAAA9K,SAAyB7uB,EAACsD,EAAAC,QAAAsF,QAAA,iBAC1B,IAAA8wB,EAAA9K,SAAA9uB,SAAA45B,EAAA9K,SAAAve,EAAAoB,OAAAjK,GAAA6I,EAAA8F,cACAujB,EAAAK,SAAAL,EAAA9K,SAAA/lB,KAAA,oBACA6wB,EAAAM,aAAAN,EAAAK,SAAApxB,WAAyD0C,EAAA4uB,kBACzDP,EAAAQ,SAAAR,EAAAM,aAAAr4B,KAAA,qBAAA0J,EAAA6uB,SACA,IAAAR,EAAAM,aAAAl6B,SAKA45B,EAAAK,SAAAr3B,WAAA,GACA2N,EAAAopB,KAAAU,WAAA,GALAT,EAAAK,cAAAh2B,GAOArE,gBAAA2D,GACA,MAAAgN,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAouB,KACAA,EAAAppB,EAAAopB,MACAC,QAAWA,GAAUD,EACrB,IAASjtB,GAAOmB,SAAA,CAChB,iBAAAtK,EAAAyc,MAAA,cAAAzc,EAAAyc,MAAAzc,EAAAod,cAAA3gB,OAAA,EACA,OAEA25B,EAAAG,kBAAA,EACAF,EAAAU,UAAAhB,GAAAU,0BAAAz2B,GAEAq2B,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,SACQ0M,GAAOmB,SACf8rB,EAAAhE,MAAApyB,EAAAoyB,MAAAgE,EAAAZ,aAEAY,EAAAhE,MAAAiE,EAAAU,UAAAV,EAAAG,WAAAJ,EAAAZ,aAEAY,EAAAhE,MAAAiE,EAAAQ,WACAT,EAAAhE,MAAAiE,EAAAQ,SAAA,GAAAT,EAAAhE,MAAAiE,EAAAQ,SAAA,QAEAT,EAAAhE,MAAApqB,EAAAgvB,WACAZ,EAAAhE,MAAApqB,EAAAgvB,SAAA,GAAAhvB,EAAAgvB,SAAAZ,EAAAhE,MAAA,QAEAiE,EAAAK,SAAAx3B,sCAA2Dk3B,EAAAhE,YAE3D/1B,aAAA2D,GACA,MAAAgN,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAouB,KACAA,EAAAppB,EAAAopB,MACAC,QAAWA,GAAUD,EACrB,IAASjtB,GAAOmB,SAAA,CAChB,IAAA8rB,EAAAE,qBAAAF,EAAAG,iBACA,OAEA,gBAAAv2B,EAAAyc,MAAA,aAAAzc,EAAAyc,MAAAzc,EAAAi3B,eAAAx6B,OAAA,IAA6Fue,GAAMG,QACnG,OAEAib,EAAAE,oBAAA,EACAF,EAAAG,kBAAA,EAEAF,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,SACA25B,EAAAhE,MAAAziB,KAAAK,IAAAL,KAAA4S,IAAA6T,EAAAhE,MAAAiE,EAAAQ,UAAA7uB,EAAAgvB,UACAX,EAAAK,SAAAr3B,WAAA2N,EAAAhF,OAAA0K,OAAAxT,sCAA2Fk3B,EAAAhE,UAC3FgE,EAAAZ,aAAAY,EAAAhE,MACAgE,EAAAU,WAAA,EACA,IAAAV,EAAAhE,QAAAiE,EAAA9K,cAAA7qB,KAEArE,aAAA2D,GACA,MAAAgN,EAAAzU,KACA69B,EAAAppB,EAAAopB,MACAC,QAAWA,EAAAjR,SAAiBgR,EAC5BC,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,SACA2oB,EAAAxI,YACQ5B,GAAMG,SAAAnb,EAAAqe,iBACd+G,EAAAxI,WAAA,EACAwI,EAAA8R,aAAA/gB,EAAA,eAAAnW,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAC,MAAArd,EAAAqd,MACA+H,EAAA8R,aAAA9gB,EAAA,eAAApW,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAG,MAAAvd,EAAAud,SAEAlhB,YAAA2D,GACA,MAAAgN,EAAAzU,KACA69B,EAAAppB,EAAAopB,MACAC,QAAWA,EAAAjR,QAAAvE,YAA2BuV,EACtC,IAAAC,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,OAAA,OAEA,GADAuQ,EAAAiQ,YAAA,GACAmI,EAAAxI,YAAAyZ,EAAA9K,SAAA,OAEAnG,EAAAvI,UACAuI,EAAAnY,MAAAopB,EAAAK,SAAA,GAAAp0B,YACA8iB,EAAAlY,OAAAmpB,EAAAK,SAAA,GAAAj0B,aACA2iB,EAAA5H,OAAAhX,GAAAsP,aAAAugB,EAAAM,aAAA,WACAvR,EAAA3H,OAAAjX,GAAAsP,aAAAugB,EAAAM,aAAA,WACAN,EAAAc,WAAAd,EAAA9K,SAAA,GAAAjpB,YACA+zB,EAAAe,YAAAf,EAAA9K,SAAA,GAAA9oB,aACA4zB,EAAAM,aAAAt3B,WAAA,GACA2N,EAAAc,MACAsX,EAAA5H,QAAA4H,EAAA5H,OACA4H,EAAA3H,QAAA2H,EAAA3H,SAIA,MAAA4Z,EAAAjS,EAAAnY,MAAAmpB,EAAAhE,MACAkF,EAAAlS,EAAAlY,OAAAkpB,EAAAhE,MAEA,KAAAiF,EAAAhB,EAAAc,YAAAG,EAAAjB,EAAAe,aAAA,CAUA,GARAhS,EAAAmS,KAAA5nB,KAAA4S,IAAA8T,EAAAc,WAAA,EAAAE,EAAA,KACAjS,EAAAoS,MAAApS,EAAAmS,KACAnS,EAAAqS,KAAA9nB,KAAA4S,IAAA8T,EAAAe,YAAA,EAAAE,EAAA,KACAlS,EAAAsS,MAAAtS,EAAAqS,KAEArS,EAAAuS,eAAAxhB,EAAA,cAAAnW,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAC,MAAArd,EAAAqd,MACA+H,EAAAuS,eAAAvhB,EAAA,cAAApW,EAAAyc,KAAAzc,EAAAod,cAAA,GAAAG,MAAAvd,EAAAud,OAEA6H,EAAAvI,UAAAuZ,EAAAU,UAAA,CACA,GACA9pB,EAAAM,iBAEAqC,KAAAC,MAAAwV,EAAAmS,QAAA5nB,KAAAC,MAAAwV,EAAA5H,SAAA4H,EAAAuS,eAAAxhB,EAAAiP,EAAA8R,aAAA/gB,GACAxG,KAAAC,MAAAwV,EAAAoS,QAAA7nB,KAAAC,MAAAwV,EAAA5H,SAAA4H,EAAAuS,eAAAxhB,EAAAiP,EAAA8R,aAAA/gB,GAIA,YADAiP,EAAAxI,WAAA,GAEO,IACP5P,EAAAM,iBAEAqC,KAAAC,MAAAwV,EAAAqS,QAAA9nB,KAAAC,MAAAwV,EAAA3H,SAAA2H,EAAAuS,eAAAvhB,EAAAgP,EAAA8R,aAAA9gB,GACAzG,KAAAC,MAAAwV,EAAAsS,QAAA/nB,KAAAC,MAAAwV,EAAA3H,SAAA2H,EAAAuS,eAAAvhB,EAAAgP,EAAA8R,aAAA9gB,GAIA,YADAgP,EAAAxI,WAAA,GAIA5c,EAAAqe,iBACAre,EAAAsf,kBAEA8F,EAAAvI,SAAA,EACAuI,EAAAjI,SAAAiI,EAAAuS,eAAAxhB,EAAAiP,EAAA8R,aAAA/gB,EAAAiP,EAAA5H,OACA4H,EAAA9H,SAAA8H,EAAAuS,eAAAvhB,EAAAgP,EAAA8R,aAAA9gB,EAAAgP,EAAA3H,OAEA2H,EAAAjI,SAAAiI,EAAAmS,OACAnS,EAAAjI,SAAAiI,EAAAmS,KAAA,GAAAnS,EAAAmS,KAAAnS,EAAAjI,SAAA,QAEAiI,EAAAjI,SAAAiI,EAAAoS,OACApS,EAAAjI,SAAAiI,EAAAoS,KAAA,GAAApS,EAAAjI,SAAAiI,EAAAoS,KAAA,QAGApS,EAAA9H,SAAA8H,EAAAqS,OACArS,EAAA9H,SAAA8H,EAAAqS,KAAA,GAAArS,EAAAqS,KAAArS,EAAA9H,SAAA,QAEA8H,EAAA9H,SAAA8H,EAAAsS,OACAtS,EAAA9H,SAAA8H,EAAAsS,KAAA,GAAAtS,EAAA9H,SAAA8H,EAAAsS,KAAA,QAIA7W,EAAA+W,gBAAA/W,EAAA+W,cAAAxS,EAAAuS,eAAAxhB,GACA0K,EAAAgX,gBAAAhX,EAAAgX,cAAAzS,EAAAuS,eAAAvhB,GACAyK,EAAAiX,WAAAjX,EAAAiX,SAAA97B,KAAA4K,OACAia,EAAA1K,GAAAiP,EAAAuS,eAAAxhB,EAAA0K,EAAA+W,gBAAA57B,KAAA4K,MAAAia,EAAAiX,UAAA,EACAjX,EAAAzK,GAAAgP,EAAAuS,eAAAvhB,EAAAyK,EAAAgX,gBAAA77B,KAAA4K,MAAAia,EAAAiX,UAAA,EACAnoB,KAAA4B,IAAA6T,EAAAuS,eAAAxhB,EAAA0K,EAAA+W,eAAA,IAAA/W,EAAA1K,EAAA,GACAxG,KAAA4B,IAAA6T,EAAAuS,eAAAvhB,EAAAyK,EAAAgX,eAAA,IAAAhX,EAAAzK,EAAA,GACAyK,EAAA+W,cAAAxS,EAAAuS,eAAAxhB,EACA0K,EAAAgX,cAAAzS,EAAAuS,eAAAvhB,EACAyK,EAAAiX,SAAA97B,KAAA4K,MAEAyvB,EAAAM,aAAAz3B,yBAAkDkmB,EAAAjI,eAAqBiI,EAAA9H,mBAEvEjhB,aACA,MAAA2Q,EAAAzU,KACA69B,EAAAppB,EAAAopB,MACAC,QAAWA,EAAAjR,QAAAvE,YAA2BuV,EACtC,IAAAC,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,OAAA,OACA,IAAA2oB,EAAAxI,YAAAwI,EAAAvI,QAGA,OAFAuI,EAAAxI,WAAA,OACAwI,EAAAvI,SAAA,GAGAuI,EAAAxI,WAAA,EACAwI,EAAAvI,SAAA,EACA,IAAAkb,EAAA,IACAC,EAAA,IACA,MAAAC,EAAApX,EAAA1K,EAAA4hB,EACAG,EAAA9S,EAAAjI,SAAA8a,EACAE,EAAAtX,EAAAzK,EAAA4hB,EACAI,EAAAhT,EAAA9H,SAAA6a,EAGA,IAAAtX,EAAA1K,IAAA4hB,EAAApoB,KAAA4B,KAAA2mB,EAAA9S,EAAAjI,UAAA0D,EAAA1K,IACA,IAAA0K,EAAAzK,IAAA4hB,EAAAroB,KAAA4B,KAAA6mB,EAAAhT,EAAA9H,UAAAuD,EAAAzK,IACA,MAAA4K,EAAArR,KAAAK,IAAA+nB,EAAAC,GAEA5S,EAAAjI,SAAA+a,EACA9S,EAAA9H,SAAA8a,EAGA,MAAAf,EAAAjS,EAAAnY,MAAAmpB,EAAAhE,MACAkF,EAAAlS,EAAAlY,OAAAkpB,EAAAhE,MACAhN,EAAAmS,KAAA5nB,KAAA4S,IAAA8T,EAAAc,WAAA,EAAAE,EAAA,KACAjS,EAAAoS,MAAApS,EAAAmS,KACAnS,EAAAqS,KAAA9nB,KAAA4S,IAAA8T,EAAAe,YAAA,EAAAE,EAAA,KACAlS,EAAAsS,MAAAtS,EAAAqS,KACArS,EAAAjI,SAAAxN,KAAAK,IAAAL,KAAA4S,IAAA6C,EAAAjI,SAAAiI,EAAAoS,MAAApS,EAAAmS,MACAnS,EAAA9H,SAAA3N,KAAAK,IAAAL,KAAA4S,IAAA6C,EAAA9H,SAAA8H,EAAAsS,MAAAtS,EAAAqS,MAEApB,EAAAM,aAAAt3B,WAAA2hB,GAAA9hB,yBAA+EkmB,EAAAjI,eAAqBiI,EAAA9H,kBAEpGjhB,kBACA,MAAA2Q,EAAAzU,KACA69B,EAAAppB,EAAAopB,MACAC,QAAWA,GAAUD,EACrBC,EAAA9K,UAAAve,EAAAoI,gBAAApI,EAAA8F,cACAujB,EAAAK,SAAAx3B,UAAA,+BACAm3B,EAAAM,aAAAz3B,UAAA,sBAEAk3B,EAAAhE,MAAA,EACAgE,EAAAZ,aAAA,EAEAa,EAAA9K,cAAA7qB,EACA21B,EAAAK,cAAAh2B,EACA21B,EAAAM,kBAAAj2B,IAIArE,OAAA2D,GACA,MAAAgN,EAAAzU,KACA69B,EAAAppB,EAAAopB,KAEAA,EAAAhE,OAAA,IAAAgE,EAAAhE,MAEAgE,EAAAiC,MAGAjC,EAAAkC,GAAAt4B,IAGA3D,GAAA2D,GACA,MAAAgN,EAAAzU,KAEA69B,EAAAppB,EAAAopB,KACApuB,EAAAgF,EAAAhF,OAAAouB,MACAC,QAAWA,EAAAjR,SAAiBgR,EAO5B,GALAC,EAAA9K,WACA8K,EAAA9K,SAAAve,EAAA0I,aAA+ChZ,EAACsQ,EAAA0I,cAAA1I,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aAChDujB,EAAAK,SAAAL,EAAA9K,SAAA/lB,KAAA,oBACA6wB,EAAAM,aAAAN,EAAAK,SAAApxB,WAAyD0C,EAAA4uB,oBAEzDP,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,OAAA,OAIA,IAAA87B,EACAC,EACAC,EACAC,EACA5Z,EACAC,EACA4Z,EACAC,EACAC,EACAC,EACAzB,EACAC,EACAyB,EACAC,EACAC,EACAC,EACA/B,EACAC,EAnBAf,EAAA9K,SAAA7tB,YAAiCsK,EAAAmxB,oBAqBjC,qBAAA/T,EAAA8R,aAAA/gB,GAAAnW,GACAu4B,EAAA,aAAAv4B,EAAAyc,KAAAzc,EAAAi3B,eAAA,GAAA5Z,MAAArd,EAAAqd,MACAmb,EAAA,aAAAx4B,EAAAyc,KAAAzc,EAAAi3B,eAAA,GAAA1Z,MAAAvd,EAAAud,QAEAgb,EAAAnT,EAAA8R,aAAA/gB,EACAqiB,EAAApT,EAAA8R,aAAA9gB,GAGAggB,EAAAhE,MAAAiE,EAAAM,aAAAr4B,KAAA,qBAAA0J,EAAA6uB,SACAT,EAAAZ,aAAAa,EAAAM,aAAAr4B,KAAA,qBAAA0J,EAAA6uB,SACA72B,GACAm3B,EAAAd,EAAA9K,SAAA,GAAAjpB,YACA80B,EAAAf,EAAA9K,SAAA,GAAA9oB,aACAg2B,EAAApC,EAAA9K,SAAAplB,SAAA/C,KACAs1B,EAAArC,EAAA9K,SAAAplB,SAAAhD,IACA2b,EAAA2Z,EAAAtB,EAAA,EAAAoB,EACAxZ,EAAA2Z,EAAAtB,EAAA,EAAAoB,EAEAK,EAAAxC,EAAAK,SAAA,GAAAp0B,YACAw2B,EAAAzC,EAAAK,SAAA,GAAAj0B,aACA40B,EAAAwB,EAAAzC,EAAAhE,MACAkF,EAAAwB,EAAA1C,EAAAhE,MAEA2G,EAAAppB,KAAA4S,IAAA4U,EAAA,EAAAE,EAAA,KACA2B,EAAArpB,KAAA4S,IAAA6U,EAAA,EAAAE,EAAA,KACA2B,GAAAF,EACAG,GAAAF,EAEAL,EAAA7Z,EAAAsX,EAAAhE,MACAwG,EAAA7Z,EAAAqX,EAAAhE,MAEAuG,EAAAI,IACAJ,EAAAI,GAEAJ,EAAAM,IACAN,EAAAM,GAGAL,EAAAI,IACAJ,EAAAI,GAEAJ,EAAAM,IACAN,EAAAM,KAGAP,EAAA,EACAC,EAAA,GAEAvC,EAAAM,aAAAt3B,WAAA,KAAAH,yBAAkEy5B,QAAiBC,UACnFvC,EAAAK,SAAAr3B,WAAA,KAAAH,sCAA2Ek3B,EAAAhE,WAE3E/1B,MACA,MAAA2Q,EAAAzU,KAEA69B,EAAAppB,EAAAopB,KACApuB,EAAAgF,EAAAhF,OAAAouB,MACAC,QAAWA,GAAUD,EAErBC,EAAA9K,WACA8K,EAAA9K,SAAAve,EAAA0I,aAA+ChZ,EAACsQ,EAAA0I,cAAA1I,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aAChDujB,EAAAK,SAAAL,EAAA9K,SAAA/lB,KAAA,oBACA6wB,EAAAM,aAAAN,EAAAK,SAAApxB,WAAyD0C,EAAA4uB,mBAEzDP,EAAAK,UAAA,IAAAL,EAAAK,SAAAj6B,SAEA25B,EAAAhE,MAAA,EACAgE,EAAAZ,aAAA,EACAa,EAAAM,aAAAt3B,WAAA,KAAAH,UAAA,sBACAm3B,EAAAK,SAAAr3B,WAAA,KAAAH,UAAA,+BACAm3B,EAAA9K,SAAAvtB,eAAoCgK,EAAAmxB,oBACpC9C,EAAA9K,cAAA7qB,IAGArE,SACA,MAAA2Q,EAAAzU,KACA69B,EAAAppB,EAAAopB,KACA,GAAAA,EAAAloB,QAAA,OACAkoB,EAAAloB,SAAA,EAEA,MAAAhE,IAAA,eAAA8C,EAAA6V,YAAAI,QAAyE9Z,GAAOe,kBAAA8C,EAAAhF,OAAAkb,mBAAA,CAAsDC,SAAA,EAAArjB,SAAA,GAG9HqJ,GAAOmB,UACf0C,EAAAW,WAAAlO,GAAA,+BAAA22B,EAAAgD,eAAAlvB,GACA8C,EAAAW,WAAAlO,GAAA,gCAAA22B,EAAAiD,gBAAAnvB,GACA8C,EAAAW,WAAAlO,GAAA,6BAAA22B,EAAAkD,aAAApvB,IACK,eAAA8C,EAAA6V,YAAAI,QACLjW,EAAAW,WAAAlO,GAAAuN,EAAA6V,YAAAI,MAAA,gBAAAmT,EAAAgD,eAAAlvB,GACA8C,EAAAW,WAAAlO,GAAAuN,EAAA6V,YAAAO,KAAA,gBAAAgT,EAAAiD,gBAAAnvB,GACA8C,EAAAW,WAAAlO,GAAAuN,EAAA6V,YAAAQ,IAAA,gBAAA+S,EAAAkD,aAAApvB,IAIA8C,EAAAW,WAAAlO,GAAAuN,EAAA6V,YAAAO,SAAsDpW,EAAAhF,OAAAouB,KAAAQ,iBAAkCR,EAAAzX,cAExFtiB,UACA,MAAA2Q,EAAAzU,KACA69B,EAAAppB,EAAAopB,KACA,IAAAA,EAAAloB,QAAA,OAEAlB,EAAAopB,KAAAloB,SAAA,EAEA,MAAAhE,IAAA,eAAA8C,EAAA6V,YAAAI,QAAyE9Z,GAAOe,kBAAA8C,EAAAhF,OAAAkb,mBAAA,CAAsDC,SAAA,EAAArjB,SAAA,GAG9HqJ,GAAOmB,UACf0C,EAAAW,WAAA3M,IAAA,+BAAAo1B,EAAAgD,eAAAlvB,GACA8C,EAAAW,WAAA3M,IAAA,gCAAAo1B,EAAAiD,gBAAAnvB,GACA8C,EAAAW,WAAA3M,IAAA,6BAAAo1B,EAAAkD,aAAApvB,IACK,eAAA8C,EAAA6V,YAAAI,QACLjW,EAAAW,WAAA3M,IAAAgM,EAAA6V,YAAAI,MAAA,gBAAAmT,EAAAgD,eAAAlvB,GACA8C,EAAAW,WAAA3M,IAAAgM,EAAA6V,YAAAO,KAAA,gBAAAgT,EAAAiD,gBAAAnvB,GACA8C,EAAAW,WAAA3M,IAAAgM,EAAA6V,YAAAQ,IAAA,gBAAA+S,EAAAkD,aAAApvB,IAIA8C,EAAAW,WAAA3M,IAAAgM,EAAA6V,YAAAO,SAAuDpW,EAAAhF,OAAAouB,KAAAQ,iBAAkCR,EAAAzX,eAIzF,IAAA4a,GAAA,CACA9sB,KAAA,OACAzE,OAAA,CACAouB,KAAA,CACAloB,SAAA,EACA2oB,SAAA,EACAG,SAAA,EACA34B,QAAA,EACAu4B,eAAA,wBACAuC,iBAAA,wBAGA98B,SACA,MAAA2Q,EAAAzU,KACA69B,EAAA,CACAloB,SAAA,EACAkkB,MAAA,EACAoD,aAAA,EACAsB,WAAA,EACAT,QAAA,CACA9K,cAAA7qB,EACAy2B,gBAAAz2B,EACA02B,iBAAA12B,EACAg2B,cAAAh2B,EACAi2B,kBAAAj2B,EACAm2B,SAAA,GAEAzR,MAAA,CACAxI,eAAAlc,EACAmc,aAAAnc,EACAyc,cAAAzc,EACA4c,cAAA5c,EACA62B,UAAA72B,EACA+2B,UAAA/2B,EACA82B,UAAA92B,EACAg3B,UAAAh3B,EACAuM,WAAAvM,EACAwM,YAAAxM,EACA8c,YAAA9c,EACA+c,YAAA/c,EACAw2B,aAAA,GACAS,eAAA,IAEA9W,SAAA,CACA1K,OAAAzV,EACA0V,OAAA1V,EACAk3B,mBAAAl3B,EACAm3B,mBAAAn3B,EACAo3B,cAAAp3B,IAIA,+HAAApD,MAAA,KAAAgJ,QAAAC,IACA6vB,EAAA7vB,GAAAwvB,GAAAxvB,GAAA6F,KAAAY,KAEAxG,GAAA0C,OAAA8D,EAAA,CACAopB,SAGA,IAAAhE,EAAA,EACAhsB,OAAAiE,eAAA2C,EAAAopB,KAAA,SACA/5B,MACA,OAAA+1B,GAEA/1B,IAAAkC,GACA,GAAA6zB,IAAA7zB,EAAA,CACA,MAAAymB,EAAAhY,EAAAopB,KAAAC,QAAAK,SAAA1pB,EAAAopB,KAAAC,QAAAK,SAAA,QAAAh2B,EACAqnB,EAAA/a,EAAAopB,KAAAC,QAAA9K,SAAAve,EAAAopB,KAAAC,QAAA9K,SAAA,QAAA7qB,EACAsM,EAAAmF,KAAA,aAAA5T,EAAAymB,EAAA+C,GAEAqK,EAAA7zB,MAIAkB,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAouB,KAAAloB,SACAlB,EAAAopB,KAAApJ,UAGA3wB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAopB,KAAAnJ,WAEA5wB,WAAA2D,GACA,MAAAgN,EAAAzU,KACAyU,EAAAopB,KAAAloB,SACAlB,EAAAopB,KAAAha,aAAApc,IAEA3D,SAAA2D,GACA,MAAAgN,EAAAzU,KACAyU,EAAAopB,KAAAloB,SACAlB,EAAAopB,KAAAlW,WAAAlgB,IAEA3D,UAAA2D,GACA,MAAAgN,EAAAzU,KACAyU,EAAAhF,OAAAouB,KAAAloB,SAAAlB,EAAAopB,KAAAloB,SAAAlB,EAAAhF,OAAAouB,KAAA/3B,QACA2O,EAAAopB,KAAA/3B,OAAA2B,IAGA3D,gBACA,MAAA2Q,EAAAzU,KACAyU,EAAAopB,KAAAloB,SAAAlB,EAAAhF,OAAAouB,KAAAloB,SACAlB,EAAAopB,KAAAoD,qBAMA,MAAAC,GAAA,CACAp9B,YAAAvC,EAAA4/B,GAAA,GACA,MAAA1sB,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAgjB,KACA,wBAAAlxB,EAAA,OACA,OAAAkT,EAAAoB,OAAA3R,OAAA,OACA,MAAAuR,EAAAhB,EAAAiB,SAAAjB,EAAAhF,OAAAiG,QAAAC,QAEAqd,EAAAvd,EACAhB,EAAAW,WAAA1S,aAAuC+R,EAAAhF,OAAAqG,uCAAqDvU,OAC5FkT,EAAAoB,OAAAjK,GAAArK,GAEA,IAAA6/B,EAAApO,EAAA/lB,SAAoCwC,EAAA4xB,qBAA4B5xB,EAAA6xB,qBAA4B7xB,EAAA8xB,kBAC5FvO,EAAArtB,SAAA8J,EAAA4xB,eAAArO,EAAArtB,SAAA8J,EAAA6xB,cAAAtO,EAAArtB,SAAA8J,EAAA8xB,gBACAH,IAAA57B,IAAAwtB,EAAA,KAEA,IAAAoO,EAAAl9B,QAEAk9B,EAAAn2B,KAAA,CAAAu2B,EAAA/U,KACA,MAAA0R,EAAuBh6B,EAACsoB,GACxB0R,EAAAh5B,SAAAsK,EAAA8xB,cAEA,MAAAE,EAAAtD,EAAAp4B,KAAA,mBACAtE,EAAA08B,EAAAp4B,KAAA,YACA2mB,EAAAyR,EAAAp4B,KAAA,eACA4mB,EAAAwR,EAAAp4B,KAAA,cAEA0O,EAAA+X,UAAA2R,EAAA,GAAA18B,GAAAggC,EAAA/U,EAAAC,GAAA,OACA,wBAAAlY,GAAA,OAAAA,aAAAhF,UAAAgF,EAAA0K,UAAA,CAqBA,GApBAsiB,GACAtD,EAAArzB,IAAA,2BAAmD22B,OACnDtD,EAAA/3B,WAAA,qBAEAsmB,IACAyR,EAAAp4B,KAAA,SAAA2mB,GACAyR,EAAA/3B,WAAA,gBAEAumB,IACAwR,EAAAp4B,KAAA,QAAA4mB,GACAwR,EAAA/3B,WAAA,eAEA3E,IACA08B,EAAAp4B,KAAA,MAAAtE,GACA08B,EAAA/3B,WAAA,cAIA+3B,EAAAh5B,SAAAsK,EAAA6xB,aAAA77B,YAAAgK,EAAA8xB,cACAvO,EAAA/lB,SAA0BwC,EAAAiyB,kBAAsBh8B,SAChD+O,EAAAhF,OAAA8M,MAAA4kB,EAAA,CACA,MAAAQ,EAAA3O,EAAAjtB,KAAA,2BACA,GAAAitB,EAAArtB,SAAA8O,EAAAhF,OAAA+M,qBAAA,CACA,MAAAolB,EAAAntB,EAAAW,WAAA1S,sCAA0Fi/B,YAA6BltB,EAAAhF,OAAA+M,wBACvH/H,EAAAge,KAAAoP,YAAAD,EAAArgC,SAAA,OACW,CACX,MAAAugC,EAAArtB,EAAAW,WAAA1S,aAAmE+R,EAAAhF,OAAA+M,gDAA8DmlB,OACjIltB,EAAAge,KAAAoP,YAAAC,EAAAvgC,SAAA,IAGAkT,EAAAmF,KAAA,iBAAAoZ,EAAA,GAAAmL,EAAA,OAGA1pB,EAAAmF,KAAA,gBAAAoZ,EAAA,GAAAmL,EAAA,OAGAr6B,OACA,MAAA2Q,EAAAzU,MACAoV,WACAA,EAAA3F,OAAA+e,EAAA3Y,SAAA0E,eACK9F,EACLgB,EAAAhB,EAAAiB,SAAA8Y,EAAA9Y,QAAAC,QACAlG,EAAA+e,EAAAiE,KAEA,IAAAlb,EAAAiX,EAAAjX,cAKA,SAAAwqB,EAAAxgC,GACA,GAAAkU,GACA,GAAAL,EAAA1S,aAAoC8rB,EAAA1Y,uCAAoDvU,OAAM2C,OAC9F,cAEO,GAAA2R,EAAAtU,GAAA,SACP,SAEA,SAAAqd,EAAA4Q,GACA,OAAA/Z,EACetR,EAACqrB,GAAAzpB,KAAA,2BAEH5B,EAACqrB,GAAAjuB,QAId,GApBA,SAAAgW,IACAA,EAAA,GAkBA9C,EAAAge,KAAAuP,qBAAAvtB,EAAAge,KAAAuP,oBAAA,GACAvtB,EAAAhF,OAAAuK,sBACA5E,EAAA1S,aAA8B8rB,EAAA1T,qBAA+B7P,KAAA,CAAAg3B,EAAAzS,KAC7D,MAAAjuB,EAAAkU,EAAkCtR,EAACqrB,GAAAzpB,KAAA,2BAA4C5B,EAACqrB,GAAAjuB,QAChFkT,EAAAge,KAAAoP,YAAAtgC,UAEK,GAAAgW,EAAA,EACL,QAAAtT,EAAAsW,EAA+BtW,EAAAsW,EAAAhD,EAAiCtT,GAAA,EAChE89B,EAAA99B,IAAAwQ,EAAAge,KAAAoP,YAAA59B,QAGAwQ,EAAAge,KAAAoP,YAAAtnB,GAEA,GAAA9K,EAAAyyB,aACA,GAAA3qB,EAAA,GAAA9H,EAAA0yB,oBAAA1yB,EAAA0yB,mBAAA,GACA,MAAAC,EAAA3yB,EAAA0yB,mBACAlT,EAAA1X,EACA8qB,EAAAjrB,KAAA4S,IAAAzP,EAAA0U,EAAA7X,KAAAK,IAAA2qB,EAAAnT,GAAApZ,EAAA3R,QACAo+B,EAAAlrB,KAAAK,IAAA8C,EAAAnD,KAAAK,IAAAwX,EAAAmT,GAAA,GAEA,QAAAn+B,EAAAsW,EAAAhD,EAAiDtT,EAAAo+B,EAAcp+B,GAAA,EAC/D89B,EAAA99B,IAAAwQ,EAAAge,KAAAoP,YAAA59B,GAGA,QAAAA,EAAAq+B,EAA8Br+B,EAAAsW,EAAiBtW,GAAA,EAC/C89B,EAAA99B,IAAAwQ,EAAAge,KAAAoP,YAAA59B,OAEO,CACP,MAAAwY,EAAArH,EAAA1S,aAAkD8rB,EAAAtS,kBAClDO,EAAAvY,OAAA,GAAAuQ,EAAAge,KAAAoP,YAAAjjB,EAAAnC,IAEA,MAAAC,EAAAtH,EAAA1S,aAAkD8rB,EAAArS,kBAClDO,EAAAxY,OAAA,GAAAuQ,EAAAge,KAAAoP,YAAAjjB,EAAAlC,OAMA,IAAA6lB,GAAA,CACAruB,KAAA,OACAzE,OAAA,CACAgjB,KAAA,CACA9c,SAAA,EACAusB,cAAA,EACAC,mBAAA,EACAK,uBAAA,EAEAnB,aAAA,cACAE,aAAA,sBACAD,YAAA,qBACAI,eAAA,0BAGA59B,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAge,KAAA,CACAuP,oBAAA,EACAtP,KAAAwO,GAAAxO,KAAA7e,KAAAY,GACAotB,YAAAX,GAAAW,YAAAhuB,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAgjB,KAAA9c,SAAAlB,EAAAhF,OAAAyd,gBACAzY,EAAAhF,OAAAyd,eAAA,IAGAppB,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAgjB,KAAA9c,UAAAlB,EAAAhF,OAAA8M,MAAA,IAAA9H,EAAAhF,OAAAqP,cACArK,EAAAge,KAAAC,QAGA5uB,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAA8X,WAAA9S,EAAAhF,OAAA0Z,gBACA1U,EAAAge,KAAAC,QAGA5uB,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAgjB,KAAA9c,SACAlB,EAAAge,KAAAC,QAGA5uB,oBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAgjB,KAAA9c,SACAlB,EAAAge,KAAAC,QAGA5uB,kBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAgjB,KAAA9c,UACAlB,EAAAhF,OAAAgjB,KAAA+P,wBAAA/tB,EAAAhF,OAAAgjB,KAAA+P,wBAAA/tB,EAAAge,KAAAuP,qBACAvtB,EAAAge,KAAAC,QAIA5uB,gBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAgjB,KAAA9c,UAAAlB,EAAAhF,OAAAgjB,KAAA+P,uBACA/tB,EAAAge,KAAAC,UAQA,MAAA+P,GAAA,CACAC,aAAA,SAAA9kB,EAAAC,GACA,MAAA8kB,EAAA,WACA,IAAAN,EACAC,EACAM,EACA,OAAAC,EAAAjjB,KACA0iB,GAAA,EACAD,EAAAQ,EAAA3+B,OACA,MAAAm+B,EAAAC,EAAA,EACAM,EAAAP,EAAAC,GAAA,EACAO,EAAAD,IAAAhjB,EACA0iB,EAAAM,EAEAP,EAAAO,EAGA,OAAAP,GAfA,GAwBA,IAAAS,EACAC,EAaA,OApBA/iC,KAAA4d,IACA5d,KAAA6d,IACA7d,KAAAy4B,UAAA7a,EAAA1Z,OAAA,EAOAlE,KAAAgjC,YAAA,SAAArF,GACA,OAAAA,GAGAoF,EAAAJ,EAAA3iC,KAAA4d,EAAA+f,GACAmF,EAAAC,EAAA,GAIApF,EAAA39B,KAAA4d,EAAAklB,KAAA9iC,KAAA6d,EAAAklB,GAAA/iC,KAAA6d,EAAAilB,KAAA9iC,KAAA4d,EAAAmlB,GAAA/iC,KAAA4d,EAAAklB,IAAA9iC,KAAA6d,EAAAilB,IARA,GAUA9iC,MAGA8D,uBAAAm/B,GACA,MAAAxuB,EAAAzU,KACAyU,EAAAyuB,WAAAC,SACA1uB,EAAAyuB,WAAAC,OAAA1uB,EAAAhF,OAAA8M,KACA,IAAAkmB,GAAAC,aAAAjuB,EAAAwB,WAAAgtB,EAAAhtB,YACA,IAAAwsB,GAAAC,aAAAjuB,EAAAuB,SAAAitB,EAAAjtB,YAGAlS,aAAA4Z,EAAAC,GACA,MAAAlJ,EAAAzU,KACAojC,EAAA3uB,EAAAyuB,WAAAG,QACA,IAAAC,EACAC,EACA,SAAAC,EAAAP,GAKA,MAAAroB,EAAAnG,EAAAa,cAAAb,EAAAmG,UAAAnG,EAAAmG,UACA,UAAAnG,EAAAhF,OAAAyzB,WAAAO,KACAhvB,EAAAyuB,WAAAQ,uBAAAT,GAGAM,GAAA9uB,EAAAyuB,WAAAC,OAAAH,aAAApoB,IAGA2oB,GAAA,cAAA9uB,EAAAhF,OAAAyzB,WAAAO,KACAH,GAAAL,EAAAxnB,eAAAwnB,EAAA/nB,iBAAAzG,EAAAgH,eAAAhH,EAAAyG,gBACAqoB,GAAA3oB,EAAAnG,EAAAyG,gBAAAooB,EAAAL,EAAA/nB,gBAGAzG,EAAAhF,OAAAyzB,WAAAS,UACAJ,EAAAN,EAAAxnB,eAAA8nB,GAEAN,EAAA1nB,eAAAgoB,GACAN,EAAAvlB,aAAA6lB,EAAA9uB,GACAwuB,EAAAtmB,oBACAsmB,EAAAnnB,sBAEA,GAAA9I,MAAAC,QAAAmwB,GACA,QAAAn/B,EAAA,EAAqBA,EAAAm/B,EAAAl/B,OAAuBD,GAAA,EAC5Cm/B,EAAAn/B,KAAA0Z,GAAAylB,EAAAn/B,aAAuEkqB,IACvEqV,EAAAJ,EAAAn/B,SAGKm/B,aAAgCjV,IAAMxQ,IAAAylB,GAC3CI,EAAAJ,IAGAt/B,cAAAiD,EAAA4W,GACA,MAAAlJ,EAAAzU,KACAojC,EAAA3uB,EAAAyuB,WAAAG,QACA,IAAAp/B,EACA,SAAA2/B,EAAAX,GACAA,EAAA3oB,cAAAvT,EAAA0N,GACA,IAAA1N,IACAk8B,EAAA/kB,kBACA+kB,EAAAxzB,OAAA4O,YACApQ,GAAAsS,SAAA,KACA0iB,EAAA/oB,qBAGA+oB,EAAA7tB,WAAA7L,cAAA,KACA65B,IACAH,EAAAxzB,OAAA8M,MAAA,UAAA9H,EAAAhF,OAAAyzB,WAAAO,IACAR,EAAAzjB,UAEAyjB,EAAA15B,oBAIA,GAAAyJ,MAAAC,QAAAmwB,GACA,IAAAn/B,EAAA,EAAiBA,EAAAm/B,EAAAl/B,OAAuBD,GAAA,EACxCm/B,EAAAn/B,KAAA0Z,GAAAylB,EAAAn/B,aAAuEkqB,IACvEyV,EAAAR,EAAAn/B,SAGKm/B,aAAgCjV,IAAMxQ,IAAAylB,GAC3CQ,EAAAR,KAIA,IAAAS,GAAA,CACA3vB,KAAA,aACAzE,OAAA,CACAyzB,WAAA,CACAG,aAAAl7B,EACAw7B,SAAA,EACAF,GAAA,UAGA3/B,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAyuB,WAAA,CACAG,QAAA5uB,EAAAhF,OAAAyzB,WAAAG,QACAK,uBAAAjB,GAAAiB,uBAAA7vB,KAAAY,GACAiJ,aAAA+kB,GAAA/kB,aAAA7J,KAAAY,GACA6F,cAAAmoB,GAAAnoB,cAAAzG,KAAAY,OAIAvN,GAAA,CACApD,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAyuB,WAAAG,SACA5uB,EAAAyuB,WAAAC,SACA1uB,EAAAyuB,WAAAC,YAAAh7B,SACAsM,EAAAyuB,WAAAC,SAGAr/B,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAyuB,WAAAG,SACA5uB,EAAAyuB,WAAAC,SACA1uB,EAAAyuB,WAAAC,YAAAh7B,SACAsM,EAAAyuB,WAAAC,SAGAr/B,iBACA,MAAA2Q,EAAAzU,KACAyU,EAAAyuB,WAAAG,SACA5uB,EAAAyuB,WAAAC,SACA1uB,EAAAyuB,WAAAC,YAAAh7B,SACAsM,EAAAyuB,WAAAC,SAGAr/B,aAAA8W,EAAA+C,GACA,MAAAlJ,EAAAzU,KACAyU,EAAAyuB,WAAAG,SACA5uB,EAAAyuB,WAAAxlB,aAAA9C,EAAA+C,IAEA7Z,cAAAiD,EAAA4W,GACA,MAAAlJ,EAAAzU,KACAyU,EAAAyuB,WAAAG,SACA5uB,EAAAyuB,WAAA5oB,cAAAvT,EAAA4W,MAKA,MAAAmmB,GAAA,CACAhgC,gBAAA8Q,GAEA,OADAA,EAAA7O,KAAA,gBACA6O,GAEA9Q,UAAA8Q,EAAAmvB,GAEA,OADAnvB,EAAA7O,KAAA,OAAAg+B,GACAnvB,GAEA9Q,WAAA8Q,EAAAovB,GAEA,OADApvB,EAAA7O,KAAA,aAAAi+B,GACApvB,GAEA9Q,UAAA8Q,GAEA,OADAA,EAAA7O,KAAA,oBACA6O,GAEA9Q,SAAA8Q,GAEA,OADAA,EAAA7O,KAAA,oBACA6O,GAEA9Q,WAAA2D,GACA,MAAAgN,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAq0B,KACA,QAAAr8B,EAAA+rB,QAAA,OACA,MAAAyQ,EAAsB9/B,EAACsD,EAAAC,QACvB+M,EAAAgZ,YAAAhZ,EAAAgZ,WAAA6J,SAAA2M,EAAAn8B,GAAA2M,EAAAgZ,WAAA6J,WACA7iB,EAAAkH,QAAAlH,EAAAhF,OAAA8M,MACA9H,EAAA8K,YAEA9K,EAAAkH,MACAlH,EAAAqvB,KAAAI,OAAAz0B,EAAA00B,kBAEA1vB,EAAAqvB,KAAAI,OAAAz0B,EAAA20B,mBAGA3vB,EAAAgZ,YAAAhZ,EAAAgZ,WAAA8J,SAAA0M,EAAAn8B,GAAA2M,EAAAgZ,WAAA8J,WACA9iB,EAAAiH,cAAAjH,EAAAhF,OAAA8M,MACA9H,EAAAiL,YAEAjL,EAAAiH,YACAjH,EAAAqvB,KAAAI,OAAAz0B,EAAA40B,mBAEA5vB,EAAAqvB,KAAAI,OAAAz0B,EAAA60B,mBAGA7vB,EAAA0jB,YAAA8L,EAAAn8B,OAA8C2M,EAAAhF,OAAA0oB,WAAAkC,gBAC9C4J,EAAA,GAAAM,SAGAzgC,OAAA0gC,GACA,MAAA/vB,EAAAzU,KACAykC,EAAAhwB,EAAAqvB,KAAAY,WACA,IAAAD,EAAAvgC,SACAugC,EAAAjgC,KAAA,IACAigC,EAAAjgC,KAAAggC,KAEA1gC,mBACA,MAAA2Q,EAAAzU,KAEA,GAAAyU,EAAAhF,OAAA8M,KAAA,OACA,MAAA+a,QAAWA,EAAAC,WAAmB9iB,EAAAgZ,WAE9B8J,KAAArzB,OAAA,IACAuQ,EAAAiH,YACAjH,EAAAqvB,KAAAa,UAAApN,GAEA9iB,EAAAqvB,KAAAc,SAAArN,IAGAD,KAAApzB,OAAA,IACAuQ,EAAAkH,MACAlH,EAAAqvB,KAAAa,UAAArN,GAEA7iB,EAAAqvB,KAAAc,SAAAtN,KAIAxzB,mBACA,MAAA2Q,EAAAzU,KACAyP,EAAAgF,EAAAhF,OAAAq0B,KACArvB,EAAA0jB,YAAA1jB,EAAAhF,OAAA0oB,WAAAsC,WAAAhmB,EAAA0jB,WAAAI,SAAA9jB,EAAA0jB,WAAAI,QAAAr0B,QACAuQ,EAAA0jB,WAAAI,QAAAttB,KAAA,CAAAiuB,EAAA2L,KACA,MAAAC,EAA0B3gC,EAAC0gC,GAC3BpwB,EAAAqvB,KAAAiB,gBAAAD,GACArwB,EAAAqvB,KAAAkB,UAAAF,EAAA,UACArwB,EAAAqvB,KAAAmB,WAAAH,EAAAr1B,EAAAy1B,wBAAAp2B,QAAA,YAA2Fg2B,EAAAvjC,QAAA,OAI3FuC,OACA,MAAA2Q,EAAAzU,KAEAyU,EAAAG,IAAA9I,OAAA2I,EAAAqvB,KAAAY,YAGA,MAAAj1B,EAAAgF,EAAAhF,OAAAq0B,KACA,IAAAxM,EACAC,EACA9iB,EAAAgZ,YAAAhZ,EAAAgZ,WAAA6J,UACAA,EAAA7iB,EAAAgZ,WAAA6J,SAEA7iB,EAAAgZ,YAAAhZ,EAAAgZ,WAAA8J,UACAA,EAAA9iB,EAAAgZ,WAAA8J,SAEAD,IACA7iB,EAAAqvB,KAAAiB,gBAAAzN,GACA7iB,EAAAqvB,KAAAkB,UAAA1N,EAAA,UACA7iB,EAAAqvB,KAAAmB,WAAA3N,EAAA7nB,EAAA20B,kBACA9M,EAAApwB,GAAA,UAAAuN,EAAAqvB,KAAAqB,aAEA5N,IACA9iB,EAAAqvB,KAAAiB,gBAAAxN,GACA9iB,EAAAqvB,KAAAkB,UAAAzN,EAAA,UACA9iB,EAAAqvB,KAAAmB,WAAA1N,EAAA9nB,EAAA60B,kBACA/M,EAAArwB,GAAA,UAAAuN,EAAAqvB,KAAAqB,aAIA1wB,EAAA0jB,YAAA1jB,EAAAhF,OAAA0oB,WAAAsC,WAAAhmB,EAAA0jB,WAAAI,SAAA9jB,EAAA0jB,WAAAI,QAAAr0B,QACAuQ,EAAA0jB,WAAAvjB,IAAA1N,GAAA,cAA8CuN,EAAAhF,OAAA0oB,WAAAkC,cAAqC5lB,EAAAqvB,KAAAqB,aAGnFrhC,UACA,MAAA2Q,EAAAzU,KAGA,IAAAs3B,EACAC,EAHA9iB,EAAAqvB,KAAAY,YAAAjwB,EAAAqvB,KAAAY,WAAAxgC,OAAA,GAAAuQ,EAAAqvB,KAAAY,WAAAh/B,SAIA+O,EAAAgZ,YAAAhZ,EAAAgZ,WAAA6J,UACAA,EAAA7iB,EAAAgZ,WAAA6J,SAEA7iB,EAAAgZ,YAAAhZ,EAAAgZ,WAAA8J,UACAA,EAAA9iB,EAAAgZ,WAAA8J,SAEAD,GACAA,EAAA7uB,IAAA,UAAAgM,EAAAqvB,KAAAqB,YAEA5N,GACAA,EAAA9uB,IAAA,UAAAgM,EAAAqvB,KAAAqB,YAIA1wB,EAAA0jB,YAAA1jB,EAAAhF,OAAA0oB,WAAAsC,WAAAhmB,EAAA0jB,WAAAI,SAAA9jB,EAAA0jB,WAAAI,QAAAr0B,QACAuQ,EAAA0jB,WAAAvjB,IAAAnM,IAAA,cAA+CgM,EAAAhF,OAAA0oB,WAAAkC,cAAqC5lB,EAAAqvB,KAAAqB,cAIpF,IAAAC,GAAA,CACAlxB,KAAA,OACAzE,OAAA,CACAq0B,KAAA,CACAnuB,SAAA,EACA0vB,kBAAA,sBACAf,iBAAA,iBACAF,iBAAA,aACAC,kBAAA,0BACAF,iBAAA,yBACAe,wBAAA,0BAGAphC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAqvB,KAAA,CACAY,WAAoBvgC,kBAAkBsQ,EAAAhF,OAAAq0B,KAAAuB,0EAGtCx3B,OAAAC,KAAAg2B,IAAA/1B,QAAAC,IACAyG,EAAAqvB,KAAA91B,GAAA81B,GAAA91B,GAAA6F,KAAAY,MAGAvN,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAq0B,KAAAnuB,UACAlB,EAAAqvB,KAAAlW,OACAnZ,EAAAqvB,KAAAwB,qBAEAxhC,SACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAq0B,KAAAnuB,SACAlB,EAAAqvB,KAAAwB,oBAEAxhC,WACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAq0B,KAAAnuB,SACAlB,EAAAqvB,KAAAwB,oBAEAxhC,mBACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAq0B,KAAAnuB,SACAlB,EAAAqvB,KAAAyB,oBAEAzhC,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAq0B,KAAAnuB,SACAlB,EAAAqvB,KAAApS,aAKA,MAAA8T,GAAA,CACA1hC,OACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAArM,QAAA,OACA,IAASJ,EAAMI,UAAaJ,EAAMI,QAAAqiC,UAGlC,OAFAhxB,EAAAhF,OAAArM,QAAAuS,SAAA,OACAlB,EAAAhF,OAAAi2B,eAAA/vB,SAAA,GAGA,MAAAvS,EAAAqR,EAAArR,QACAA,EAAA2b,aAAA,EACA3b,EAAAuiC,MAAAH,GAAAI,iBACAxiC,EAAAuiC,MAAAnkC,KAAA4B,EAAAuiC,MAAA3/B,SACA5C,EAAAyiC,cAAA,EAAAziC,EAAAuiC,MAAA3/B,MAAAyO,EAAAhF,OAAAse,oBACAtZ,EAAAhF,OAAArM,QAAA0iC,cACM9iC,EAAMjB,iBAAA,WAAA0S,EAAArR,QAAA2iC,sBAGZjiC,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAArM,QAAA0iC,cACM9iC,EAAMhB,oBAAA,WAAAyS,EAAArR,QAAA2iC,qBAGZjiC,qBACA,MAAA2Q,EAAAzU,KACAyU,EAAArR,QAAAuiC,MAAAH,GAAAI,gBACAnxB,EAAArR,QAAAyiC,cAAApxB,EAAAhF,OAAA0K,MAAA1F,EAAArR,QAAAuiC,MAAA3/B,OAAA,IAEAlC,gBACA,MAAAkiC,EAAsBhjC,EAAMF,SAAAmjC,SAAA/yB,MAAA,GAAAnO,MAAA,KAAAoE,OAAA+8B,GAAA,KAAAA,GAC5B7N,EAAA2N,EAAA9hC,OACA1C,EAAAwkC,EAAA3N,EAAA,GACAryB,EAAAggC,EAAA3N,EAAA,GACA,OAAY72B,MAAAwE,UAEZlC,WAAAtC,EAAAD,GACA,MAAAkT,EAAAzU,KACA,IAAAyU,EAAArR,QAAA2b,cAAAtK,EAAAhF,OAAArM,QAAAuS,QAAA,OACA,MAAAiC,EAAAnD,EAAAoB,OAAAjK,GAAArK,GACA,IAAAyE,EAAAw/B,GAAAW,QAAAvuB,EAAA7R,KAAA,iBACS/C,EAAMF,SAAAmjC,SAAAG,SAAA5kC,KACfwE,KAAiBxE,KAAOwE,KAExB,MAAAqgC,EAAyBrjC,EAAMI,QAAAkjC,MAC/BD,KAAArgC,YAGAyO,EAAAhF,OAAArM,QAAA0iC,aACM9iC,EAAMI,QAAA0iC,aAAA,CAAuB9/B,SAAQ,KAAAA,GAErChD,EAAMI,QAAAqiC,UAAA,CAAoBz/B,SAAQ,KAAAA,KAGxClC,QAAAsH,GACA,OAAAA,EAAAgE,WACAN,QAAA,YACAA,QAAA,eACAA,QAAA,YACAA,QAAA,UACAA,QAAA,WAEAhL,cAAAqW,EAAAnU,EAAAmY,GACA,MAAA1J,EAAAzU,KACA,GAAAgG,EACA,QAAA/B,EAAA,EAAAC,EAAAuQ,EAAAoB,OAAA3R,OAAoDD,EAAAC,EAAYD,GAAA,GAChE,MAAA2T,EAAAnD,EAAAoB,OAAAjK,GAAA3H,GACAsiC,EAAAf,GAAAW,QAAAvuB,EAAA7R,KAAA,iBACA,GAAAwgC,IAAAvgC,IAAA4R,EAAAjS,SAAA8O,EAAAhF,OAAA+M,qBAAA,CACA,MAAAjb,EAAAqW,EAAArW,QACAkT,EAAAiK,QAAAnd,EAAA4Y,EAAAgE,SAIA1J,EAAAiK,QAAA,EAAAvE,EAAAgE,KAKA,IAAAqoB,GAAA,CACAtyB,KAAA,UACAzE,OAAA,CACArM,QAAA,CACAuS,SAAA,EACAmwB,cAAA,EACAtkC,IAAA,WAGAsC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACArR,QAAA,CACAwqB,KAAA4X,GAAA5X,KAAA/Z,KAAAY,GACAgyB,WAAAjB,GAAAiB,WAAA5yB,KAAAY,GACAsxB,mBAAAP,GAAAO,mBAAAlyB,KAAAY,GACAoxB,cAAAL,GAAAK,cAAAhyB,KAAAY,GACAid,QAAA8T,GAAA9T,QAAA7d,KAAAY,OAIAvN,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAArM,QAAAuS,SACAlB,EAAArR,QAAAwqB,QAGA9pB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAArM,QAAAuS,SACAlB,EAAArR,QAAAsuB,WAGA5tB,gBACA,MAAA2Q,EAAAzU,KACAyU,EAAArR,QAAA2b,aACAtK,EAAArR,QAAAqjC,WAAAhyB,EAAAhF,OAAArM,QAAA5B,IAAAiT,EAAA8F,gBAMA,MAAAmsB,GAAA,CACA5iC,cACA,MAAA2Q,EAAAzU,KACA2mC,EAAoB/kC,EAAQkB,SAAAC,KAAA+L,QAAA,QAC5B83B,EAAAnyB,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aAAAxU,KAAA,aACA,GAAA4gC,IAAAC,EAAA,CACA,MAAAvnB,EAAA5K,EAAAW,WAAA1S,aAAsD+R,EAAAhF,OAAAqG,yBAAuC6wB,OAAQplC,QACrG,wBAAA8d,EAAA,OACA5K,EAAAiK,QAAAW,KAGAvb,UACA,MAAA2Q,EAAAzU,KACA,GAAAyU,EAAAixB,eAAA3mB,aAAAtK,EAAAhF,OAAAi2B,eAAA/vB,QACA,GAAAlB,EAAAhF,OAAAi2B,eAAAI,cAAqD9iC,EAAMI,SAAYJ,EAAMI,QAAA0iC,aACvE9iC,EAAMI,QAAA0iC,aAAA,cAAuCrxB,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aAAAxU,KAAA,gBAAuD,QACrG,CACL,MAAA6R,EAAAnD,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aACAxX,EAAA6U,EAAA7R,KAAA,cAAA6R,EAAA7R,KAAA,gBACMnE,EAAQkB,SAAAC,QAAA,KAGde,OACA,MAAA2Q,EAAAzU,KACA,IAAAyU,EAAAhF,OAAAi2B,eAAA/vB,SAAAlB,EAAAhF,OAAArM,SAAAqR,EAAAhF,OAAArM,QAAAuS,QAAA,OACAlB,EAAAixB,eAAA3mB,aAAA,EACA,MAAAhc,EAAiBnB,EAAQkB,SAAAC,KAAA+L,QAAA,QACzB,GAAA/L,EAAA,CACA,MAAAoX,EAAA,EACA,QAAAlW,EAAA,EAAAC,EAAAuQ,EAAAoB,OAAA3R,OAAoDD,EAAAC,EAAYD,GAAA,GAChE,MAAA2T,EAAAnD,EAAAoB,OAAAjK,GAAA3H,GACA4iC,EAAAjvB,EAAA7R,KAAA,cAAA6R,EAAA7R,KAAA,gBACA,GAAA8gC,IAAA9jC,IAAA6U,EAAAjS,SAAA8O,EAAAhF,OAAA+M,qBAAA,CACA,MAAAjb,EAAAqW,EAAArW,QACAkT,EAAAiK,QAAAnd,EAAA4Y,EAAA1F,EAAAhF,OAAAse,oBAAA,KAIAtZ,EAAAhF,OAAAi2B,eAAAoB,YACM3iC,EAAEnB,GAAMkE,GAAA,aAAAuN,EAAAixB,eAAAqB,cAGdjjC,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAi2B,eAAAoB,YACM3iC,EAAEnB,GAAMyF,IAAA,aAAAgM,EAAAixB,eAAAqB,eAId,IAAAC,GAAA,CACA9yB,KAAA,kBACAzE,OAAA,CACAi2B,eAAA,CACA/vB,SAAA,EACAmwB,cAAA,EACAgB,YAAA,IAGAhjC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAixB,eAAA,CACA3mB,aAAA,EACA6O,KAAA8Y,GAAA9Y,KAAA/Z,KAAAY,GACAid,QAAAgV,GAAAhV,QAAA7d,KAAAY,GACAwyB,QAAAP,GAAAO,QAAApzB,KAAAY,GACAsyB,YAAAL,GAAAK,YAAAlzB,KAAAY,OAIAvN,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAi2B,eAAA/vB,SACAlB,EAAAixB,eAAA9X,QAGA9pB,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAi2B,eAAA/vB,SACAlB,EAAAixB,eAAAhU,WAGA5tB,gBACA,MAAA2Q,EAAAzU,KACAyU,EAAAixB,eAAA3mB,aACAtK,EAAAixB,eAAAuB,aAQA,MAAAC,GAAA,CACApjC,MACA,MAAA2Q,EAAAzU,KACAmnC,EAAA1yB,EAAAoB,OAAAjK,GAAA6I,EAAA8F,aACA,IAAAnM,EAAAqG,EAAAhF,OAAAonB,SAAAzoB,MACA+4B,EAAAphC,KAAA,0BACAqI,EAAA+4B,EAAAphC,KAAA,yBAAA0O,EAAAhF,OAAAonB,SAAAzoB,OAEAqG,EAAAoiB,SAAAD,QAAA3oB,GAAAsS,SAAA,KACA9L,EAAAhF,OAAAonB,SAAAuQ,iBACA3yB,EAAAhF,OAAA8M,MACA9H,EAAA+K,UACA/K,EAAAiL,UAAAjL,EAAAhF,OAAA0K,OAAA,MACA1F,EAAAmF,KAAA,aACSnF,EAAAiH,YAGAjH,EAAAhF,OAAAonB,SAAAwQ,gBAIT5yB,EAAAoiB,SAAAE,QAHAtiB,EAAAiK,QAAAjK,EAAAoB,OAAA3R,OAAA,EAAAuQ,EAAAhF,OAAA0K,OAAA,MACA1F,EAAAmF,KAAA,cAJAnF,EAAAiL,UAAAjL,EAAAhF,OAAA0K,OAAA,MACA1F,EAAAmF,KAAA,aAOOnF,EAAAhF,OAAA8M,MACP9H,EAAA+K,UACA/K,EAAA8K,UAAA9K,EAAAhF,OAAA0K,OAAA,MACA1F,EAAAmF,KAAA,aACOnF,EAAAkH,MAGAlH,EAAAhF,OAAAonB,SAAAwQ,gBAIP5yB,EAAAoiB,SAAAE,QAHAtiB,EAAAiK,QAAA,EAAAjK,EAAAhF,OAAA0K,OAAA,MACA1F,EAAAmF,KAAA,cAJAnF,EAAA8K,UAAA9K,EAAAhF,OAAA0K,OAAA,MACA1F,EAAAmF,KAAA,cAOKxL,IAELtK,QACA,MAAA2Q,EAAAzU,KACA,2BAAAyU,EAAAoiB,SAAAD,WACAniB,EAAAoiB,SAAAyQ,UACA7yB,EAAAoiB,SAAAyQ,SAAA,EACA7yB,EAAAmF,KAAA,iBACAnF,EAAAoiB,SAAA0Q,OACA,KAEAzjC,OACA,MAAA2Q,EAAAzU,KACA,QAAAyU,EAAAoiB,SAAAyQ,UACA,qBAAA7yB,EAAAoiB,SAAAD,UAEAniB,EAAAoiB,SAAAD,UACAhzB,aAAA6Q,EAAAoiB,SAAAD,SACAniB,EAAAoiB,SAAAD,aAAAzuB,GAEAsM,EAAAoiB,SAAAyQ,SAAA,EACA7yB,EAAAmF,KAAA,iBACA,KAEA9V,MAAAqW,GACA,MAAA1F,EAAAzU,KACAyU,EAAAoiB,SAAAyQ,UACA7yB,EAAAoiB,SAAA2Q,SACA/yB,EAAAoiB,SAAAD,SAAAhzB,aAAA6Q,EAAAoiB,SAAAD,SACAniB,EAAAoiB,SAAA2Q,QAAA,EACA,IAAArtB,GAAA1F,EAAAhF,OAAAonB,SAAA4Q,mBAIAhzB,EAAAW,WAAA,GAAArT,iBAAA,gBAAA0S,EAAAoiB,SAAAoK,iBACAxsB,EAAAW,WAAA,GAAArT,iBAAA,sBAAA0S,EAAAoiB,SAAAoK,mBAJAxsB,EAAAoiB,SAAA2Q,QAAA,EACA/yB,EAAAoiB,SAAA0Q,WAQA,IAAAG,GAAA,CACAxzB,KAAA,WACAzE,OAAA,CACAonB,SAAA,CACAlhB,SAAA,EACAvH,MAAA,IACAq5B,mBAAA,EACAE,sBAAA,EACAN,iBAAA,EACAD,kBAAA,IAGAtjC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAoiB,SAAA,CACAyQ,SAAA,EACAE,QAAA,EACAD,IAAAL,GAAAK,IAAA1zB,KAAAY,GACAiW,MAAAwc,GAAAxc,MAAA7W,KAAAY,GACAsiB,KAAAmQ,GAAAnQ,KAAAljB,KAAAY,GACAmzB,MAAAV,GAAAU,MAAA/zB,KAAAY,GACA3Q,gBAAA2D,GACAgN,MAAA0K,WAAA1K,EAAAW,YACA3N,EAAAC,SAAA1H,OACAyU,EAAAW,WAAA,GAAApT,oBAAA,gBAAAyS,EAAAoiB,SAAAoK,iBACAxsB,EAAAW,WAAA,GAAApT,oBAAA,sBAAAyS,EAAAoiB,SAAAoK,iBACAxsB,EAAAoiB,SAAA2Q,QAAA,EACA/yB,EAAAoiB,SAAAyQ,QAGA7yB,EAAAoiB,SAAA0Q,MAFA9yB,EAAAoiB,SAAAE,aAQA7vB,GAAA,CACApD,OACA,MAAA2Q,EAAAzU,KACAyU,EAAAhF,OAAAonB,SAAAlhB,SACAlB,EAAAoiB,SAAAnM,SAGA5mB,sBAAAqW,EAAAwE,GACA,MAAAlK,EAAAzU,KACAyU,EAAAoiB,SAAAyQ,UACA3oB,IAAAlK,EAAAhF,OAAAonB,SAAA8Q,qBACAlzB,EAAAoiB,SAAA+Q,MAAAztB,GAEA1F,EAAAoiB,SAAAE,SAIAjzB,kBACA,MAAA2Q,EAAAzU,KACAyU,EAAAoiB,SAAAyQ,UACA7yB,EAAAhF,OAAAonB,SAAA8Q,qBACAlzB,EAAAoiB,SAAAE,OAEAtiB,EAAAoiB,SAAA+Q,UAIA9jC,UACA,MAAA2Q,EAAAzU,KACAyU,EAAAoiB,SAAAyQ,SACA7yB,EAAAoiB,SAAAE,UAMA,MAAA8Q,GAAA,CACA/jC,eACA,MAAA2Q,EAAAzU,MACA6V,OAAWA,GAASpB,EACpB,QAAAxQ,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,GACtC,MAAA+uB,EAAAve,EAAAoB,OAAAjK,GAAA3H,GACA2J,EAAAolB,EAAA,GAAAxY,kBACA,IAAAstB,GAAAl6B,EACA6G,EAAAhF,OAAA+N,mBAAAsqB,GAAArzB,EAAAmG,WACA,IAAAmtB,EAAA,EACAtzB,EAAAM,iBACAgzB,EAAAD,EACAA,EAAA,GAEA,MAAAE,EAAAvzB,EAAAhF,OAAAw4B,WAAAC,UACA9wB,KAAAK,IAAA,EAAAL,KAAA4B,IAAAga,EAAA,GAAA1X,UAAA,GACA,EAAAlE,KAAA4S,IAAA5S,KAAAK,IAAAub,EAAA,GAAA1X,UAAA,MACA0X,EACAloB,IAAA,CACA0wB,QAAAwM,IAEArhC,yBAAkCmhC,QAASC,eAG3CjkC,cAAAiD,GACA,MAAA0N,EAAAzU,MACA6V,OAAWA,EAAAT,cAAqBX,EAEhC,GADAoB,EAAA/O,WAAAC,GACA0N,EAAAhF,OAAA+N,kBAAA,IAAAzW,EAAA,CACA,IAAAohC,GAAA,EACAtyB,EAAAtM,cAAA,KACA,GAAA4+B,EAAA,OACA,IAAA1zB,KAAA0K,UAAA,OACAgpB,GAAA,EACA1zB,EAAA+J,WAAA,EACA,MAAA4pB,EAAA,wCACA,QAAAnkC,EAAA,EAAuBA,EAAAmkC,EAAAlkC,OAA0BD,GAAA,EACjDmR,EAAAtM,QAAAs/B,EAAAnkC,SAOA,IAAAokC,GAAA,CACAn0B,KAAA,cACAzE,OAAA,CACAw4B,WAAA,CACAC,WAAA,IAGApkC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAwzB,WAAA,CACAvqB,aAAAmqB,GAAAnqB,aAAA7J,KAAAY,GACA6F,cAAAutB,GAAAvtB,cAAAzG,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACA,YAAAyU,EAAAhF,OAAA0J,OAAA,OACA1E,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,8BAChC,MAAA+G,EAAA,CACA9b,cAAA,EACAJ,gBAAA,EACA8B,eAAA,EACAc,qBAAA,EACApD,aAAA,EACA6G,kBAAA,GAEAvP,GAAA0C,OAAA8D,EAAAhF,OAAA4jB,GACAplB,GAAA0C,OAAA8D,EAAA8W,eAAA8H,IAEAvvB,eACA,MAAA2Q,EAAAzU,KACA,SAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAwzB,WAAAvqB,gBAEA5Z,cAAAiD,GACA,MAAA0N,EAAAzU,KACA,SAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAwzB,WAAA3tB,cAAAvT,MAKA,MAAAuhC,GAAA,CACAxkC,eACA,MAAA2Q,EAAAzU,MACA4U,IACAA,EAAAQ,aAAAS,SAAAnB,MAAA6zB,EAAA5zB,OAAA6zB,EAAAlzB,aAAAC,EAAAL,KAAAG,GACKZ,EACLhF,EAAAgF,EAAAhF,OAAAg5B,WACA1zB,EAAAN,EAAAM,eACAU,EAAAhB,EAAAiB,SAAAjB,EAAAhF,OAAAiG,QAAAC,QACA,IACA+yB,EADAC,EAAA,EAEAl5B,EAAAm5B,SACA7zB,GACA2zB,EAAAtzB,EAAAnI,KAAA,uBACA,IAAAy7B,EAAAxkC,SACAwkC,EAA0BvkC,EAAC,0CAC3BiR,EAAAtJ,OAAA48B,IAEAA,EAAA59B,IAAA,CAA2B6J,UAAY4zB,UAEvCG,EAAA9zB,EAAA3H,KAAA,uBACA,IAAAy7B,EAAAxkC,SACAwkC,EAA0BvkC,EAAC,0CAC3ByQ,EAAA9I,OAAA48B,MAIA,QAAAzkC,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,GACtC,MAAA+uB,EAAAnd,EAAAjK,GAAA3H,GACA,IAAA2a,EAAA3a,EACAwR,IACAmJ,EAAA3J,SAAA+d,EAAAjtB,KAAA,gCAEA,IAAA8iC,EAAA,GAAAjqB,EACAkqB,EAAA1xB,KAAAC,MAAAwxB,EAAA,KACAtzB,IACAszB,KACAC,EAAA1xB,KAAAC,OAAAwxB,EAAA,MAEA,MAAAvtB,EAAAlE,KAAAK,IAAAL,KAAA4S,IAAAgJ,EAAA,GAAA1X,SAAA,OACA,IAAAwsB,EAAA,EACAC,EAAA,EACAgB,EAAA,EACAnqB,EAAA,OACAkpB,EAAA,GAAAgB,EAAAzzB,EACA0zB,EAAA,IACOnqB,EAAA,UACPkpB,EAAA,EACAiB,EAAA,GAAAD,EAAAzzB,IACOuJ,EAAA,UACPkpB,EAAAzyB,EAAA,EAAAyzB,EAAAzzB,EACA0zB,EAAA1zB,IACOuJ,EAAA,WACPkpB,GAAAzyB,EACA0zB,EAAA,EAAA1zB,EAAA,EAAAA,EAAAyzB,GAEAvzB,IACAuyB,MAGA/yB,IACAgzB,EAAAD,EACAA,EAAA,GAGA,MAAAnhC,aAAmCoO,EAAA,GAAA8zB,iBAA8C9zB,EAAA8zB,EAAA,qBAAiDf,QAASC,QAASgB,OAMpJ,GALAztB,GAAA,GAAAA,GAAA,IACAqtB,EAAA,GAAA/pB,EAAA,GAAAtD,EACA/F,IAAAozB,EAAA,IAAA/pB,EAAA,GAAAtD,IAEA0X,EAAArsB,aACA8I,EAAAu5B,aAAA,CAEA,IAAAC,EAAAl0B,EAAAie,EAAA/lB,KAAA,6BAAA+lB,EAAA/lB,KAAA,4BACAi8B,EAAAn0B,EAAAie,EAAA/lB,KAAA,8BAAA+lB,EAAA/lB,KAAA,+BACA,IAAAg8B,EAAA/kC,SACA+kC,EAAyB9kC,qCAAqC4Q,EAAA,wBAC9Die,EAAAlnB,OAAAm9B,IAEA,IAAAC,EAAAhlC,SACAglC,EAAwB/kC,qCAAqC4Q,EAAA,4BAC7Die,EAAAlnB,OAAAo9B,IAEAD,EAAA/kC,SAAA+kC,EAAA,GAAA3oC,MAAAk7B,QAAApkB,KAAAK,KAAA6D,EAAA,IACA4tB,EAAAhlC,SAAAglC,EAAA,GAAA5oC,MAAAk7B,QAAApkB,KAAAK,IAAA6D,EAAA,KAUA,GAPAlG,EAAAtK,IAAA,CACAq+B,uCAA8C9zB,EAAA,MAC9C+zB,oCAA2C/zB,EAAA,MAC3Cg0B,mCAA0Ch0B,EAAA,MAC1Ci0B,+BAAsCj0B,EAAA,QAGtC5F,EAAAm5B,OACA,GAAA7zB,EACA2zB,EAAA/hC,8BAAoD4hC,EAAA,EAAA94B,EAAA85B,oBAA8ChB,EAAA,2CAA0D94B,EAAA+5B,oBACrJ,CACP,MAAAC,EAAAryB,KAAA4B,IAAA2vB,GAAA,GAAAvxB,KAAAC,MAAAD,KAAA4B,IAAA2vB,GAAA,IACArF,EAAA,KACAlsB,KAAAsyB,IAAA,EAAAD,EAAAryB,KAAAwP,GAAA,OACAxP,KAAAuyB,IAAA,EAAAF,EAAAryB,KAAAwP,GAAA,QAEAgjB,EAAAn6B,EAAA+5B,YACAK,EAAAp6B,EAAA+5B,YAAAlG,EACA11B,EAAA6B,EAAA85B,aACAb,EAAA/hC,qBAA2CijC,SAAcC,uBAA4BrB,EAAA,EAAA56B,SAAkC46B,EAAA,EAAAqB,wBAGvH,MAAAC,EAAqB93B,GAAOC,UAAaD,GAAOM,aAAA+C,EAAA,IAChDD,EACAzO,+BAAsCmjC,gBAAsBr1B,EAAAM,eAAA,EAAA4zB,iBAAyDl0B,EAAAM,gBAAA4zB,EAAA,UAErH7kC,cAAAiD,GACA,MAAA0N,EAAAzU,MACA4U,IAAWA,EAAAiB,UAAcpB,EACzBoB,EACA/O,WAAAC,GACAkG,KAAA,gHACAnG,WAAAC,GACA0N,EAAAhF,OAAAg5B,WAAAG,SAAAn0B,EAAAM,gBACAH,EAAA3H,KAAA,uBAAAnG,WAAAC,KAKA,IAAAgjC,GAAA,CACA71B,KAAA,cACAzE,OAAA,CACAg5B,WAAA,CACAO,cAAA,EACAJ,QAAA,EACAW,aAAA,GACAC,YAAA,MAGA1lC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAg0B,WAAA,CACA/qB,aAAA4qB,GAAA5qB,aAAA7J,KAAAY,GACA6F,cAAAguB,GAAAhuB,cAAAzG,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACA,YAAAyU,EAAAhF,OAAA0J,OAAA,OACA1E,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,8BAChC7X,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,4BAChC,MAAA+G,EAAA,CACA9b,cAAA,EACAJ,gBAAA,EACA8B,eAAA,EACAc,qBAAA,EACAqN,gBAAA,EACAzQ,aAAA,EACAoC,gBAAA,EACAyE,kBAAA,GAEAvP,GAAA0C,OAAA8D,EAAAhF,OAAA4jB,GACAplB,GAAA0C,OAAA8D,EAAA8W,eAAA8H,IAEAvvB,eACA,MAAA2Q,EAAAzU,KACA,SAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAg0B,WAAA/qB,gBAEA5Z,cAAAiD,GACA,MAAA0N,EAAAzU,KACA,SAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAg0B,WAAAnuB,cAAAvT,MAKA,MAAAijC,GAAA,CACAlmC,eACA,MAAA2Q,EAAAzU,MACA6V,OAAWA,EAAAP,aAAAC,GAA4Bd,EACvC,QAAAxQ,EAAA,EAAmBA,EAAA4R,EAAA3R,OAAmBD,GAAA,GACtC,MAAA+uB,EAAAnd,EAAAjK,GAAA3H,GACA,IAAAqX,EAAA0X,EAAA,GAAA1X,SACA7G,EAAAhF,OAAAw6B,WAAAC,gBACA5uB,EAAAlE,KAAAK,IAAAL,KAAA4S,IAAAgJ,EAAA,GAAA1X,SAAA,QAEA,MAAA1N,EAAAolB,EAAA,GAAAxY,kBACA2vB,GAAA,IAAA7uB,EACA,IAAA8uB,EAAAD,EACAE,EAAA,EACAvC,GAAAl6B,EACAm6B,EAAA,EAYA,GAXAtzB,EAAAM,eAKOQ,IACP60B,OALArC,EAAAD,EACAA,EAAA,EACAuC,GAAAD,EACAA,EAAA,GAKApX,EAAA,GAAA1yB,MAAAgqC,QAAAlzB,KAAA4B,IAAA5B,KAAA0xB,MAAAxtB,IAAAzF,EAAA3R,OAEAuQ,EAAAhF,OAAAw6B,WAAAjB,aAAA,CAEA,IAAAC,EAAAx0B,EAAAM,eAAAie,EAAA/lB,KAAA,6BAAA+lB,EAAA/lB,KAAA,4BACAi8B,EAAAz0B,EAAAM,eAAAie,EAAA/lB,KAAA,8BAAA+lB,EAAA/lB,KAAA,+BACA,IAAAg8B,EAAA/kC,SACA+kC,EAAyB9kC,qCAAqCsQ,EAAAM,eAAA,wBAC9Die,EAAAlnB,OAAAm9B,IAEA,IAAAC,EAAAhlC,SACAglC,EAAwB/kC,qCAAqCsQ,EAAAM,eAAA,4BAC7Die,EAAAlnB,OAAAo9B,IAEAD,EAAA/kC,SAAA+kC,EAAA,GAAA3oC,MAAAk7B,QAAApkB,KAAAK,KAAA6D,EAAA,IACA4tB,EAAAhlC,SAAAglC,EAAA,GAAA5oC,MAAAk7B,QAAApkB,KAAAK,IAAA6D,EAAA,IAEA0X,EACArsB,yBAAkCmhC,QAASC,qBAAsBsC,iBAAuBD,WAGxFtmC,cAAAiD,GACA,MAAA0N,EAAAzU,MACA6V,OAAWA,EAAA0E,cAAAnF,cAAkCX,EAK7C,GAJAoB,EACA/O,WAAAC,GACAkG,KAAA,gHACAnG,WAAAC,GACA0N,EAAAhF,OAAA+N,kBAAA,IAAAzW,EAAA,CACA,IAAAohC,GAAA,EAEAtyB,EAAAjK,GAAA2O,GAAAhR,cAAA,WACA,GAAA4+B,EAAA,OACA,IAAA1zB,KAAA0K,UAAA,OAEAgpB,GAAA,EACA1zB,EAAA+J,WAAA,EACA,MAAA4pB,EAAA,wCACA,QAAAnkC,EAAA,EAAuBA,EAAAmkC,EAAAlkC,OAA0BD,GAAA,EACjDmR,EAAAtM,QAAAs/B,EAAAnkC,SAOA,IAAAsmC,GAAA,CACAr2B,KAAA,cACAzE,OAAA,CACAw6B,WAAA,CACAjB,cAAA,EACAkB,eAAA,IAGApmC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAw1B,WAAA,CACAvsB,aAAAssB,GAAAtsB,aAAA7J,KAAAY,GACA6F,cAAA0vB,GAAA1vB,cAAAzG,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACA,YAAAyU,EAAAhF,OAAA0J,OAAA,OACA1E,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,8BAChC7X,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,4BAChC,MAAA+G,EAAA,CACA9b,cAAA,EACAJ,gBAAA,EACA8B,eAAA,EACAc,qBAAA,EACApD,aAAA,EACA6G,kBAAA,GAEAvP,GAAA0C,OAAA8D,EAAAhF,OAAA4jB,GACAplB,GAAA0C,OAAA8D,EAAA8W,eAAA8H,IAEAvvB,eACA,MAAA2Q,EAAAzU,KACA,SAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAw1B,WAAAvsB,gBAEA5Z,cAAAiD,GACA,MAAA0N,EAAAzU,KACA,SAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAw1B,WAAA3vB,cAAAvT,MAKA,MAAAyjC,GAAA,CACA1mC,eACA,MAAA2Q,EAAAzU,MAEA0U,MAAA6zB,EAAA5zB,OAAA6zB,EAAA3yB,SAAAT,aAAAc,mBACKzB,EACLhF,EAAAgF,EAAAhF,OAAAg7B,gBACA11B,EAAAN,EAAAM,eACApO,EAAA8N,EAAAmG,UACA8vB,EAAA31B,EAAAwzB,EAAA,EAAA5hC,EAAA6hC,EAAA,EAAA7hC,EACAwjC,EAAAp1B,EAAAtF,EAAA06B,QAAA16B,EAAA06B,OACAvvB,EAAAnL,EAAAk7B,MAEA,QAAA1mC,EAAA,EAAAC,EAAA2R,EAAA3R,OAA2CD,EAAAC,EAAYD,GAAA,GACvD,MAAA+uB,EAAAnd,EAAAjK,GAAA3H,GACAyS,EAAAR,EAAAjS,GACA2mC,EAAA5X,EAAA,GAAAxY,kBACAqwB,GAAAH,EAAAE,EAAAl0B,EAAA,GAAAA,EAAAjH,EAAAq7B,SAEA,IAAAV,EAAAr1B,EAAAo1B,EAAAU,EAAA,EACAR,EAAAt1B,EAAA,EAAAo1B,EAAAU,EAEAE,GAAAnwB,EAAAxD,KAAA4B,IAAA6xB,GAEAxK,EAAAtrB,EAAA,EAAAtF,EAAAu7B,QAAA,EACA5K,EAAArrB,EAAAtF,EAAAu7B,QAAA,IAGA5zB,KAAA4B,IAAAonB,GAAA,OAAAA,EAAA,GACAhpB,KAAA4B,IAAAqnB,GAAA,OAAAA,EAAA,GACAjpB,KAAA4B,IAAA+xB,GAAA,OAAAA,EAAA,GACA3zB,KAAA4B,IAAAoxB,GAAA,OAAAA,EAAA,GACAhzB,KAAA4B,IAAAqxB,GAAA,OAAAA,EAAA,GAEA,MAAAY,iBAA4C7K,OAAgBC,OAAgB0K,iBAA0BV,iBAAuBD,QAI7H,GAFApX,EAAArsB,UAAAskC,GACAjY,EAAA,GAAA1yB,MAAAgqC,OAAA,EAAAlzB,KAAA4B,IAAA5B,KAAA0xB,MAAA+B,IACAp7B,EAAAu5B,aAAA,CAEA,IAAAkC,EAAAn2B,EAAAie,EAAA/lB,KAAA,6BAAA+lB,EAAA/lB,KAAA,4BACAk+B,EAAAp2B,EAAAie,EAAA/lB,KAAA,8BAAA+lB,EAAA/lB,KAAA,+BACA,IAAAi+B,EAAAhnC,SACAgnC,EAA4B/mC,qCAAqC4Q,EAAA,wBACjEie,EAAAlnB,OAAAo/B,IAEA,IAAAC,EAAAjnC,SACAinC,EAA2BhnC,qCAAqC4Q,EAAA,4BAChEie,EAAAlnB,OAAAq/B,IAEAD,EAAAhnC,SAAAgnC,EAAA,GAAA5qC,MAAAk7B,QAAAqP,EAAA,EAAAA,EAAA,GACAM,EAAAjnC,SAAAinC,EAAA,GAAA7qC,MAAAk7B,SAAAqP,EAAA,GAAAA,EAAA,IAKA,GAAQj6B,GAAOM,eAAkBN,GAAOS,sBAAA,CACxC,MAAA+5B,EAAAh2B,EAAA,GAAA9U,MACA8qC,EAAAC,qBAAgCX,YAGhC5mC,cAAAiD,GACA,MAAA0N,EAAAzU,KACAyU,EAAAoB,OACA/O,WAAAC,GACAkG,KAAA,gHACAnG,WAAAC,KAIA,IAAAukC,GAAA,CACAp3B,KAAA,mBACAzE,OAAA,CACAg7B,gBAAA,CACAN,OAAA,GACAa,QAAA,EACAL,MAAA,IACAG,SAAA,EACA9B,cAAA,IAGAllC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACAg2B,gBAAA,CACA/sB,aAAA8sB,GAAA9sB,aAAA7J,KAAAY,GACA6F,cAAAkwB,GAAAlwB,cAAAzG,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,KACA,cAAAyU,EAAAhF,OAAA0J,SAEA1E,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,mCAChC7X,EAAA0X,WAAAtnB,QAAgC4P,EAAAhF,OAAA6c,4BAEhC7X,EAAAhF,OAAAsK,qBAAA,EACAtF,EAAA8W,eAAAxR,qBAAA,IAEAjW,eACA,MAAA2Q,EAAAzU,KACA,cAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAg2B,gBAAA/sB,gBAEA5Z,cAAAiD,GACA,MAAA0N,EAAAzU,KACA,cAAAyU,EAAAhF,OAAA0J,QACA1E,EAAAg2B,gBAAAnwB,cAAAvT,MAKA,MAAAwkC,GAAA,CACAznC,OACA,MAAA2Q,EAAAzU,MACWwrC,OAAAC,GAAuBh3B,EAAAhF,OAClC+C,EAAAiC,EAAAzE,YACAy7B,EAAAh3B,kBAAAjC,GACAiC,EAAA+2B,OAAA/2B,OAAAg3B,EAAAh3B,OACAxG,GAAA0C,OAAA8D,EAAA+2B,OAAA/2B,OAAA8W,eAAA,CACAxR,qBAAA,EACAsD,qBAAA,IAEApP,GAAA0C,OAAA8D,EAAA+2B,OAAA/2B,OAAAhF,OAAA,CACAsK,qBAAA,EACAsD,qBAAA,KAEKpP,GAAAyC,SAAA+6B,EAAAh3B,UACLA,EAAA+2B,OAAA/2B,OAAA,IAAAjC,EAAAvE,GAAA0C,OAAA,GAA4D86B,EAAAh3B,OAAA,CAC5DuF,uBAAA,EACAD,qBAAA,EACAsD,qBAAA,KAEA5I,EAAA+2B,OAAAE,eAAA,GAEAj3B,EAAA+2B,OAAA/2B,OAAAG,IAAAzP,SAAAsP,EAAAhF,OAAA+7B,OAAAG,sBACAl3B,EAAA+2B,OAAA/2B,OAAAvN,GAAA,MAAAuN,EAAA+2B,OAAAI,eAEA9nC,eACA,MAAA2Q,EAAAzU,KACA6rC,EAAAp3B,EAAA+2B,OAAA/2B,OACA,IAAAo3B,EAAA,OACA,MAAAzuB,EAAAyuB,EAAAzuB,aACAD,EAAA0uB,EAAA1uB,aACA,GAAAA,GAAwBhZ,EAACgZ,GAAAxX,SAAA8O,EAAAhF,OAAA+7B,OAAAM,uBAAA,OACzB,wBAAA1uB,GAAA,OAAAA,EAAA,OACA,IAAAkD,EAMA,GAJAA,EADAurB,EAAAp8B,OAAA8M,KACAtH,SAA8B9Q,EAAC0nC,EAAA1uB,cAAApX,KAAA,+BAE/BqX,EAEA3I,EAAAhF,OAAA8M,KAAA,CACA,IAAAwvB,EAAAt3B,EAAA8F,YACA9F,EAAAoB,OAAAjK,GAAAmgC,GAAApmC,SAAA8O,EAAAhF,OAAA+M,uBACA/H,EAAA+K,UAEA/K,EAAAgL,YAAAhL,EAAAW,WAAA,GAAA7K,WACAwhC,EAAAt3B,EAAA8F,aAEA,MAAAyF,EAAAvL,EAAAoB,OAAAjK,GAAAmgC,GAAAp/B,qCAA4F2T,OAAa1U,GAAA,GAAArK,QACzG6O,EAAAqE,EAAAoB,OAAAjK,GAAAmgC,GAAAx/B,qCAA4F+T,OAAa1U,GAAA,GAAArK,QACzG+e,EAAA,qBAAAN,EAAA5P,EACA,qBAAAA,EAAA4P,EACA5P,EAAA27B,IAAA/rB,EAAA5P,EACA4P,EAEAvL,EAAAiK,QAAA4B,IAEAxc,OAAAkoC,GACA,MAAAv3B,EAAAzU,KACA6rC,EAAAp3B,EAAA+2B,OAAA/2B,OACA,IAAAo3B,EAAA,OAEA,MAAAt0B,EAAA,SAAAs0B,EAAAp8B,OAAA8H,cACAs0B,EAAAxrB,uBACAwrB,EAAAp8B,OAAA8H,cAEA,GAAA9C,EAAAsH,YAAA8vB,EAAA9vB,UAAA,CACA,IACAkwB,EADAC,EAAAL,EAAAtxB,YAEA,GAAAsxB,EAAAp8B,OAAA8M,KAAA,CACAsvB,EAAAh2B,OAAAjK,GAAAsgC,GAAAvmC,SAAAkmC,EAAAp8B,OAAA+M,uBACAqvB,EAAArsB,UAEAqsB,EAAApsB,YAAAosB,EAAAz2B,WAAA,GAAA7K,WACA2hC,EAAAL,EAAAtxB,aAGA,MAAA4xB,EAAAN,EAAAh2B,OAAAjK,GAAAsgC,GAAAv/B,qCAAgH8H,EAAAsH,eAAiBnQ,GAAA,GAAArK,QACjI6qC,EAAAP,EAAAh2B,OAAAjK,GAAAsgC,GAAA3/B,qCAAgHkI,EAAAsH,eAAiBnQ,GAAA,GAAArK,QACjI0qC,EAAA,qBAAAE,EAAAC,EACA,qBAAAA,EAAAD,EACAC,EAAAF,MAAAC,EAAAD,EACAE,EAAAF,IAAAC,EAAAC,EACAD,OAEAF,EAAAx3B,EAAAsH,UAEA8vB,EAAA9wB,qBAAArW,QAAAunC,GAAA,IACAJ,EAAAp8B,OAAAsJ,eAEAkzB,EADAA,EAAAC,EACAD,EAAA70B,KAAAC,MAAAE,EAAA,KAEA00B,EAAA70B,KAAAC,MAAAE,EAAA,KAES00B,EAAAC,IACTD,IAAA10B,EAAA,GAEAs0B,EAAAntB,QAAAutB,EAAAD,EAAA,OAAA7jC,IAKA,IAAAkkC,EAAA,EACA,MAAAC,EAAA73B,EAAAhF,OAAA+7B,OAAAM,sBAOA,GALAr3B,EAAAhF,OAAA8H,cAAA,IAAA9C,EAAAhF,OAAAsJ,iBACAszB,EAAA53B,EAAAhF,OAAA8H,eAGAs0B,EAAAh2B,OAAApQ,YAAA6mC,GACAT,EAAAp8B,OAAA8M,KACA,QAAAtY,EAAA,EAAqBA,EAAAooC,EAAsBpoC,GAAA,EAC3C4nC,EAAAz2B,WAAA1S,sCAAsE+R,EAAAsH,UAAA9X,OAAqBkB,SAAAmnC,QAG3F,QAAAroC,EAAA,EAAqBA,EAAAooC,EAAsBpoC,GAAA,EAC3C4nC,EAAAh2B,OAAAjK,GAAA6I,EAAAsH,UAAA9X,GAAAkB,SAAAmnC,KAKA,IAAAC,GAAA,CACAr4B,KAAA,SACAzE,OAAA,CACA+7B,OAAA,CACA/2B,OAAA,KACAq3B,sBAAA,4BACAH,qBAAA,4BAGA7nC,SACA,MAAA2Q,EAAAzU,KACAiO,GAAA0C,OAAA8D,EAAA,CACA+2B,OAAA,CACA/2B,OAAA,KACAmZ,KAAA2d,GAAA3d,KAAA/Z,KAAAY,GACA6I,OAAAiuB,GAAAjuB,OAAAzJ,KAAAY,GACAm3B,aAAAL,GAAAK,aAAA/3B,KAAAY,OAIAvN,GAAA,CACApD,aACA,MAAA2Q,EAAAzU,MACAwrC,OAAaA,GAAS/2B,EAAAhF,OACtB+7B,KAAA/2B,SACAA,EAAA+2B,OAAA5d,OACAnZ,EAAA+2B,OAAAluB,QAAA,KAEAxZ,cACA,MAAA2Q,EAAAzU,KACAyU,EAAA+2B,OAAA/2B,QACAA,EAAA+2B,OAAAluB,UAEAxZ,SACA,MAAA2Q,EAAAzU,KACAyU,EAAA+2B,OAAA/2B,QACAA,EAAA+2B,OAAAluB,UAEAxZ,SACA,MAAA2Q,EAAAzU,KACAyU,EAAA+2B,OAAA/2B,QACAA,EAAA+2B,OAAAluB,UAEAxZ,iBACA,MAAA2Q,EAAAzU,KACAyU,EAAA+2B,OAAA/2B,QACAA,EAAA+2B,OAAAluB,UAEAxZ,cAAAiD,GACA,MAAA0N,EAAAzU,KACA6rC,EAAAp3B,EAAA+2B,OAAA/2B,OACAo3B,GACAA,EAAAvxB,cAAAvT,IAEAjD,gBACA,MAAA2Q,EAAAzU,KACA6rC,EAAAp3B,EAAA+2B,OAAA/2B,OACAo3B,GACAp3B,EAAA+2B,OAAAE,eAAAG,GACAA,EAAAna,aAQA,MAAA1d,GAAA,CACA6b,GACAC,GACAE,GACAE,GACAuB,GACA2B,GACAoB,GACA4C,GACAU,GACA+C,GACAgC,GACAU,GACAyD,GACAuB,GACAsB,GACAuB,GACAoB,GACAQ,GACAU,GACAW,GACA0B,GACAQ,GACAe,GACAiB,IAGiB,qBAANpe,GAAMla,MACfka,GAAMla,IAAOka,GAAM3gB,MAAAyG,IACnBka,GAAM5Z,cAAiB4Z,GAAM3gB,MAAA+G,eAG/B4Z,GAAMla,IAAAD,IAES,IAAAw4B,GAAA,GC59NfC,cAAA,CACArjC,KAAA,WACA,UAGA2B,MAAA,CACArK,WAAA,CACAwjB,KAAAlR,MACA05B,QAAA,WACA,UAEAC,SAAA,IAGAC,QAdA,aAgBAC,QAAA,CACAC,YADA,WAEA9sC,KAAA+sC,UAAA,WACA,IAAAP,GAAA,qBAEAjwB,MAAA,EAEA4b,WAAA,CACA5xB,GAAA,4BAMAyN,WAAA,KChDmcg5B,GAAA,4BCQncC,GAAgBp/B,OAAAq/B,GAAA,KAAAr/B,CACdm/B,GACA3rC,EACAM,GACF,EACA,KACA,KACA,MAIewrC,GAAAF,WCnBXG,GAAM,WAAgB,IAAArtC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,aAAwB,CAAAN,EAAAstC,GAAA,GAAAltC,EAAA,OAAsBE,YAAA,iBAA4B,CAAAF,EAAA,KAAAJ,EAAAuB,GAAAvB,EAAA,mBAAAutC,EAAArpC,GAAkD,OAAA9D,EAAA,MAAgBqB,IAAAyC,EAAAiD,GAAA,CAAUq9B,MAAA,SAAAgJ,GAAkD,OAAzBA,EAAAxmB,kBAAyBhnB,EAAAytC,YAAAF,MAA+B,CAAAntC,EAAA,eAAoBI,MAAA,CAAO0P,GAAA,SAAAq9B,EAAAlkC,KAAAqkC,UAAiC,CAAAttC,EAAA,OAAYE,YAAA,SAAoB,CAAAF,EAAA,OAAYutC,WAAA,EAAax5B,KAAA,OAAAy5B,QAAA,SAAA3nC,MAAA,oDAAAsnC,EAAAlkC,KAAAwkC,SAAA,uBAAAC,WAAA,wGAAoP1tC,EAAA,OAAcE,YAAA,QAAmB,CAAAF,EAAA,MAAWE,YAAA,YAAAU,SAAA,CAAkCC,YAAAjB,EAAAkB,GAAAqsC,EAAAlkC,KAAA0kC,OAAA,GAAA55B,SAAgD/T,EAAA,KAAUE,YAAA,cAAAU,SAAA,CAAoCC,YAAAjB,EAAAkB,GAAAqsC,EAAAlkC,KAAA2kC,kBAA0C,KAAU,QACt5BC,GAAe,YAAiB,IAAAjuC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,iBAA4B,CAAAF,EAAA,MAAAJ,EAAAkuC,GAAA,0BCwBhJC,GAAA,CACA9kC,KAAA,WACA,UAGA2B,MAAA,CACAnK,UAAA,CACAsjB,KAAAlR,MACA05B,QAAA,WACA,UAEAyB,UAAA,IAGAtB,QAAAh/B,OAAAugC,EAAA,KAAAvgC,CAAA,GACAA,OAAAwgC,GAAA,KAAAxgC,CAAA,CACA,qBAFA,CAKA2/B,YALA,SAAAc,GAKA,IAAAC,EAAAD,EAAAllC,KAAAwkC,EAAAW,EAAAX,SAAAH,EAAAc,EAAAd,QAAAM,EAAAQ,EAAAR,SAAAD,EAAAS,EAAAT,OACA9tC,KAAAwuC,iBAAA,CAAAZ,WAAAH,UAAAM,WAAAD,cAIA95B,WAAA,ICjDqcy6B,GAAA,GCQjcC,cAAY7gC,OAAAq/B,GAAA,KAAAr/B,CACd4gC,GACArB,GACAY,IACF,EACA,KACA,WACA,OAIeW,GAAAD,WCKfE,GAAA,CACA16B,KAAA,OACA9K,KAAA,WACA,OAEAylC,QAAA,KAEAluC,OAAA,GAEAE,KAAA,CACAiuC,KAAA,GACAhuC,SAAA,GACAiuC,eAAA,GAGAC,cAAA,EACA9tC,SAAA,CACA+tC,KAAA,SACAC,KAAA,SACAC,KAAA,WACAC,KAAA,UAEAjuC,YAAA,OAEAg/B,QAAA,GAEAkP,aAAA,IAGAC,SAAAzhC,OAAAugC,EAAA,KAAAvgC,CAAA,GACAA,OAAAwgC,GAAA,KAAAxgC,CAAA,CACA0hC,QAAA,eAFA,CAKAC,QAAA,WACA,OAAAxvC,KAAAa,KAAAC,SAAAoD,OAAAlE,KAAAa,KAAAkuC,gBAGA1wB,WAAA,WACA,OAAAre,KAAAuvC,QAAA,oEAGAE,QA1CA,WA2CAzvC,KAAA0vC,gBACA1vC,KAAA2vC,kBAEA/C,QA9CA,WA8CA,IAAAgD,EAAA5vC,KACA2D,WAAA,WACAisC,EAAAf,QAAA,IAAAgB,EAAAhhC,EAAA,kBACAihC,YAAA,EACAC,cAAA,EACAC,eAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,cAAA,EACAC,KAAA,EACA7L,OAAA,EACA8L,UAAA,IAIAT,EAAAf,QAAA3nC,GAAA,yBAEA0oC,EAAAP,aAAA,IAGAO,EAAAf,QAAA3nC,GAAA,oBACA,IAAA0oC,EAAAZ,eAAAY,EAAAJ,QAEA,OADAI,EAAAzuC,YAAA,OACAyuC,EAAA1uC,SAAA,QAGAkW,KAAA4B,IAAA42B,EAAAf,QAAAyB,YAAAV,EAAAzP,SAAA/oB,KAAA4B,IAAA42B,EAAAf,QAAAhxB,KAAA+xB,EAAAP,YACAO,EAAAzuC,YAAA,OAEAyuC,EAAAzuC,YAAA,SAIAyuC,EAAAf,QAAA3nC,GAAA,uBACA0oC,EAAAf,QAAAyB,YAAAV,EAAAf,QAAAhxB,GACA+xB,EAAAD,iBAGAC,EAAAf,QAAA0B,SAAA,EAAAX,EAAAf,QAAAhxB,EAAA+xB,EAAAzP,SAGAyP,EAAAP,aAAA,KAEA,MAEAxC,QAAA,CAEA6C,cAFA,WAEA,IAAAc,EAAAxwC,KACAywC,EAAA,KAAAC,IAAAC,EAAA,KAAAC,KAAAjwC,OAAA,CAAA+O,MAAA,kBACAmhC,KAAA,SAAAvC,KAAAQ,KAAA,IAAAgC,EAAAxC,EAAAllC,KAAA0nC,OACAN,EAAA7vC,OAAAmwC,EACAN,EAAAO,MAAApwC,OAAAmsC,iBAIA6C,eAVA,WAUA,IAAAqB,EAAAhxC,KACAixC,EAAA,EACA,IACAjxC,KAAA6uC,QAAAqC,UACA,MAAAzpC,IAOA,GALAzH,KAAAgvC,eACAiC,EAAAjxC,KAAAa,KAAAC,SAAAoD,SAIAlE,KAAAgvC,eAAAhvC,KAAAwvC,QAEA,OADAxvC,KAAAmB,YAAA,OACAnB,KAAAkB,SAAA,QAIAlB,KAAAmB,YAAA,OACAsvC,EAAA,KAAAC,IAAA,GAAAS,OAAAR,EAAA,KAAAC,KAAA/vC,KAAA,gBAAAswC,OAAAF,GAAA,CAAAvhC,MAAA,kBACAmhC,KAAA,SAAAO,GAAA,IAAAtC,EAAAsC,EAAAtC,KAAAhuC,EAAAswC,EAAAtwC,SAAAiuC,EAAAqC,EAAArC,eACAiC,EAAAhC,cACAgC,EAAAnwC,KAAA,CAAAiuC,OAAAhuC,WAAAiuC,kBAEAiC,EAAAhC,cAAA,GAEAgC,EAAAnwC,KAAAC,SAAAkwC,EAAAnwC,KAAAC,SAAAqwC,OAAArwC,GAEAkwC,EAAA7vC,YAAA,UAGAkwC,YAxCA,WAyCA,IAAAC,EAAA,IAAA7tC,KACA8tC,EAAAD,EAAAE,cACAC,EAAAH,EAAAI,WAAA,EACAC,EAAAL,EAAAM,UAEA,OADAH,IAAA,GAAAA,EAAA,IAAAN,OAAAM,GACA,GAAAN,OAAAI,EAAA,KAAAJ,OAAAM,EAAA,KAAAN,OAAAQ,KAGA39B,WAAA,CACAm5B,UACAwB,cCtKkbkD,GAAA,GCQ9aC,cAAYjkC,OAAAq/B,GAAA,KAAAr/B,CACdgkC,GACA/xC,EACAsB,GACF,EACA,KACA,WACA,OAIe2wC,EAAA,WAAAD","file":"js/chunk-17711101.abd5f0f2.js","sourcesContent":["import mod from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=a9bef3e8&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=a9bef3e8&scoped=true&lang=scss&\"","import mod from \"-!../../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./RankList.vue?vue&type=style&index=0&id=3b1ab376&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./RankList.vue?vue&type=style&index=0&id=3b1ab376&scoped=true&lang=scss&\"","import mod from \"-!../../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Banner.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Banner.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('div',{style:(_vm.autoHeight),attrs:{\"id\":\"scrollWrapper\"}},[_c('div',{staticClass:\"scroll-con\"},[_c('Banner',{ref:\"banner\",attrs:{\"bannerList\":_vm.banner}}),_c('RankList',{attrs:{\"songsList\":_vm.rank.songlist}}),_c('p',{staticClass:\"loading\",domProps:{\"textContent\":_vm._s(_vm.loadTips[_vm.curLoadTips])}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"banner\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.bannerList),function(banner,index){return _c('div',{key:banner.id,staticClass:\"swiper-slide\"},[_c('img',{attrs:{\"src\":banner.picUrl}})])}),0),_c('div',{staticClass:\"swiper-pagination\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","<template>\r\n    <div class=\"banner\">\r\n        <div class=\"swiper-container\">\r\n            <div class=\"swiper-wrapper\">\r\n                <div class=\"swiper-slide\" v-for=\"(banner, index) in bannerList\" :key=\"banner.id\">\r\n                    <img :src=\"banner.picUrl\">\r\n                </div>\r\n            </div>\r\n            <!-- 如果需要分页器 -->\r\n            <div class=\"swiper-pagination\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// 载入swiper轮播插件与其css样式\r\nimport Swiper from 'swiper'\r\nimport 'swiper/dist/css/swiper.min.css'\r\nexport default {\r\n    data: function() {\r\n        return {\r\n        }\r\n    },\r\n    props: {\r\n        bannerList: {\r\n            type: Array,\r\n            default: function() {\r\n                return []\r\n            },\r\n            require: true\r\n        }\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n        _initBanner() {\r\n            this.$nextTick(() => {\r\n                let banner = new Swiper('.swiper-container', {\r\n                    // 是否开启循环\r\n                    loop: true,\r\n                    // 如果需要分页器\r\n                    pagination: {\r\n                      el: '.swiper-pagination',\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    },\r\n    components: {\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n.banner{\r\n    .swiper-slide{\r\n        img{\r\n            width: 100%;\r\n        }\r\n    }\r\n    \r\n    .swiper-pagination-bullet-active{\r\n        width: 15px;\r\n        background: #fff;\r\n        opacity: .3;\r\n        border-radius: 5px;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Banner.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Banner.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Banner.vue?vue&type=template&id=7abbd2cf&\"\nimport script from \"./Banner.vue?vue&type=script&lang=js&\"\nexport * from \"./Banner.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Banner.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"rank-list\"},[_vm._m(0),_c('div',{staticClass:\"rank-list-con\"},[_c('ul',_vm._l((_vm.songsList),function(song,i){return _c('li',{key:i,on:{\"click\":function($event){$event.stopPropagation();return _vm.addPlayList(song)}}},[_c('router-link',{attrs:{\"to\":'/play/'+song.data.songmid}},[_c('div',{staticClass:\"thumb\"},[_c('img',{directives:[{name:\"lazy\",rawName:\"v-lazy\",value:('https://y.gtimg.cn/music/photo_new/T002R90x90M000'+ song.data.albummid +'.jpg?max_age=2592000'),expression:\"'https://y.gtimg.cn/music/photo_new/T002R90x90M000'+ song.data.albummid +'.jpg?max_age=2592000'\"}]})]),_c('div',{staticClass:\"info\"},[_c('h3',{staticClass:\"song-name\",domProps:{\"textContent\":_vm._s(song.data.singer[0].name)}}),_c('p',{staticClass:\"singer-name\",domProps:{\"textContent\":_vm._s(song.data.songname)}})])])],1)}),0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"rank-list-tit\"},[_c('h2',[_vm._v(\"排行榜\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"rank-list\">\r\n        <div class=\"rank-list-tit\">\r\n            <h2>排行榜</h2>\r\n        </div>\r\n        <div class=\"rank-list-con\">\r\n            <ul>\r\n                <li v-for=\"(song, i) in songsList\" :key=\"i\" @click.stop=\"addPlayList(song)\">\r\n                    <router-link :to=\"'/play/'+song.data.songmid\">\r\n                        <div class=\"thumb\">\r\n                            <img v-lazy=\"'https://y.gtimg.cn/music/photo_new/T002R90x90M000'+ song.data.albummid +'.jpg?max_age=2592000'\">\r\n                        </div>\r\n                        <div class=\"info\">\r\n                            <h3 class=\"song-name\" v-text=\"song.data.singer[0].name\"></h3>\r\n                            <p class=\"singer-name\" v-text=\"song.data.songname\"></p>\r\n                        </div>\r\n                    </router-link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapMutations} from 'vuex'\r\nexport default {\r\n    data: function() {\r\n        return {\r\n        }\r\n    },\r\n    props: {\r\n        songsList: {\r\n            type: Array,\r\n            default: function() {\r\n                return []\r\n            },\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations([\r\n            'ADD_TO_SONG_LIST'\r\n        ]),\r\n        // 添加歌曲部分信息(此时缺少播放地址)到播放列表\r\n        addPlayList({data: {albummid, songmid, songname, singer}}) {\r\n            this.ADD_TO_SONG_LIST({albummid, songmid, songname, singer})\r\n            \r\n        }\r\n    },\r\n    components: {\r\n    }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.rank-list{\r\n    &-con{\r\n        li{\r\n            padding: 0 10px;\r\n            margin-bottom: 20px;\r\n            a{\r\n                display: flex;\r\n            }\r\n            .thumb{\r\n                img{\r\n                    width: 60px;\r\n                    height: 60px;\r\n                }\r\n            }\r\n            .info{\r\n                margin-left: 20px;\r\n                margin-top: 15px;\r\n                h3{\r\n                    color: #fff;\r\n                    font-size: 15px;\r\n                    margin-bottom: 5px;\r\n                }\r\n                p{\r\n                    font-size: 12px;\r\n                    color: #666;\r\n                    white-space: nowrap;\r\n                    overflow: hidden;\r\n                    text-overflow: ellipsis;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./RankList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./RankList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RankList.vue?vue&type=template&id=3b1ab376&scoped=true&\"\nimport script from \"./RankList.vue?vue&type=script&lang=js&\"\nexport * from \"./RankList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RankList.vue?vue&type=style&index=0&id=3b1ab376&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3b1ab376\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"home\">\n        <div id=\"scrollWrapper\" :style=\"autoHeight\">\n            <div class=\"scroll-con\">\n                <Banner :bannerList=\"banner\" ref=\"banner\"></Banner>\n                <RankList :songsList=\"rank.songlist\"></RankList>\n                <p class=\"loading\" v-text=\"loadTips[curLoadTips]\"></p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n// 载入插件\nimport IScroll from 'iscroll/build/iscroll-probe'\n\n// 载入接口\nimport API from '@/api/api'\nimport HTTP from '@/utils/http'\n\nimport Banner from 'COMPONENTS/home/Banner'\nimport RankList from 'COMPONENTS/home/RankList'\nimport {mapGetters} from 'vuex'\n\nexport default {\n    name: 'home',\n    data: function() {\n        return {\n            // 滚动插件实例\n            iscroll: null,\n            // 轮播\n            banner: [],\n            // 歌曲排行榜\n            rank: {\n                code: '',\n                songlist: [],\n                total_song_num: 0\n            },\n            // rank请求是否初次加载\n            isFirstFetch: true,\n            loadTips: {\n                stp1: '上拉加载更多',\n                stp2: '释放开始加载',\n                stp3: '数据加载中...',\n                stp4: '已无更多数据'\n            },\n            curLoadTips: 'stp1',\n            // 滚动偏移量\n            offsetY: 30,\n            // 释放已经结束滚动\n            isEndScroll: true\n        }\n    },\n    computed: {\n        ...mapGetters({\n            curSong: 'getCurSong'\n        }),\n        // 是否还有数据可请求\n        hasMore: function() {\n            return this.rank.songlist.length < this.rank.total_song_num\n        },\n        // 是否有miniplayer在显示，动态调整滚动区域的高度\n        autoHeight: function() {\n            return this.curSong ? 'height: calc(100vh - 85px - 60px)' : 'height: calc(100vh - 85px)'\n        }\n    },\n    created() {\n        this.getBannerList()\n        this.updateRankList()\n    },\n    mounted() {\n        setTimeout(() => {\n            this.iscroll = new IScroll('#scrollWrapper', {\n                mouseWheel: true,\n                useTransform: true,\n                useTransition: true,\n                disableMouse: true,\n                disablePointer: true,\n                disableTouch: false,\n                tap: false,\n                click: true,\n                probeType: 2\n            })\n\n            // 滚动开始监听\n            this.iscroll.on('scrollStart', () => {\n                // 滚动未结束\n                this.isEndScroll = false\n            })\n            // 滚动中监听\n            this.iscroll.on('scroll', () => {\n                if (!this.isFirstFetch && !this.hasMore) {\n                    this.curLoadTips = 'stp4'\n                    return this.loadTips['stp4']\n                }\n\n                if(Math.abs(this.iscroll.maxScrollY) + this.offsetY <= Math.abs(this.iscroll.y) && !this.isEndScroll) {\n                    this.curLoadTips = 'stp2'\n                } else {\n                    this.curLoadTips = 'stp1'\n                }\n            })\n            // 滚动结束监听\n            this.iscroll.on('scrollEnd', () => {\n                if(this.iscroll.maxScrollY >= this.iscroll.y) {\n                    this.updateRankList()\n                }\n\n                this.iscroll.scrollTo(0, this.iscroll.y + this.offsetY);\n                \n                // 滚动已经结束\n                this.isEndScroll = true\n            })\n        }, 500);\n    },\n    methods: {\n        // 获取banner数据方法\n        getBannerList() {\n            HTTP.get(API.home.banner, {param: 'jsonpCallback'})\n            .then(({code, data: {slider}}) => {\n                this.banner = slider\n                this.$refs.banner._initBanner()\n            })\n        },\n        // 加载歌曲排行榜数据\n        updateRankList() {\n            let beginNum = 0;\n            try{\n                this.iscroll.refresh()\n            } catch(e) {\n            }\n            if (!this.isFirstFetch) {\n                beginNum = this.rank.songlist.length\n            }\n\n            // 当数据已经获取全部后限制不能再发送请求\n            if(!this.isFirstFetch && !this.hasMore) {\n                this.curLoadTips = 'stp4'\n                return this.loadTips['stp4']\n            } \n\n\n            this.curLoadTips = 'stp3';\n            HTTP.get(`${API.home.rank}&song_begin=${beginNum}`, {param: 'jsonpCallback'})\n            .then(({code, songlist, total_song_num}) => {\n                if (this.isFirstFetch) {\n                    this.rank = {code, songlist, total_song_num}\n                    // 修改初次加载标志为false\n                    this.isFirstFetch = false\n                } else {\n                    this.rank.songlist = this.rank.songlist.concat(songlist)\n                }\n                this.curLoadTips = 'stp1';\n            })\n        },\n        calcDateStr() {\n            let timeStamp = new Date()\n            let year = timeStamp.getFullYear()\n            let month = timeStamp.getMonth() + 1\n            let day = timeStamp.getDate()\n            month = month > 10 ? month : `0${month}`\n            return `${year}-${month}-${day}`\n        }\n    },\n    components: {\n        Banner,\n        RankList\n    }\n}\n</script>\n<style scoped lang=\"scss\">\n@import 'SCSS/index';\n</style>\n","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--12-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=a9bef3e8&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=a9bef3e8&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.0@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a9bef3e8\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}